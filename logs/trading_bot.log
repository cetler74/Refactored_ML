2025-03-27 21:32:39,792 - root - INFO - Frontend: 2025-03-27 21:32:39,792 - __main__ - INFO - Bot initialized
2025-03-27 21:32:39,793 - root - INFO - Frontend: 2025-03-27 21:32:39,792 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:32:39,793 - root - INFO - Frontend: 2025-03-27 21:32:39,793 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 21:32:39,794 - root - INFO - Frontend: 2025-03-27 21:32:39,794 - app.core.orchestrator - INFO - Scheduler initialized and started
2025-03-27 21:32:39,794 - root - INFO - Frontend: 2025-03-27 21:32:39,794 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:32:39,794 - root - INFO - Frontend: 2025-03-27 21:32:39,794 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 21:32:39,798 - root - INFO - Frontend: 2025-03-27 21:32:39,798 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:32:39,799 - root - INFO - Frontend: 2025-03-27 21:32:39,798 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:32:39,799 - root - INFO - Frontend: 2025-03-27 21:32:39,798 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 21:32:39,799 - root - INFO - Frontend: 2025-03-27 21:32:39,798 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 21:32:39,799 - root - INFO - Frontend: 2025-03-27 21:32:39,799 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 21:32:39,799 - root - INFO - Frontend: 2025-03-27 21:32:39,799 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:32:39,799 - root - INFO - Frontend: 2025-03-27 21:32:39,799 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:32:39,799 - root - INFO - Frontend: 2025-03-27 21:32:39,799 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:32:39,811 - root - INFO - Frontend: 2025-03-27 21:32:39,811 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.database.manager - INFO - Database connection successful
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:32:39,840 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:32:39,841 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:32:39,841 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:32:39,841 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:32:39,841 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:32:39,841 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:32:39,841 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:32:39,841 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:32:39,841 - root - INFO - Frontend: 2025-03-27 21:32:39,840 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:32:39,842 - root - INFO - Frontend: 2025-03-27 21:32:39,842 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:32:39,842 - root - INFO - Frontend: 2025-03-27 21:32:39,842 - app.database.manager - INFO - Database connection established
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,842 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - app.core.orchestrator - INFO - Scheduling periodic jobs...
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_heartbeat" to job store "default"
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - app.core.orchestrator - INFO - All periodic jobs scheduled.
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - app.core.orchestrator - INFO - Trading bot started successfully
2025-03-27 21:32:39,843 - root - INFO - Frontend: 2025-03-27 21:32:39,843 - __main__ - INFO - Bot started in simulation mode
2025-03-27 21:32:39,843 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 21:32:39,843 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 21:32:40,408 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 21:32:40,408 - root - INFO - Frontend: INFO:     192.168.1.134:51632 - "GET / HTTP/1.1" 200 OK
2025-03-27 21:32:40,410 - root - INFO - Frontend: INFO:     192.168.1.134:51633 - "GET /manifest.json HTTP/1.1" 200 OK
2025-03-27 21:32:40,415 - root - INFO - Frontend: INFO:     192.168.1.134:51634 - "GET /static/js/main.bcb6dd21.js HTTP/1.1" 404 Not Found
2025-03-27 21:32:40,415 - root - INFO - Frontend: INFO:     192.168.1.134:51632 - "GET /static/js/main.2abb7c74.js HTTP/1.1" 200 OK
2025-03-27 21:32:40,547 - root - INFO - Frontend: INFO:     ('192.168.1.134', 51635) - "WebSocket /ws" [accepted]
2025-03-27 21:32:40,547 - root - INFO - Frontend: 2025-03-27 21:32:40,547 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 21:32:40,547 - root - INFO - Frontend: 2025-03-27 21:32:40,547 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:32:40,547 - root - INFO - Frontend: INFO:     connection open
2025-03-27 21:32:40,548 - root - INFO - Frontend: 2025-03-27 21:32:40,548 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:32:40,548 - root - INFO - Frontend: 2025-03-27 21:32:40,548 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:32:40.548413"}
2025-03-27 21:32:40,548 - root - INFO - Frontend: 2025-03-27 21:32:40,548 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:32:40,548 - root - INFO - Frontend: 2025-03-27 21:32:40,548 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:32:40,548 - root - INFO - Frontend: 2025-03-27 21:32:40,548 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:32:40.548413", "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 21:32:47,514 - root - INFO - Frontend: 2025-03-27 21:32:47,514 - __main__ - INFO - WebSocket client disconnected
2025-03-27 21:32:47,514 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 21:32:49,392 - root - INFO - Frontend: INFO:     ('192.168.1.134', 51636) - "WebSocket /ws" [accepted]
2025-03-27 21:32:49,392 - root - INFO - Frontend: 2025-03-27 21:32:49,392 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 21:32:49,392 - root - INFO - Frontend: 2025-03-27 21:32:49,392 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:32:49,393 - root - INFO - Frontend: INFO:     connection open
2025-03-27 21:32:49,394 - root - INFO - Frontend: 2025-03-27 21:32:49,394 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:32:49,394 - root - INFO - Frontend: 2025-03-27 21:32:49,394 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:32:49.394727"}
2025-03-27 21:32:49,395 - root - INFO - Frontend: 2025-03-27 21:32:49,394 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:32:49,395 - root - INFO - Frontend: 2025-03-27 21:32:49,394 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:32:49,395 - root - INFO - Frontend: 2025-03-27 21:32:49,394 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:32:49.394727", "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 21:32:54,845 - root - INFO - Frontend: 2025-03-27 21:32:54,845 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:32:54,847 - root - INFO - Frontend: 2025-03-27 21:32:54,847 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:32:54,847 - root - INFO - Frontend: 2025-03-27 21:32:54,847 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:32:54.847206"}
2025-03-27 21:32:54,847 - root - INFO - Frontend: 2025-03-27 21:32:54,847 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:32:54,847 - root - INFO - Frontend: 2025-03-27 21:32:54,847 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:32:59,620 - root - INFO - Frontend: INFO:     192.168.1.134:51637 - "GET / HTTP/1.1" 200 OK
2025-03-27 21:32:59,626 - root - INFO - Frontend: 2025-03-27 21:32:59,626 - __main__ - INFO - WebSocket client disconnected
2025-03-27 21:32:59,627 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 21:32:59,633 - root - INFO - Frontend: INFO:     192.168.1.134:51637 - "GET /manifest.json HTTP/1.1" 200 OK
2025-03-27 21:32:59,638 - root - INFO - Frontend: INFO:     192.168.1.134:51638 - "GET /static/js/main.2abb7c74.js HTTP/1.1" 304 Not Modified
2025-03-27 21:32:59,684 - root - INFO - Frontend: INFO:     ('192.168.1.134', 51639) - "WebSocket /ws" [accepted]
2025-03-27 21:32:59,684 - root - INFO - Frontend: 2025-03-27 21:32:59,684 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 21:32:59,685 - root - INFO - Frontend: 2025-03-27 21:32:59,684 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:32:59,685 - root - INFO - Frontend: INFO:     connection open
2025-03-27 21:32:59,686 - root - INFO - Frontend: 2025-03-27 21:32:59,686 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:32:59,686 - root - INFO - Frontend: 2025-03-27 21:32:59,686 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:32:59.686037"}
2025-03-27 21:32:59,686 - root - INFO - Frontend: 2025-03-27 21:32:59,686 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:32:59,686 - root - INFO - Frontend: 2025-03-27 21:32:59,686 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:32:59,686 - root - INFO - Frontend: 2025-03-27 21:32:59,686 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:32:59.686037", "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 21:33:04,358 - root - INFO - Frontend: INFO:     192.168.1.134:51637 - "GET / HTTP/1.1" 200 OK
2025-03-27 21:33:04,363 - root - INFO - Frontend: INFO:     192.168.1.134:51638 - "GET /manifest.json HTTP/1.1" 200 OK
2025-03-27 21:33:04,366 - root - INFO - Frontend: INFO:     192.168.1.134:51637 - "GET /static/js/main.2abb7c74.js HTTP/1.1" 304 Not Modified
2025-03-27 21:33:04,400 - root - INFO - Frontend: INFO:     ('192.168.1.134', 51640) - "WebSocket /ws" [accepted]
2025-03-27 21:33:04,400 - root - INFO - Frontend: 2025-03-27 21:33:04,400 - __main__ - INFO - WebSocket client connected. Total clients: 2
2025-03-27 21:33:04,400 - root - INFO - Frontend: 2025-03-27 21:33:04,400 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:33:04,400 - root - INFO - Frontend: INFO:     connection open
2025-03-27 21:33:04,402 - root - INFO - Frontend: 2025-03-27 21:33:04,402 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:33:04,402 - root - INFO - Frontend: 2025-03-27 21:33:04,402 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:33:04.402579"}
2025-03-27 21:33:04,402 - root - INFO - Frontend: 2025-03-27 21:33:04,402 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:33:04,403 - root - INFO - Frontend: 2025-03-27 21:33:04,402 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:33:04,403 - root - INFO - Frontend: 2025-03-27 21:33:04,402 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:33:04.402579", "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 21:33:04,412 - root - INFO - Frontend: 2025-03-27 21:33:04,412 - __main__ - INFO - WebSocket client disconnected
2025-03-27 21:33:04,412 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 21:33:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:33:35 WET)" (scheduled at 2025-03-27 21:33:05.953267+00:00)
2025-03-27 21:33:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:05 WET)" (scheduled at 2025-03-27 21:33:05.953372+00:00)
2025-03-27 21:33:05,960 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:05 WET)" (scheduled at 2025-03-27 21:33:05.953445+00:00)
2025-03-27 21:33:05,961 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:33:35 WET)" executed successfully
2025-03-27 21:33:05,961 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:05 WET)" (scheduled at 2025-03-27 21:33:05.953518+00:00)
2025-03-27 21:33:05,964 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:33:05,965 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:33:05,966 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:33:05,966 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:05 WET)" executed successfully
2025-03-27 21:33:05,966 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:33:05,967 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:05 WET)" executed successfully
2025-03-27 21:33:05,967 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:33:05,967 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:33:05,967 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:33:05,967 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:05 WET)" executed successfully
2025-03-27 21:33:09,849 - root - INFO - Frontend: 2025-03-27 21:33:09,849 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:33:09 WET)" (scheduled at 2025-03-27 21:33:09.843335+00:00)
2025-03-27 21:33:09,850 - root - INFO - Frontend: 2025-03-27 21:33:09,849 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:33:09,850 - root - INFO - Frontend: 2025-03-27 21:33:09,849 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:33:39 WET)" executed successfully
2025-03-27 21:33:09,851 - root - INFO - Frontend: 2025-03-27 21:33:09,851 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:33:09,852 - root - INFO - Frontend: 2025-03-27 21:33:09,851 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:33:09.851923"}
2025-03-27 21:33:09,852 - root - INFO - Frontend: 2025-03-27 21:33:09,852 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:33:09,852 - root - INFO - Frontend: 2025-03-27 21:33:09,852 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:33:24,853 - root - INFO - Frontend: 2025-03-27 21:33:24,852 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:33:24,854 - root - INFO - Frontend: 2025-03-27 21:33:24,854 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:33:24,854 - root - INFO - Frontend: 2025-03-27 21:33:24,854 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:33:24.854387"}
2025-03-27 21:33:24,854 - root - INFO - Frontend: 2025-03-27 21:33:24,854 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:33:24,854 - root - INFO - Frontend: 2025-03-27 21:33:24,854 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:33:35,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:34:05 WET)" (scheduled at 2025-03-27 21:33:35.953267+00:00)
2025-03-27 21:33:35,961 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:34:05 WET)" executed successfully
2025-03-27 21:33:39,851 - root - INFO - Frontend: 2025-03-27 21:33:39,850 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:34:09 WET)" (scheduled at 2025-03-27 21:33:39.843335+00:00)
2025-03-27 21:33:39,852 - root - INFO - Frontend: 2025-03-27 21:33:39,851 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:39 WET)" (scheduled at 2025-03-27 21:33:39.843425+00:00)
2025-03-27 21:33:39,853 - root - INFO - Frontend: 2025-03-27 21:33:39,851 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:34:09 WET)" executed successfully
2025-03-27 21:33:39,853 - root - INFO - Frontend: 2025-03-27 21:33:39,852 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:39 WET)" (scheduled at 2025-03-27 21:33:39.843479+00:00)
2025-03-27 21:33:39,853 - root - INFO - Frontend: 2025-03-27 21:33:39,853 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:39 WET)" (scheduled at 2025-03-27 21:33:39.843522+00:00)
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:39 WET)" executed successfully
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:39 WET)" executed successfully
2025-03-27 21:33:39,854 - root - INFO - Frontend: 2025-03-27 21:33:39,854 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:34:39 WET)" executed successfully
2025-03-27 21:33:39,856 - root - INFO - Frontend: 2025-03-27 21:33:39,856 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:33:39,857 - root - INFO - Frontend: 2025-03-27 21:33:39,857 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:33:39,857 - root - INFO - Frontend: 2025-03-27 21:33:39,857 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:33:39.857225"}
2025-03-27 21:33:39,857 - root - INFO - Frontend: 2025-03-27 21:33:39,857 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:33:39,857 - root - INFO - Frontend: 2025-03-27 21:33:39,857 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:33:54,859 - root - INFO - Frontend: 2025-03-27 21:33:54,858 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:33:54,862 - root - INFO - Frontend: 2025-03-27 21:33:54,861 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:33:54,862 - root - INFO - Frontend: 2025-03-27 21:33:54,862 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:33:54.861967"}
2025-03-27 21:33:54,862 - root - INFO - Frontend: 2025-03-27 21:33:54,862 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:33:54,862 - root - INFO - Frontend: 2025-03-27 21:33:54,862 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:34:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:34:35 WET)" (scheduled at 2025-03-27 21:34:05.953267+00:00)
2025-03-27 21:34:05,960 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:05 WET)" (scheduled at 2025-03-27 21:34:05.953372+00:00)
2025-03-27 21:34:05,960 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:05 WET)" (scheduled at 2025-03-27 21:34:05.953445+00:00)
2025-03-27 21:34:05,960 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:05 WET)" (scheduled at 2025-03-27 21:34:05.953518+00:00)
2025-03-27 21:34:05,960 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:34:35 WET)" executed successfully
2025-03-27 21:34:05,963 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:34:05,963 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:34:05,964 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:34:05,964 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:05 WET)" executed successfully
2025-03-27 21:34:05,964 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:34:05,965 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:05 WET)" executed successfully
2025-03-27 21:34:05,965 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:34:05,965 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:34:05,965 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:34:05,965 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:05 WET)" executed successfully
2025-03-27 21:34:09,849 - root - INFO - Frontend: 2025-03-27 21:34:09,849 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:34:39 WET)" (scheduled at 2025-03-27 21:34:09.843335+00:00)
2025-03-27 21:34:09,850 - root - INFO - Frontend: 2025-03-27 21:34:09,849 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:34:39 WET)" executed successfully
2025-03-27 21:34:09,864 - root - INFO - Frontend: 2025-03-27 21:34:09,864 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:34:09,865 - root - INFO - Frontend: 2025-03-27 21:34:09,865 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:34:09,865 - root - INFO - Frontend: 2025-03-27 21:34:09,865 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:34:09.865661"}
2025-03-27 21:34:09,866 - root - INFO - Frontend: 2025-03-27 21:34:09,865 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:34:09,866 - root - INFO - Frontend: 2025-03-27 21:34:09,865 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:34:24,868 - root - INFO - Frontend: 2025-03-27 21:34:24,867 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:34:24,870 - root - INFO - Frontend: 2025-03-27 21:34:24,869 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:34:24,870 - root - INFO - Frontend: 2025-03-27 21:34:24,870 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:34:24.869986"}
2025-03-27 21:34:24,870 - root - INFO - Frontend: 2025-03-27 21:34:24,870 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:34:24,870 - root - INFO - Frontend: 2025-03-27 21:34:24,870 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:34:35,954 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:35:05 WET)" (scheduled at 2025-03-27 21:34:35.953267+00:00)
2025-03-27 21:34:35,955 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:35:05 WET)" executed successfully
2025-03-27 21:34:39,847 - root - INFO - Frontend: 2025-03-27 21:34:39,847 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:35:09 WET)" (scheduled at 2025-03-27 21:34:39.843335+00:00)
2025-03-27 21:34:39,847 - root - INFO - Frontend: 2025-03-27 21:34:39,847 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:35:09 WET)" executed successfully
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,847 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:39 WET)" (scheduled at 2025-03-27 21:34:39.843425+00:00)
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:39 WET)" (scheduled at 2025-03-27 21:34:39.843479+00:00)
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:39 WET)" (scheduled at 2025-03-27 21:34:39.843522+00:00)
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:39 WET)" executed successfully
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:39 WET)" executed successfully
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:34:39,848 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:34:39,849 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:34:39,849 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:34:39,849 - root - INFO - Frontend: 2025-03-27 21:34:39,848 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:35:39 WET)" executed successfully
2025-03-27 21:34:39,872 - root - INFO - Frontend: 2025-03-27 21:34:39,871 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:34:39,872 - root - INFO - Frontend: 2025-03-27 21:34:39,872 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:34:39,873 - root - INFO - Frontend: 2025-03-27 21:34:39,872 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:34:39.872959"}
2025-03-27 21:34:39,873 - root - INFO - Frontend: 2025-03-27 21:34:39,873 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:34:39,873 - root - INFO - Frontend: 2025-03-27 21:34:39,873 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:34:54,874 - root - INFO - Frontend: 2025-03-27 21:34:54,874 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:34:54,875 - root - INFO - Frontend: 2025-03-27 21:34:54,875 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:34:54,875 - root - INFO - Frontend: 2025-03-27 21:34:54,875 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:34:54.875176"}
2025-03-27 21:34:54,875 - root - INFO - Frontend: 2025-03-27 21:34:54,875 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:34:54,875 - root - INFO - Frontend: 2025-03-27 21:34:54,875 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:35:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:35:35 WET)" (scheduled at 2025-03-27 21:35:05.953267+00:00)
2025-03-27 21:35:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:05 WET)" (scheduled at 2025-03-27 21:35:05.953372+00:00)
2025-03-27 21:35:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:05 WET)" (scheduled at 2025-03-27 21:35:05.953445+00:00)
2025-03-27 21:35:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:05 WET)" (scheduled at 2025-03-27 21:35:05.953518+00:00)
2025-03-27 21:35:05,960 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:35:35 WET)" executed successfully
2025-03-27 21:35:05,962 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:35:05,962 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:35:05,963 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:05 WET)" executed successfully
2025-03-27 21:35:05,963 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:35:05,963 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:35:05,963 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:35:05,963 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:05 WET)" executed successfully
2025-03-27 21:35:05,963 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:35:05,963 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:35:05,964 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:05 WET)" executed successfully
2025-03-27 21:35:09,846 - root - INFO - Frontend: 2025-03-27 21:35:09,846 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:35:39 WET)" (scheduled at 2025-03-27 21:35:09.843335+00:00)
2025-03-27 21:35:09,847 - root - INFO - Frontend: 2025-03-27 21:35:09,846 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:35:39 WET)" executed successfully
2025-03-27 21:35:09,876 - root - INFO - Frontend: 2025-03-27 21:35:09,876 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:35:09,878 - root - INFO - Frontend: 2025-03-27 21:35:09,877 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:35:09,878 - root - INFO - Frontend: 2025-03-27 21:35:09,878 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:35:09.878004"}
2025-03-27 21:35:09,878 - root - INFO - Frontend: 2025-03-27 21:35:09,878 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:35:09,878 - root - INFO - Frontend: 2025-03-27 21:35:09,878 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:35:24,881 - root - INFO - Frontend: 2025-03-27 21:35:24,879 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:35:24,882 - root - INFO - Frontend: 2025-03-27 21:35:24,882 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:35:24,882 - root - INFO - Frontend: 2025-03-27 21:35:24,882 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:35:24.882261"}
2025-03-27 21:35:24,882 - root - INFO - Frontend: 2025-03-27 21:35:24,882 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:35:24,882 - root - INFO - Frontend: 2025-03-27 21:35:24,882 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:35:35,956 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:36:05 WET)" (scheduled at 2025-03-27 21:35:35.953267+00:00)
2025-03-27 21:35:35,957 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:36:05 WET)" executed successfully
2025-03-27 21:35:39,844 - root - INFO - Frontend: 2025-03-27 21:35:39,843 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:36:09 WET)" (scheduled at 2025-03-27 21:35:39.843335+00:00)
2025-03-27 21:35:39,844 - root - INFO - Frontend: 2025-03-27 21:35:39,844 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:36:09 WET)" executed successfully
2025-03-27 21:35:39,844 - root - INFO - Frontend: 2025-03-27 21:35:39,844 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:39 WET)" (scheduled at 2025-03-27 21:35:39.843425+00:00)
2025-03-27 21:35:39,844 - root - INFO - Frontend: 2025-03-27 21:35:39,844 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:39 WET)" (scheduled at 2025-03-27 21:35:39.843479+00:00)
2025-03-27 21:35:39,844 - root - INFO - Frontend: 2025-03-27 21:35:39,844 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:39 WET)" (scheduled at 2025-03-27 21:35:39.843522+00:00)
2025-03-27 21:35:39,844 - root - INFO - Frontend: 2025-03-27 21:35:39,844 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:35:39,844 - root - INFO - Frontend: 2025-03-27 21:35:39,844 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:35:39,844 - root - INFO - Frontend: 2025-03-27 21:35:39,844 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:35:39,845 - root - INFO - Frontend: 2025-03-27 21:35:39,844 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:35:39,845 - root - INFO - Frontend: 2025-03-27 21:35:39,845 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:35:39,845 - root - INFO - Frontend: 2025-03-27 21:35:39,845 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:35:39,845 - root - INFO - Frontend: 2025-03-27 21:35:39,845 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:35:39,845 - root - INFO - Frontend: 2025-03-27 21:35:39,845 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:39 WET)" executed successfully
2025-03-27 21:35:39,845 - root - INFO - Frontend: 2025-03-27 21:35:39,845 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:39 WET)" executed successfully
2025-03-27 21:35:39,845 - root - INFO - Frontend: 2025-03-27 21:35:39,845 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:36:39 WET)" executed successfully
2025-03-27 21:35:39,885 - root - INFO - Frontend: 2025-03-27 21:35:39,885 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:35:39,900 - root - INFO - Frontend: 2025-03-27 21:35:39,896 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:35:39,908 - root - INFO - Frontend: 2025-03-27 21:35:39,901 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:35:39.899355"}
2025-03-27 21:35:39,908 - root - INFO - Frontend: 2025-03-27 21:35:39,905 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:35:39,908 - root - INFO - Frontend: 2025-03-27 21:35:39,906 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:35:54,910 - root - INFO - Frontend: 2025-03-27 21:35:54,909 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:35:54,912 - root - INFO - Frontend: 2025-03-27 21:35:54,911 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:35:54,912 - root - INFO - Frontend: 2025-03-27 21:35:54,912 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:35:54.912079"}
2025-03-27 21:35:54,912 - root - INFO - Frontend: 2025-03-27 21:35:54,912 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:35:54,912 - root - INFO - Frontend: 2025-03-27 21:35:54,912 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:36:05,954 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:36:35 WET)" (scheduled at 2025-03-27 21:36:05.953267+00:00)
2025-03-27 21:36:05,955 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:05 WET)" (scheduled at 2025-03-27 21:36:05.953372+00:00)
2025-03-27 21:36:05,955 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:05 WET)" (scheduled at 2025-03-27 21:36:05.953445+00:00)
2025-03-27 21:36:05,955 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:05 WET)" (scheduled at 2025-03-27 21:36:05.953518+00:00)
2025-03-27 21:36:05,955 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:36:35 WET)" executed successfully
2025-03-27 21:36:05,957 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:36:05,958 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:36:05,958 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:05 WET)" executed successfully
2025-03-27 21:36:05,958 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:36:05,958 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:36:05,959 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:05 WET)" executed successfully
2025-03-27 21:36:05,959 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:36:05,959 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:36:05,959 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:36:05,959 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:05 WET)" executed successfully
2025-03-27 21:36:09,844 - root - INFO - Frontend: 2025-03-27 21:36:09,844 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:36:39 WET)" (scheduled at 2025-03-27 21:36:09.843335+00:00)
2025-03-27 21:36:09,844 - root - INFO - Frontend: 2025-03-27 21:36:09,844 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:36:39 WET)" executed successfully
2025-03-27 21:36:09,914 - root - INFO - Frontend: 2025-03-27 21:36:09,914 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:36:09,915 - root - INFO - Frontend: 2025-03-27 21:36:09,914 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:36:09,915 - root - INFO - Frontend: 2025-03-27 21:36:09,915 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:36:09.914986"}
2025-03-27 21:36:09,915 - root - INFO - Frontend: 2025-03-27 21:36:09,915 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:36:09,915 - root - INFO - Frontend: 2025-03-27 21:36:09,915 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:36:24,916 - root - INFO - Frontend: 2025-03-27 21:36:24,916 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:36:24,918 - root - INFO - Frontend: 2025-03-27 21:36:24,917 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:36:24,918 - root - INFO - Frontend: 2025-03-27 21:36:24,918 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:36:24.918036"}
2025-03-27 21:36:24,918 - root - INFO - Frontend: 2025-03-27 21:36:24,918 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:36:24,918 - root - INFO - Frontend: 2025-03-27 21:36:24,918 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:36:35,958 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:37:05 WET)" (scheduled at 2025-03-27 21:36:35.953267+00:00)
2025-03-27 21:36:35,958 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:37:05 WET)" executed successfully
2025-03-27 21:36:39,844 - root - INFO - Frontend: 2025-03-27 21:36:39,844 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:37:09 WET)" (scheduled at 2025-03-27 21:36:39.843335+00:00)
2025-03-27 21:36:39,845 - root - INFO - Frontend: 2025-03-27 21:36:39,844 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:39 WET)" (scheduled at 2025-03-27 21:36:39.843425+00:00)
2025-03-27 21:36:39,845 - root - INFO - Frontend: 2025-03-27 21:36:39,845 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:37:09 WET)" executed successfully
2025-03-27 21:36:39,846 - root - INFO - Frontend: 2025-03-27 21:36:39,845 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:39 WET)" (scheduled at 2025-03-27 21:36:39.843479+00:00)
2025-03-27 21:36:39,846 - root - INFO - Frontend: 2025-03-27 21:36:39,845 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:39 WET)" (scheduled at 2025-03-27 21:36:39.843522+00:00)
2025-03-27 21:36:39,846 - root - INFO - Frontend: 2025-03-27 21:36:39,846 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:36:39,846 - root - INFO - Frontend: 2025-03-27 21:36:39,846 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:36:39,847 - root - INFO - Frontend: 2025-03-27 21:36:39,847 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:39 WET)" executed successfully
2025-03-27 21:36:39,847 - root - INFO - Frontend: 2025-03-27 21:36:39,847 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:36:39,847 - root - INFO - Frontend: 2025-03-27 21:36:39,847 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:36:39,847 - root - INFO - Frontend: 2025-03-27 21:36:39,847 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:36:39,847 - root - INFO - Frontend: 2025-03-27 21:36:39,847 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:36:39,847 - root - INFO - Frontend: 2025-03-27 21:36:39,847 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:36:39,848 - root - INFO - Frontend: 2025-03-27 21:36:39,847 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:39 WET)" executed successfully
2025-03-27 21:36:39,848 - root - INFO - Frontend: 2025-03-27 21:36:39,847 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:37:39 WET)" executed successfully
2025-03-27 21:36:39,919 - root - INFO - Frontend: 2025-03-27 21:36:39,919 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:36:39,920 - root - INFO - Frontend: 2025-03-27 21:36:39,920 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:36:39,921 - root - INFO - Frontend: 2025-03-27 21:36:39,920 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:36:39.920839"}
2025-03-27 21:36:39,921 - root - INFO - Frontend: 2025-03-27 21:36:39,920 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:36:39,921 - root - INFO - Frontend: 2025-03-27 21:36:39,920 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:36:54,922 - root - INFO - Frontend: 2025-03-27 21:36:54,922 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:36:54,924 - root - INFO - Frontend: 2025-03-27 21:36:54,923 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:36:54,924 - root - INFO - Frontend: 2025-03-27 21:36:54,924 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:36:54.924035"}
2025-03-27 21:36:54,924 - root - INFO - Frontend: 2025-03-27 21:36:54,924 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:36:54,924 - root - INFO - Frontend: 2025-03-27 21:36:54,924 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:37:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:37:35 WET)" (scheduled at 2025-03-27 21:37:05.953267+00:00)
2025-03-27 21:37:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:05 WET)" (scheduled at 2025-03-27 21:37:05.953372+00:00)
2025-03-27 21:37:05,960 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:05 WET)" (scheduled at 2025-03-27 21:37:05.953445+00:00)
2025-03-27 21:37:05,960 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:05 WET)" (scheduled at 2025-03-27 21:37:05.953518+00:00)
2025-03-27 21:37:05,961 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:05:00], next run at: 2025-03-27 21:42:05 WET)" (scheduled at 2025-03-27 21:37:05.953584+00:00)
2025-03-27 21:37:05,961 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:37:35 WET)" executed successfully
2025-03-27 21:37:05,962 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:37:05,962 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:37:05,963 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:05 WET)" executed successfully
2025-03-27 21:37:05,963 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:05:00], next run at: 2025-03-27 21:42:05 WET)" executed successfully
2025-03-27 21:37:05,963 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:37:05,963 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:37:05,963 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:37:05,964 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:05 WET)" executed successfully
2025-03-27 21:37:05,964 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:37:05,964 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:37:05,964 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:05 WET)" executed successfully
2025-03-27 21:37:09,846 - root - INFO - Frontend: 2025-03-27 21:37:09,846 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:37:39 WET)" (scheduled at 2025-03-27 21:37:09.843335+00:00)
2025-03-27 21:37:09,846 - root - INFO - Frontend: 2025-03-27 21:37:09,846 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:37:39 WET)" executed successfully
2025-03-27 21:37:09,926 - root - INFO - Frontend: 2025-03-27 21:37:09,926 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:37:09,927 - root - INFO - Frontend: 2025-03-27 21:37:09,927 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:37:09,927 - root - INFO - Frontend: 2025-03-27 21:37:09,927 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:37:09.927066"}
2025-03-27 21:37:09,927 - root - INFO - Frontend: 2025-03-27 21:37:09,927 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:37:09,927 - root - INFO - Frontend: 2025-03-27 21:37:09,927 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:37:24,930 - root - INFO - Frontend: 2025-03-27 21:37:24,930 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:37:24,932 - root - INFO - Frontend: 2025-03-27 21:37:24,932 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:37:24,932 - root - INFO - Frontend: 2025-03-27 21:37:24,932 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:37:24.932138"}
2025-03-27 21:37:24,932 - root - INFO - Frontend: 2025-03-27 21:37:24,932 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:37:24,932 - root - INFO - Frontend: 2025-03-27 21:37:24,932 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:37:35,958 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:38:05 WET)" (scheduled at 2025-03-27 21:37:35.953267+00:00)
2025-03-27 21:37:35,959 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:38:05 WET)" executed successfully
2025-03-27 21:37:39,849 - root - INFO - Frontend: 2025-03-27 21:37:39,849 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:38:09 WET)" (scheduled at 2025-03-27 21:37:39.843335+00:00)
2025-03-27 21:37:39,850 - root - INFO - Frontend: 2025-03-27 21:37:39,849 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:38:09 WET)" executed successfully
2025-03-27 21:37:39,850 - root - INFO - Frontend: 2025-03-27 21:37:39,850 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:39 WET)" (scheduled at 2025-03-27 21:37:39.843425+00:00)
2025-03-27 21:37:39,850 - root - INFO - Frontend: 2025-03-27 21:37:39,850 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:39 WET)" (scheduled at 2025-03-27 21:37:39.843479+00:00)
2025-03-27 21:37:39,850 - root - INFO - Frontend: 2025-03-27 21:37:39,850 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:37:39,851 - root - INFO - Frontend: 2025-03-27 21:37:39,850 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:37:39,851 - root - INFO - Frontend: 2025-03-27 21:37:39,851 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:39 WET)" executed successfully
2025-03-27 21:37:39,851 - root - INFO - Frontend: 2025-03-27 21:37:39,851 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:37:39,851 - root - INFO - Frontend: 2025-03-27 21:37:39,851 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:37:39,851 - root - INFO - Frontend: 2025-03-27 21:37:39,851 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:37:39,851 - root - INFO - Frontend: 2025-03-27 21:37:39,851 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:37:39,851 - root - INFO - Frontend: 2025-03-27 21:37:39,851 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:37:39,851 - root - INFO - Frontend: 2025-03-27 21:37:39,851 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:39 WET)" executed successfully
2025-03-27 21:37:39,852 - root - INFO - Frontend: 2025-03-27 21:37:39,851 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:39 WET)" (scheduled at 2025-03-27 21:37:39.843522+00:00)
2025-03-27 21:37:39,852 - root - INFO - Frontend: 2025-03-27 21:37:39,852 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:38:39 WET)" executed successfully
2025-03-27 21:37:39,852 - root - INFO - Frontend: 2025-03-27 21:37:39,852 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:05:00], next run at: 2025-03-27 21:42:39 WET)" (scheduled at 2025-03-27 21:37:39.843576+00:00)
2025-03-27 21:37:39,852 - root - INFO - Frontend: 2025-03-27 21:37:39,852 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:05:00], next run at: 2025-03-27 21:42:39 WET)" executed successfully
2025-03-27 21:37:39,934 - root - INFO - Frontend: 2025-03-27 21:37:39,934 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:37:39,935 - root - INFO - Frontend: 2025-03-27 21:37:39,935 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:37:39,935 - root - INFO - Frontend: 2025-03-27 21:37:39,935 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:37:39.935480"}
2025-03-27 21:37:39,935 - root - INFO - Frontend: 2025-03-27 21:37:39,935 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:37:39,935 - root - INFO - Frontend: 2025-03-27 21:37:39,935 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:37:54,937 - root - INFO - Frontend: 2025-03-27 21:37:54,937 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:37:54,938 - root - INFO - Frontend: 2025-03-27 21:37:54,938 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:37:54,938 - root - INFO - Frontend: 2025-03-27 21:37:54,938 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:37:54.938085"}
2025-03-27 21:37:54,938 - root - INFO - Frontend: 2025-03-27 21:37:54,938 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:37:54,938 - root - INFO - Frontend: 2025-03-27 21:37:54,938 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:38:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:38:35 WET)" (scheduled at 2025-03-27 21:38:05.953267+00:00)
2025-03-27 21:38:05,959 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:05 WET)" (scheduled at 2025-03-27 21:38:05.953372+00:00)
2025-03-27 21:38:05,960 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:05 WET)" (scheduled at 2025-03-27 21:38:05.953445+00:00)
2025-03-27 21:38:05,960 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:38:35 WET)" executed successfully
2025-03-27 21:38:05,960 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:05 WET)" (scheduled at 2025-03-27 21:38:05.953518+00:00)
2025-03-27 21:38:05,961 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:38:05,961 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:38:05,961 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:38:05,962 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:38:05,962 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:05 WET)" executed successfully
2025-03-27 21:38:05,962 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:05 WET)" executed successfully
2025-03-27 21:38:05,962 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:38:05,962 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:38:05,962 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:38:05,962 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:05 WET)" executed successfully
2025-03-27 21:38:09,846 - root - INFO - Frontend: 2025-03-27 21:38:09,846 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:38:39 WET)" (scheduled at 2025-03-27 21:38:09.843335+00:00)
2025-03-27 21:38:09,848 - root - INFO - Frontend: 2025-03-27 21:38:09,846 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:38:39 WET)" executed successfully
2025-03-27 21:38:09,939 - root - INFO - Frontend: 2025-03-27 21:38:09,939 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:38:09,940 - root - INFO - Frontend: 2025-03-27 21:38:09,940 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:38:09,940 - root - INFO - Frontend: 2025-03-27 21:38:09,940 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:38:09.940734"}
2025-03-27 21:38:09,940 - root - INFO - Frontend: 2025-03-27 21:38:09,940 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:38:09,940 - root - INFO - Frontend: 2025-03-27 21:38:09,940 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:38:24,942 - root - INFO - Frontend: 2025-03-27 21:38:24,942 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:38:24,943 - root - INFO - Frontend: 2025-03-27 21:38:24,943 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:38:24,943 - root - INFO - Frontend: 2025-03-27 21:38:24,943 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:38:24.943414"}
2025-03-27 21:38:24,943 - root - INFO - Frontend: 2025-03-27 21:38:24,943 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:38:24,943 - root - INFO - Frontend: 2025-03-27 21:38:24,943 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:38:35,958 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:39:05 WET)" (scheduled at 2025-03-27 21:38:35.953267+00:00)
2025-03-27 21:38:35,959 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:39:05 WET)" executed successfully
2025-03-27 21:38:39,847 - root - INFO - Frontend: 2025-03-27 21:38:39,846 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:39:09 WET)" (scheduled at 2025-03-27 21:38:39.843335+00:00)
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,847 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:39:09 WET)" executed successfully
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,847 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:39 WET)" (scheduled at 2025-03-27 21:38:39.843425+00:00)
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,847 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:39 WET)" (scheduled at 2025-03-27 21:38:39.843479+00:00)
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - app.core.orchestrator - ERROR - Failed to get market data: No active trading pairs
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:39 WET)" (scheduled at 2025-03-27 21:38:39.843522+00:00)
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:39 WET)" executed successfully
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:39 WET)" executed successfully
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:38:39,848 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - app.core.orchestrator - WARNING - No active trading pairs available
2025-03-27 21:38:39,849 - root - INFO - Frontend: 2025-03-27 21:38:39,848 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:39:39 WET)" executed successfully
2025-03-27 21:38:39,944 - root - INFO - Frontend: 2025-03-27 21:38:39,944 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:38:39,945 - root - INFO - Frontend: 2025-03-27 21:38:39,945 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:38:39,946 - root - INFO - Frontend: 2025-03-27 21:38:39,945 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:38:39.945879"}
2025-03-27 21:38:39,946 - root - INFO - Frontend: 2025-03-27 21:38:39,945 - __main__ - INFO - Portfolio data keys after transformation: ['allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:38:39,946 - root - INFO - Frontend: 2025-03-27 21:38:39,946 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:38:43,856 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 21:38:43,857 - root - INFO - Frontend: 2025-03-27 21:38:43,857 - __main__ - INFO - WebSocket client disconnected
2025-03-27 21:38:43,857 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 21:38:43,958 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 21:38:43,958 - root - INFO - Frontend: 2025-03-27 21:38:43,958 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 21:38:43,958 - root - INFO - Frontend: 2025-03-27 21:38:43,958 - app.core.orchestrator - INFO - Shutting down scheduler
2025-03-27 21:38:43,959 - root - INFO - Frontend: 2025-03-27 21:38:43,959 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-03-27 21:38:43,959 - root - INFO - Frontend: 2025-03-27 21:38:43,959 - app.core.orchestrator - INFO - Scheduler shut down successfully
2025-03-27 21:38:43,959 - root - INFO - Frontend: 2025-03-27 21:38:43,959 - app.core.orchestrator - INFO - Trading bot stopped successfully
2025-03-27 21:38:43,960 - root - INFO - Frontend: 2025-03-27 21:38:43,960 - app.utils.notification_system - INFO - [NOTICE] SYSTEM - Trading Bot Stopped: Trading bot has been stopped after running for 0.1 hours
2025-03-27 21:38:43,960 - root - INFO - Frontend: 2025-03-27 21:38:43,960 - app.utils.notification_system - INFO - Additional data: {
2025-03-27 21:38:43,960 - root - INFO - Frontend: "run_duration_hours": "0.1",
2025-03-27 21:38:43,960 - root - INFO - Frontend: "trades_executed": 0,
2025-03-27 21:38:43,960 - root - INFO - Frontend: "profit_loss": "$0.00"
2025-03-27 21:38:43,960 - root - INFO - Frontend: }
2025-03-27 21:38:43,961 - root - INFO - Frontend: INFO:     Application shutdown complete.
2025-03-27 21:38:43,961 - root - INFO - Frontend: INFO:     Finished server process [79392]
2025-03-27 21:38:44,116 - root - INFO - Frontend: Exception ignored in: <module 'threading' from '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py'>
2025-03-27 21:38:44,116 - root - INFO - Frontend: Traceback (most recent call last):
2025-03-27 21:38:44,116 - root - INFO - Frontend: File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py", line 1448, in _shutdown
2025-03-27 21:38:44,117 - root - INFO - Frontend: lock.acquire()
2025-03-27 21:38:44,117 - root - INFO - Frontend: KeyboardInterrupt:
2025-03-27 21:38:44,396 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 21:38:44,396 - root - INFO - Attempting to restart frontend...
2025-03-27 21:38:44,396 - root - INFO - Starting frontend server...
2025-03-27 21:38:44,406 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:38:44,409 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:38:44,503 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:38:44,503 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:38:44,503 - root - INFO - Frontend: Building React app...
2025-03-27 21:38:44,569 - root - INFO - Frontend: 
2025-03-27 21:38:44,569 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:38:44,569 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:38:44,569 - root - INFO - Frontend: 
2025-03-27 21:38:46,271 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-3' coro=<Server.serve() done, defined at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py:68> exception=KeyboardInterrupt()>
Traceback (most recent call last):
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/run.py", line 411, in <module>
    asyncio.run(main())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 629, in run_until_complete
    self.run_forever()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 596, in run_forever
    self._run_once()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 1890, in _run_once
    handle._run()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 70, in serve
    await self._serve(sockets)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/contextlib.py", line 124, in __exit__
    next(self.gen)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 330, in capture_signals
    signal.raise_signal(captured_signal)
KeyboardInterrupt
2025-03-27 21:40:08,868 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:40:08,868 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:40:08,868 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:40:08,868 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:40:08,868 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:40:08,868 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:40:08,869 - root - INFO - Starting trading bot in simulation mode with components: ['bot', 'api', 'frontend']
2025-03-27 21:40:08,869 - root - INFO - Local IP: 192.168.1.134
2025-03-27 21:40:08,869 - root - INFO - API will be available at: http://192.168.1.134:8080
2025-03-27 21:40:08,869 - root - INFO - Dashboard will be available at: http://192.168.1.134:3001
2025-03-27 21:40:08,869 - root - INFO - Starting trading bot with components: ['bot', 'api', 'frontend'] in mode: simulation
2025-03-27 21:40:08,869 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:40:08,869 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: simulation)
2025-03-27 21:40:08,874 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:40:08,875 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:40:08,875 - root - INFO - Exchange manager initialized in simulation mode
2025-03-27 21:40:08,875 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:40:08,875 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:40:08,875 - root - INFO - Created shared orchestrator instance
2025-03-27 21:40:08,875 - root - INFO - Starting trading bot in simulation mode
2025-03-27 21:40:08,875 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:40:08,875 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:40:08,875 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:40:08,889 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:40:08,916 - app.database.manager - INFO - Database connection successful
2025-03-27 21:40:08,916 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:40:08,916 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:40:08,917 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:40:08,917 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:40:08,917 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:40:08,917 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:40:08,917 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:40:08,917 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:40:08,918 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:40:08,918 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:40:08,918 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:40:08,918 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:40:08,918 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:40:08,918 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:40:08,918 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:40:08,918 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:40:08,918 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:40:08,920 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:40:08,920 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:40:08,920 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:40:08,920 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:40:08,922 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:40:08,922 - app.database.manager - INFO - Database connection established
2025-03-27 21:40:08,922 - app.core.orchestrator - INFO - Loaded 46 balance history records
2025-03-27 21:40:08,922 - app.core.orchestrator - INFO - Loaded 30 PnL history records
2025-03-27 21:40:08,922 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:40:08,922 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:40:08,922 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 21:40:08,922 - app.core.orchestrator - INFO - Scheduler started
2025-03-27 21:40:08,923 - app.core.orchestrator - INFO - Scheduling periodic jobs...
2025-03-27 21:40:08,923 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_heartbeat" to job store "default"
2025-03-27 21:40:08,923 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:08,923 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:08,923 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:08,923 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:08,923 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:08,923 - app.core.orchestrator - INFO - All periodic jobs scheduled.
2025-03-27 21:40:08,923 - app.core.orchestrator - INFO - Jobs scheduled
2025-03-27 21:40:08,923 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:40:08,923 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:40:08,923 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:40:08,923 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:40:08,923 - root - INFO - Bot initialized and started via orchestrator
2025-03-27 21:40:08,923 - root - INFO - Starting API server
2025-03-27 21:40:08,925 - app.api.server - INFO - API server initialized
2025-03-27 21:40:08,927 - app.api.server - INFO - Starting API server on http://192.168.1.134:8080 ...
2025-03-27 21:40:08,928 - app.api.server - INFO - API server available at: http://192.168.1.134:8080
2025-03-27 21:40:08,928 - app.api.server - INFO - API can be accessed from any device on the network using the above URL
2025-03-27 21:40:08,928 - root - INFO - Starting frontend server
2025-03-27 21:40:08,928 - root - INFO - Starting frontend server...
2025-03-27 21:40:08,979 - root - INFO - Database connection: Success
2025-03-27 21:40:08,980 - root - INFO - Redis connection: Success
2025-03-27 21:40:08,980 - root - INFO - Logging is configured and working
2025-03-27 21:40:08,980 - root - INFO - Trading bot is running with components: Trading Bot, API Server, Frontend Dashboard
2025-03-27 21:40:09,005 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:40:09,005 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:40:09,059 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:40:09,059 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:40:09,059 - root - INFO - Frontend: Building React app...
2025-03-27 21:40:09,149 - root - INFO - Frontend: 
2025-03-27 21:40:09,149 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:40:09,149 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:40:09,149 - root - INFO - Frontend: 
2025-03-27 21:40:10,066 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:40:37,519 - root - INFO - Frontend: Compiled with warnings.
2025-03-27 21:40:37,520 - root - INFO - Frontend: 
2025-03-27 21:40:37,520 - root - INFO - Frontend: TS7006: Parameter 'pair' implicitly has an 'any' type.
2025-03-27 21:40:37,520 - root - INFO - Frontend: 229 |               {active_pairs.length > 0 ? (
2025-03-27 21:40:37,520 - root - INFO - Frontend: 230 |                 <Stack direction="row" spacing={1} flexWrap="wrap">
2025-03-27 21:40:37,520 - root - INFO - Frontend: > 231 |                   {active_pairs.map((pair) => (
2025-03-27 21:40:37,520 - root - INFO - Frontend: |                                      ^^^^
2025-03-27 21:40:37,520 - root - INFO - Frontend: 232 |                     <Chip key={pair} label={pair} variant="outlined" size="small" sx={{ mb: 1 }} />
2025-03-27 21:40:37,520 - root - INFO - Frontend: 233 |                   ))}
2025-03-27 21:40:37,520 - root - INFO - Frontend: 234 |                 </Stack>
2025-03-27 21:40:37,520 - root - INFO - Frontend: 
2025-03-27 21:40:37,520 - root - INFO - Frontend: Search for the keywords to learn more about each warning.
2025-03-27 21:40:37,520 - root - INFO - Frontend: To ignore, add // eslint-disable-next-line to the line before.
2025-03-27 21:40:37,520 - root - INFO - Frontend: 
2025-03-27 21:40:37,520 - root - INFO - Frontend: File sizes after gzip:
2025-03-27 21:40:37,520 - root - INFO - Frontend: 
2025-03-27 21:40:37,624 - root - INFO - Frontend: 1.44 MB  build/static/js/main.2abb7c74.js
2025-03-27 21:40:37,624 - root - INFO - Frontend: 
2025-03-27 21:40:37,624 - root - INFO - Frontend: The bundle size is significantly larger than recommended.
2025-03-27 21:40:37,624 - root - INFO - Frontend: Consider reducing it with code splitting: https://goo.gl/9VhYWB
2025-03-27 21:40:37,624 - root - INFO - Frontend: You can also analyze the project dependencies: https://goo.gl/LeUzfb
2025-03-27 21:40:37,624 - root - INFO - Frontend: 
2025-03-27 21:40:37,624 - root - INFO - Frontend: The project was built assuming it is hosted at /.
2025-03-27 21:40:37,624 - root - INFO - Frontend: You can control this with the homepage field in your package.json.
2025-03-27 21:40:37,624 - root - INFO - Frontend: 
2025-03-27 21:40:37,624 - root - INFO - Frontend: The build folder is ready to be deployed.
2025-03-27 21:40:37,624 - root - INFO - Frontend: You may serve it with a static server:
2025-03-27 21:40:37,624 - root - INFO - Frontend: 
2025-03-27 21:40:37,624 - root - INFO - Frontend: npm install -g serve
2025-03-27 21:40:37,624 - root - INFO - Frontend: serve -s build
2025-03-27 21:40:37,624 - root - INFO - Frontend: 
2025-03-27 21:40:37,625 - root - INFO - Frontend: Find out more about deployment here:
2025-03-27 21:40:37,625 - root - INFO - Frontend: 
2025-03-27 21:40:37,625 - root - INFO - Frontend: https://cra.link/deployment
2025-03-27 21:40:37,625 - root - INFO - Frontend: 
2025-03-27 21:40:37,706 - root - INFO - Frontend: React app built successfully
2025-03-27 21:40:37,707 - root - INFO - Frontend: Starting frontend server...
2025-03-27 21:40:37,800 - root - INFO - Frontend: 2025-03-27 21:40:37,799 - __main__ - INFO - Current file: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/server.py
2025-03-27 21:40:37,800 - root - INFO - Frontend: 2025-03-27 21:40:37,800 - __main__ - INFO - Current directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:40:37,800 - root - INFO - Frontend: 2025-03-27 21:40:37,800 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML to sys.path
2025-03-27 21:40:37,800 - root - INFO - Frontend: 2025-03-27 21:40:37,800 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app to sys.path
2025-03-27 21:40:37,800 - root - INFO - Frontend: 2025-03-27 21:40:37,800 - __main__ - INFO - Added /Users/carloslarramba/Documents to sys.path
2025-03-27 21:40:37,800 - root - INFO - Frontend: 2025-03-27 21:40:37,800 - __main__ - INFO - Attempting to import using absolute imports...
2025-03-27 21:40:38,929 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:41:08 WET)" (scheduled at 2025-03-27 21:40:38.923030+00:00)
2025-03-27 21:40:38,929 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:41:08 WET)" executed successfully
2025-03-27 21:40:42,253 - root - INFO - Frontend: 2025-03-27 21:40:42,253 - __main__ - INFO - Successfully imported using absolute imports
2025-03-27 21:40:42,367 - root - INFO - Frontend: 2025-03-27 21:40:42,367 - __main__ - INFO - Mounted static files directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/react-app/build/static
2025-03-27 21:40:42,369 - root - INFO - Frontend: 2025-03-27 21:40:42,369 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:40:42,369 - root - INFO - Frontend: 2025-03-27 21:40:42,369 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:40:42,369 - root - INFO - Frontend: 2025-03-27 21:40:42,369 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:40:42,369 - root - INFO - Frontend: 2025-03-27 21:40:42,369 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:40:42,369 - root - INFO - Frontend: 2025-03-27 21:40:42,369 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:40:42,369 - root - INFO - Frontend: 2025-03-27 21:40:42,369 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:40:42,478 - root - INFO - Frontend: INFO:     Started server process [80232]
2025-03-27 21:40:42,478 - root - INFO - Frontend: INFO:     Waiting for application startup.
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - __main__ - INFO - Bot initialized
2025-03-27 21:40:42,479 - root - INFO - Frontend: 2025-03-27 21:40:42,479 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:40:42,480 - root - INFO - Frontend: 2025-03-27 21:40:42,480 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:40:42,480 - root - INFO - Frontend: 2025-03-27 21:40:42,480 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 21:40:42,484 - root - INFO - Frontend: 2025-03-27 21:40:42,484 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:40:42,484 - root - INFO - Frontend: 2025-03-27 21:40:42,484 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:40:42,484 - root - INFO - Frontend: 2025-03-27 21:40:42,484 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 21:40:42,484 - root - INFO - Frontend: 2025-03-27 21:40:42,484 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 21:40:42,484 - root - INFO - Frontend: 2025-03-27 21:40:42,484 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 21:40:42,484 - root - INFO - Frontend: 2025-03-27 21:40:42,484 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:40:42,484 - root - INFO - Frontend: 2025-03-27 21:40:42,484 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:40:42,484 - root - INFO - Frontend: 2025-03-27 21:40:42,484 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:40:42,497 - root - INFO - Frontend: 2025-03-27 21:40:42,497 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:40:42,526 - root - INFO - Frontend: 2025-03-27 21:40:42,526 - app.database.manager - INFO - Database connection successful
2025-03-27 21:40:42,526 - root - INFO - Frontend: 2025-03-27 21:40:42,526 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:40:42,526 - root - INFO - Frontend: 2025-03-27 21:40:42,526 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:40:42,526 - root - INFO - Frontend: 2025-03-27 21:40:42,526 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:40:42,526 - root - INFO - Frontend: 2025-03-27 21:40:42,526 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:40:42,526 - root - INFO - Frontend: 2025-03-27 21:40:42,526 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:40:42,526 - root - INFO - Frontend: 2025-03-27 21:40:42,526 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:40:42,526 - root - INFO - Frontend: 2025-03-27 21:40:42,526 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:40:42,526 - root - INFO - Frontend: 2025-03-27 21:40:42,526 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:40:42,527 - root - INFO - Frontend: 2025-03-27 21:40:42,527 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:40:42,527 - root - INFO - Frontend: 2025-03-27 21:40:42,527 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:40:42,527 - root - INFO - Frontend: 2025-03-27 21:40:42,527 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:40:42,527 - root - INFO - Frontend: 2025-03-27 21:40:42,527 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:40:42,527 - root - INFO - Frontend: 2025-03-27 21:40:42,527 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:40:42,527 - root - INFO - Frontend: 2025-03-27 21:40:42,527 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:40:42,527 - root - INFO - Frontend: 2025-03-27 21:40:42,527 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:40:42,527 - root - INFO - Frontend: 2025-03-27 21:40:42,527 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:40:42,527 - root - INFO - Frontend: 2025-03-27 21:40:42,527 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:40:42,528 - root - INFO - Frontend: 2025-03-27 21:40:42,528 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:40:42,529 - root - INFO - Frontend: 2025-03-27 21:40:42,528 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:40:42,529 - root - INFO - Frontend: 2025-03-27 21:40:42,528 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:40:42,529 - root - INFO - Frontend: 2025-03-27 21:40:42,529 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:40:42,530 - root - INFO - Frontend: 2025-03-27 21:40:42,530 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:40:42,530 - root - INFO - Frontend: 2025-03-27 21:40:42,530 - app.database.manager - INFO - Database connection established
2025-03-27 21:40:42,530 - root - INFO - Frontend: 2025-03-27 21:40:42,530 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - Scheduler started
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - Scheduling periodic jobs...
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_heartbeat" to job store "default"
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - All periodic jobs scheduled.
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - Jobs scheduled
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:40:42,531 - root - INFO - Frontend: 2025-03-27 21:40:42,531 - __main__ - INFO - Bot started in simulation mode
2025-03-27 21:40:42,531 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 21:40:42,532 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 21:40:44,054 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 21:40:44,054 - root - INFO - Frontend: INFO:     192.168.1.134:51784 - "GET / HTTP/1.1" 200 OK
2025-03-27 21:40:44,057 - root - INFO - Frontend: INFO:     192.168.1.134:51785 - "GET /manifest.json HTTP/1.1" 200 OK
2025-03-27 21:40:44,062 - root - INFO - Frontend: INFO:     192.168.1.134:51784 - "GET /static/js/main.2abb7c74.js HTTP/1.1" 200 OK
2025-03-27 21:40:44,190 - root - INFO - Frontend: INFO:     ('192.168.1.134', 51786) - "WebSocket /ws" [accepted]
2025-03-27 21:40:44,190 - root - INFO - Frontend: 2025-03-27 21:40:44,190 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 21:40:44,190 - root - INFO - Frontend: 2025-03-27 21:40:44,190 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:40:44,191 - root - INFO - Frontend: INFO:     connection open
2025-03-27 21:40:44,192 - root - INFO - Frontend: 2025-03-27 21:40:44,192 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:40:44,192 - root - INFO - Frontend: 2025-03-27 21:40:44,192 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:40:44.192731", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:40:44,193 - root - INFO - Frontend: 2025-03-27 21:40:44,192 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:40:44,193 - root - INFO - Frontend: 2025-03-27 21:40:44,192 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:40:44,193 - root - INFO - Frontend: 2025-03-27 21:40:44,192 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:40:44.192731", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"], "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 21:40:57,533 - root - INFO - Frontend: 2025-03-27 21:40:57,532 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:40:57,535 - root - INFO - Frontend: 2025-03-27 21:40:57,535 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:40:57,535 - root - INFO - Frontend: 2025-03-27 21:40:57,535 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:40:57.535443", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:40:57,535 - root - INFO - Frontend: 2025-03-27 21:40:57,535 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:40:57,536 - root - INFO - Frontend: 2025-03-27 21:40:57,535 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:40:58,909 - root - INFO - Frontend: 2025-03-27 21:40:58,909 - __main__ - INFO - WebSocket client disconnected
2025-03-27 21:40:58,910 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 21:41:00,214 - root - INFO - Frontend: INFO:     ('192.168.1.134', 51787) - "WebSocket /ws" [accepted]
2025-03-27 21:41:00,215 - root - INFO - Frontend: 2025-03-27 21:41:00,214 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 21:41:00,215 - root - INFO - Frontend: 2025-03-27 21:41:00,214 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:41:00,215 - root - INFO - Frontend: INFO:     connection open
2025-03-27 21:41:00,217 - root - INFO - Frontend: 2025-03-27 21:41:00,216 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:41:00,217 - root - INFO - Frontend: 2025-03-27 21:41:00,217 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:41:00.217109", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:41:00,217 - root - INFO - Frontend: 2025-03-27 21:41:00,217 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:41:00,217 - root - INFO - Frontend: 2025-03-27 21:41:00,217 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:41:00,217 - root - INFO - Frontend: 2025-03-27 21:41:00,217 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:41:00.217109", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"], "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 21:41:08,929 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:41:38 WET)" (scheduled at 2025-03-27 21:41:08.923030+00:00)
2025-03-27 21:41:08,929 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:08 WET)" (scheduled at 2025-03-27 21:41:08.923157+00:00)
2025-03-27 21:41:08,930 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:08 WET)" (scheduled at 2025-03-27 21:41:08.923234+00:00)
2025-03-27 21:41:08,930 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:41:38 WET)" executed successfully
2025-03-27 21:41:08,930 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:08 WET)" (scheduled at 2025-03-27 21:41:08.923326+00:00)
2025-03-27 21:41:08,933 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:41:08,934 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:41:08,935 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 21:41:08,935 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:08 WET)" executed successfully
2025-03-27 21:41:08,935 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:41:08,935 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 21:41:08,936 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:41:08,937 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 21:41:08,938 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 21:41:08,939 - app.exchange.manager - ERROR - Error fetching OHLCV for BTCUSDC: Task <Task pending name='Task-7' coro=<BotOrchestrator.schedule_jobs.<locals>.run_async_job.<locals>.job_wrapper() running at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/core/orchestrator.py:765> cb=[_run_until_complete_cb() at /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py:184]> got Future <Task pending name='Task-9' coro=<Exchange.load_markets_helper() running at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/ccxt/async_support/base/exchange.py:275> wait_for=<_GatheringFuture pending cb=[<TaskWakeupMethWrapper object at 0x16bda20a0>()]> cb=[<TaskWakeupMethWrapper object at 0x16c2bbb50>()]> attached to a different loop
2025-03-27 21:41:08,943 - app.exchange.manager - WARNING - Simulated exchange returned no OHLCV data for BTC/USDC (1m)
2025-03-27 21:41:08,944 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 21:41:11,474 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 21:41:11,474 - app.exchange.manager - ERROR - Error fetching OHLCV for BTCUSDC: Task <Task pending name='Task-6' coro=<BotOrchestrator.schedule_jobs.<locals>.run_async_job.<locals>.job_wrapper() running at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/core/orchestrator.py:765> cb=[_run_until_complete_cb() at /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py:184]> got Future <Task pending name='Task-14' coro=<Exchange.load_markets_helper() running at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/ccxt/async_support/base/exchange.py:275> wait_for=<_GatheringFuture pending cb=[<TaskWakeupMethWrapper object at 0x16bda2340>()]> cb=[<TaskWakeupMethWrapper object at 0x16bda25e0>()]> attached to a different loop
2025-03-27 21:41:11,474 - app.exchange.manager - WARNING - Simulated exchange returned no OHLCV data for BTC/USDC (5m)
2025-03-27 21:41:11,474 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 21:41:11,792 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 21:41:12,195 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 21:41:12,491 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 21:41:12,537 - root - INFO - Frontend: 2025-03-27 21:41:12,536 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:41:12 WET)" (scheduled at 2025-03-27 21:41:12.531443+00:00)
2025-03-27 21:41:12,537 - root - INFO - Frontend: 2025-03-27 21:41:12,537 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:41:12 WET)" executed successfully
2025-03-27 21:41:12,537 - root - INFO - Frontend: 2025-03-27 21:41:12,537 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:41:12,537 - root - INFO - Frontend: 2025-03-27 21:41:12,537 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:41:12,538 - root - INFO - Frontend: 2025-03-27 21:41:12,537 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:41:12.537966", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:41:12,538 - root - INFO - Frontend: 2025-03-27 21:41:12,538 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:41:12,538 - root - INFO - Frontend: 2025-03-27 21:41:12,538 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:41:13,116 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 21:41:13,439 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 21:41:13,835 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 21:41:14,037 - root - INFO - Frontend: 2025-03-27 21:41:14,036 - __main__ - INFO - WebSocket client disconnected
2025-03-27 21:41:14,037 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 21:41:14,154 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 21:41:14,440 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 21:41:14,763 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 21:41:15,085 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 21:41:15,415 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 21:41:15,744 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 21:41:16,034 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 21:41:16,406 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 21:41:16,806 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 21:41:17,225 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 21:41:17,623 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 21:41:18,065 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 21:41:18,386 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 21:41:18,714 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 21:41:19,081 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 21:41:19,478 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 21:41:19,865 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:08 WET)" executed successfully
2025-03-27 21:41:38,929 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:42:08 WET)" (scheduled at 2025-03-27 21:41:38.923030+00:00)
2025-03-27 21:41:38,930 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:42:08 WET)" executed successfully
2025-03-27 21:41:42,538 - root - INFO - Frontend: 2025-03-27 21:41:42,538 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:42:12 WET)" (scheduled at 2025-03-27 21:41:42.531443+00:00)
2025-03-27 21:41:42,538 - root - INFO - Frontend: 2025-03-27 21:41:42,538 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:42:12 WET)" executed successfully
2025-03-27 21:41:42,539 - root - INFO - Frontend: 2025-03-27 21:41:42,538 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:41:42 WET)" (scheduled at 2025-03-27 21:41:42.531522+00:00)
2025-03-27 21:41:42,540 - root - INFO - Frontend: 2025-03-27 21:41:42,540 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:42 WET)" (scheduled at 2025-03-27 21:41:42.531574+00:00)
2025-03-27 21:41:42,540 - root - INFO - Frontend: 2025-03-27 21:41:42,540 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:41:42,541 - root - INFO - Frontend: 2025-03-27 21:41:42,540 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 21:41:42,541 - root - INFO - Frontend: 2025-03-27 21:41:42,541 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 21:41:42,541 - root - INFO - Frontend: 2025-03-27 21:41:42,541 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:41:42,541 - root - INFO - Frontend: 2025-03-27 21:41:42,541 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:41:42,541 - root - INFO - Frontend: 2025-03-27 21:41:42,541 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:41:42,541 - root - INFO - Frontend: 2025-03-27 21:41:42,541 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 21:41:42,541 - root - INFO - Frontend: 2025-03-27 21:41:42,541 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 21:41:42,542 - root - INFO - Frontend: 2025-03-27 21:41:42,541 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:41:42 WET)" (scheduled at 2025-03-27 21:41:42.531616+00:00)
2025-03-27 21:41:42,542 - root - INFO - Frontend: 2025-03-27 21:41:42,542 - app.exchange.manager - ERROR - Error fetching OHLCV for BTCUSDC: Task <Task pending name='Task-24' coro=<BotOrchestrator.schedule_jobs.<locals>.run_async_job.<locals>.job_wrapper() running at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/core/orchestrator.py:765> cb=[_run_until_complete_cb() at /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py:184]> got Future <Task pending name='Task-25' coro=<Exchange.load_markets_helper() running at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/ccxt/async_support/base/exchange.py:266> cb=[<TaskWakeupMethWrapper object at 0x17f3b85e0>()]> attached to a different loop
2025-03-27 21:41:42,544 - root - INFO - Frontend: 2025-03-27 21:41:42,544 - app.exchange.manager - WARNING - Simulated exchange returned no OHLCV data for BTC/USDC (1m)
2025-03-27 21:41:42,545 - root - INFO - Frontend: 2025-03-27 21:41:42,544 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 21:41:42,546 - root - INFO - Frontend: 2025-03-27 21:41:42,546 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:42 WET)" executed successfully
2025-03-27 21:41:45,077 - root - INFO - Frontend: 2025-03-27 21:41:45,077 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 21:41:45,078 - root - INFO - Frontend: 2025-03-27 21:41:45,077 - app.exchange.manager - ERROR - Error fetching OHLCV for BTCUSDC: Task <Task pending name='Task-23' coro=<BotOrchestrator.schedule_jobs.<locals>.run_async_job.<locals>.job_wrapper() running at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/core/orchestrator.py:765> cb=[_run_until_complete_cb() at /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py:184]> got Future <Task pending name='Task-26' coro=<Exchange.load_markets_helper() running at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/ccxt/async_support/base/exchange.py:275> wait_for=<_GatheringFuture pending cb=[<TaskWakeupMethWrapper object at 0x17f3b8c70>()]> cb=[<TaskWakeupMethWrapper object at 0x17f38fa00>()]> attached to a different loop
2025-03-27 21:41:45,078 - root - INFO - Frontend: 2025-03-27 21:41:45,078 - app.exchange.manager - WARNING - Simulated exchange returned no OHLCV data for BTC/USDC (5m)
2025-03-27 21:41:45,078 - root - INFO - Frontend: 2025-03-27 21:41:45,078 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 21:41:45,492 - root - INFO - Frontend: 2025-03-27 21:41:45,492 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 21:41:45,815 - root - INFO - Frontend: 2025-03-27 21:41:45,815 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 21:41:46,099 - root - INFO - Frontend: 2025-03-27 21:41:46,099 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 21:41:46,477 - root - INFO - Frontend: 2025-03-27 21:41:46,477 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 21:41:46,820 - root - INFO - Frontend: 2025-03-27 21:41:46,820 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 21:41:47,227 - root - INFO - Frontend: 2025-03-27 21:41:47,227 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 21:41:47,637 - root - INFO - Frontend: 2025-03-27 21:41:47,637 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 21:41:47,933 - root - INFO - Frontend: 2025-03-27 21:41:47,933 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 21:41:48,356 - root - INFO - Frontend: 2025-03-27 21:41:48,356 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 21:41:48,764 - root - INFO - Frontend: 2025-03-27 21:41:48,764 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 21:41:49,165 - root - INFO - Frontend: 2025-03-27 21:41:49,165 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 21:41:49,585 - root - INFO - Frontend: 2025-03-27 21:41:49,585 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 21:41:49,970 - root - INFO - Frontend: 2025-03-27 21:41:49,970 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 21:41:50,302 - root - INFO - Frontend: 2025-03-27 21:41:50,301 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 21:41:50,712 - root - INFO - Frontend: 2025-03-27 21:41:50,711 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 21:41:51,034 - root - INFO - Frontend: 2025-03-27 21:41:51,034 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 21:41:51,423 - root - INFO - Frontend: 2025-03-27 21:41:51,423 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 21:41:51,712 - root - INFO - Frontend: 2025-03-27 21:41:51,712 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 21:41:52,041 - root - INFO - Frontend: 2025-03-27 21:41:52,041 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 21:41:52,452 - root - INFO - Frontend: 2025-03-27 21:41:52,452 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 21:41:52,862 - root - INFO - Frontend: 2025-03-27 21:41:52,861 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 21:41:53,266 - root - INFO - Frontend: 2025-03-27 21:41:53,266 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 21:41:53,658 - root - INFO - Frontend: 2025-03-27 21:41:53,658 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:42 WET)" executed successfully
2025-03-27 21:42:08,926 - apscheduler.scheduler - WARNING - Execution of job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:08 WET)" skipped: maximum number of running instances reached (1)
2025-03-27 21:42:08,926 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:42:38 WET)" (scheduled at 2025-03-27 21:42:08.923030+00:00)
2025-03-27 21:42:08,926 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:08 WET)" (scheduled at 2025-03-27 21:42:08.923157+00:00)
2025-03-27 21:42:08,926 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:08 WET)" (scheduled at 2025-03-27 21:42:08.923326+00:00)
2025-03-27 21:42:08,927 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:42:38 WET)" executed successfully
2025-03-27 21:42:08,927 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:42:08,927 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 21:42:08,927 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:08 WET)" executed successfully
2025-03-27 21:42:08,928 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 21:42:12,537 - root - INFO - Frontend: 2025-03-27 21:42:12,536 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:42:42 WET)" (scheduled at 2025-03-27 21:42:12.531443+00:00)
2025-03-27 21:42:12,537 - root - INFO - Frontend: 2025-03-27 21:42:12,537 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:42:42 WET)" executed successfully
2025-03-27 21:42:38,928 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:43:08 WET)" (scheduled at 2025-03-27 21:42:38.923030+00:00)
2025-03-27 21:42:38,930 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:43:08 WET)" executed successfully
2025-03-27 21:42:42,537 - root - INFO - Frontend: 2025-03-27 21:42:42,536 - apscheduler.scheduler - WARNING - Execution of job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:42:42 WET)" skipped: maximum number of running instances reached (1)
2025-03-27 21:42:42,537 - root - INFO - Frontend: 2025-03-27 21:42:42,537 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:43:12 WET)" (scheduled at 2025-03-27 21:42:42.531443+00:00)
2025-03-27 21:42:42,537 - root - INFO - Frontend: 2025-03-27 21:42:42,537 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:43:12 WET)" executed successfully
2025-03-27 21:42:42,537 - root - INFO - Frontend: 2025-03-27 21:42:42,537 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:42 WET)" (scheduled at 2025-03-27 21:42:42.531522+00:00)
2025-03-27 21:42:42,538 - root - INFO - Frontend: 2025-03-27 21:42:42,537 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:42 WET)" (scheduled at 2025-03-27 21:42:42.531616+00:00)
2025-03-27 21:42:42,538 - root - INFO - Frontend: 2025-03-27 21:42:42,538 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:42:42,538 - root - INFO - Frontend: 2025-03-27 21:42:42,538 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 21:42:42,538 - root - INFO - Frontend: 2025-03-27 21:42:42,538 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 21:42:42,538 - root - INFO - Frontend: 2025-03-27 21:42:42,538 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:42 WET)" executed successfully
2025-03-27 21:43:08,929 - apscheduler.scheduler - WARNING - Execution of job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:08 WET)" skipped: maximum number of running instances reached (1)
2025-03-27 21:43:08,929 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:43:38 WET)" (scheduled at 2025-03-27 21:43:08.923030+00:00)
2025-03-27 21:43:08,930 - apscheduler.scheduler - WARNING - Execution of job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:08 WET)" skipped: maximum number of running instances reached (1)
2025-03-27 21:43:08,930 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:43:38 WET)" executed successfully
2025-03-27 21:43:08,931 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:44:08 WET)" (scheduled at 2025-03-27 21:43:08.923326+00:00)
2025-03-27 21:43:08,931 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:44:08 WET)" executed successfully
2025-03-27 21:43:12,536 - root - INFO - Frontend: 2025-03-27 21:43:12,535 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:43:42 WET)" (scheduled at 2025-03-27 21:43:12.531443+00:00)
2025-03-27 21:43:12,536 - root - INFO - Frontend: 2025-03-27 21:43:12,536 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:43:42 WET)" executed successfully
2025-03-27 21:43:38,930 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:44:08 WET)" (scheduled at 2025-03-27 21:43:38.923030+00:00)
2025-03-27 21:43:38,932 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:44:08 WET)" executed successfully
2025-03-27 21:43:42,537 - root - INFO - Frontend: 2025-03-27 21:43:42,537 - apscheduler.scheduler - WARNING - Execution of job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:42 WET)" skipped: maximum number of running instances reached (1)
2025-03-27 21:43:42,537 - root - INFO - Frontend: 2025-03-27 21:43:42,537 - apscheduler.scheduler - WARNING - Execution of job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:43:42 WET)" skipped: maximum number of running instances reached (1)
2025-03-27 21:43:42,537 - root - INFO - Frontend: 2025-03-27 21:43:42,537 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:44:12 WET)" (scheduled at 2025-03-27 21:43:42.531443+00:00)
2025-03-27 21:43:42,537 - root - INFO - Frontend: 2025-03-27 21:43:42,537 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:44:12 WET)" executed successfully
2025-03-27 21:43:42,538 - root - INFO - Frontend: 2025-03-27 21:43:42,537 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:44:42 WET)" (scheduled at 2025-03-27 21:43:42.531616+00:00)
2025-03-27 21:43:42,539 - root - INFO - Frontend: 2025-03-27 21:43:42,539 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:44:42 WET)" executed successfully
2025-03-27 21:44:01,271 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 21:44:01,373 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 21:44:01,374 - root - INFO - Frontend: 2025-03-27 21:44:01,374 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 21:44:01,374 - root - INFO - Frontend: 2025-03-27 21:44:01,374 - app.core.orchestrator - INFO - Shutting down scheduler
2025-03-27 21:44:16,571 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:44:16,572 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:44:16,572 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:44:16,572 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:44:16,572 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:44:16,572 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:44:16,572 - root - INFO - Starting trading bot in simulation mode with components: ['bot', 'api', 'frontend']
2025-03-27 21:44:16,572 - root - INFO - Local IP: 192.168.1.134
2025-03-27 21:44:16,572 - root - INFO - API will be available at: http://192.168.1.134:8080
2025-03-27 21:44:16,572 - root - INFO - Dashboard will be available at: http://192.168.1.134:3001
2025-03-27 21:44:16,572 - root - INFO - Starting trading bot with components: ['bot', 'api', 'frontend'] in mode: simulation
2025-03-27 21:44:16,572 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:44:16,572 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: simulation)
2025-03-27 21:44:16,577 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:44:16,577 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:44:16,577 - root - INFO - Exchange manager initialized in simulation mode
2025-03-27 21:44:16,577 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:44:16,577 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:44:16,577 - root - INFO - Created shared orchestrator instance
2025-03-27 21:44:16,577 - root - INFO - Starting trading bot in simulation mode
2025-03-27 21:44:16,577 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:44:16,577 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:44:16,577 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:44:16,594 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:44:16,626 - app.database.manager - INFO - Database connection successful
2025-03-27 21:44:16,626 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:44:16,626 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:44:16,626 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:44:16,626 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:44:16,626 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:44:16,626 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:44:16,626 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:44:16,626 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:44:16,626 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:44:16,626 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:44:16,627 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:44:16,627 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:44:16,627 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:44:16,627 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:44:16,627 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:44:16,627 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:44:16,627 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:44:16,629 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:44:16,629 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:44:16,629 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:44:16,629 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:44:16,634 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:44:16,634 - app.database.manager - INFO - Database connection established
2025-03-27 21:44:16,634 - app.core.orchestrator - INFO - Loaded 46 balance history records
2025-03-27 21:44:16,634 - app.core.orchestrator - INFO - Loaded 30 PnL history records
2025-03-27 21:44:16,634 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:44:16,634 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:44:16,635 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 21:44:16,635 - app.core.orchestrator - INFO - Scheduler started
2025-03-27 21:44:16,635 - app.core.orchestrator - INFO - Scheduling periodic jobs...
2025-03-27 21:44:16,635 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_heartbeat" to job store "default"
2025-03-27 21:44:16,635 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:16,635 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:16,635 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:16,635 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:16,635 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:16,635 - app.core.orchestrator - INFO - All periodic jobs scheduled.
2025-03-27 21:44:16,635 - app.core.orchestrator - INFO - Jobs scheduled
2025-03-27 21:44:16,635 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:44:16,635 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:44:16,635 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:44:16,635 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:44:16,635 - root - INFO - Bot initialized and started via orchestrator
2025-03-27 21:44:16,635 - root - INFO - Starting API server
2025-03-27 21:44:16,637 - app.api.server - INFO - API server initialized
2025-03-27 21:44:16,639 - app.api.server - INFO - Starting API server on http://192.168.1.134:8080 ...
2025-03-27 21:44:16,640 - app.api.server - INFO - API server available at: http://192.168.1.134:8080
2025-03-27 21:44:16,640 - app.api.server - INFO - API can be accessed from any device on the network using the above URL
2025-03-27 21:44:16,640 - root - INFO - Starting frontend server
2025-03-27 21:44:16,640 - root - INFO - Starting frontend server...
2025-03-27 21:44:16,689 - root - INFO - Database connection: Success
2025-03-27 21:44:16,689 - root - INFO - Redis connection: Success
2025-03-27 21:44:16,689 - root - INFO - Logging is configured and working
2025-03-27 21:44:16,689 - root - INFO - Trading bot is running with components: Trading Bot, API Server, Frontend Dashboard
2025-03-27 21:44:16,713 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:44:16,713 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:44:16,769 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:44:16,769 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:44:16,769 - root - INFO - Frontend: Building React app...
2025-03-27 21:44:16,842 - root - INFO - Frontend: 
2025-03-27 21:44:16,843 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:44:16,843 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:44:16,843 - root - INFO - Frontend: 
2025-03-27 21:44:17,766 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:44:45,258 - root - INFO - Frontend: Compiled with warnings.
2025-03-27 21:44:45,259 - root - INFO - Frontend: 
2025-03-27 21:44:45,259 - root - INFO - Frontend: TS7006: Parameter 'pair' implicitly has an 'any' type.
2025-03-27 21:44:45,259 - root - INFO - Frontend: 229 |               {active_pairs.length > 0 ? (
2025-03-27 21:44:45,259 - root - INFO - Frontend: 230 |                 <Stack direction="row" spacing={1} flexWrap="wrap">
2025-03-27 21:44:45,259 - root - INFO - Frontend: > 231 |                   {active_pairs.map((pair) => (
2025-03-27 21:44:45,259 - root - INFO - Frontend: |                                      ^^^^
2025-03-27 21:44:45,259 - root - INFO - Frontend: 232 |                     <Chip key={pair} label={pair} variant="outlined" size="small" sx={{ mb: 1 }} />
2025-03-27 21:44:45,259 - root - INFO - Frontend: 233 |                   ))}
2025-03-27 21:44:45,259 - root - INFO - Frontend: 234 |                 </Stack>
2025-03-27 21:44:45,259 - root - INFO - Frontend: 
2025-03-27 21:44:45,259 - root - INFO - Frontend: Search for the keywords to learn more about each warning.
2025-03-27 21:44:45,259 - root - INFO - Frontend: To ignore, add // eslint-disable-next-line to the line before.
2025-03-27 21:44:45,259 - root - INFO - Frontend: 
2025-03-27 21:44:45,259 - root - INFO - Frontend: File sizes after gzip:
2025-03-27 21:44:45,259 - root - INFO - Frontend: 
2025-03-27 21:44:45,362 - root - INFO - Frontend: 1.44 MB  build/static/js/main.2abb7c74.js
2025-03-27 21:44:45,362 - root - INFO - Frontend: 
2025-03-27 21:44:45,362 - root - INFO - Frontend: The bundle size is significantly larger than recommended.
2025-03-27 21:44:45,362 - root - INFO - Frontend: Consider reducing it with code splitting: https://goo.gl/9VhYWB
2025-03-27 21:44:45,362 - root - INFO - Frontend: You can also analyze the project dependencies: https://goo.gl/LeUzfb
2025-03-27 21:44:45,362 - root - INFO - Frontend: 
2025-03-27 21:44:45,362 - root - INFO - Frontend: The project was built assuming it is hosted at /.
2025-03-27 21:44:45,362 - root - INFO - Frontend: You can control this with the homepage field in your package.json.
2025-03-27 21:44:45,362 - root - INFO - Frontend: 
2025-03-27 21:44:45,363 - root - INFO - Frontend: The build folder is ready to be deployed.
2025-03-27 21:44:45,363 - root - INFO - Frontend: You may serve it with a static server:
2025-03-27 21:44:45,363 - root - INFO - Frontend: 
2025-03-27 21:44:45,363 - root - INFO - Frontend: npm install -g serve
2025-03-27 21:44:45,363 - root - INFO - Frontend: serve -s build
2025-03-27 21:44:45,363 - root - INFO - Frontend: 
2025-03-27 21:44:45,363 - root - INFO - Frontend: Find out more about deployment here:
2025-03-27 21:44:45,363 - root - INFO - Frontend: 
2025-03-27 21:44:45,363 - root - INFO - Frontend: https://cra.link/deployment
2025-03-27 21:44:45,363 - root - INFO - Frontend: 
2025-03-27 21:44:45,446 - root - INFO - Frontend: React app built successfully
2025-03-27 21:44:45,447 - root - INFO - Frontend: Starting frontend server...
2025-03-27 21:44:45,526 - root - INFO - Frontend: 2025-03-27 21:44:45,526 - __main__ - INFO - Current file: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/server.py
2025-03-27 21:44:45,526 - root - INFO - Frontend: 2025-03-27 21:44:45,526 - __main__ - INFO - Current directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:44:45,526 - root - INFO - Frontend: 2025-03-27 21:44:45,526 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML to sys.path
2025-03-27 21:44:45,526 - root - INFO - Frontend: 2025-03-27 21:44:45,526 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app to sys.path
2025-03-27 21:44:45,526 - root - INFO - Frontend: 2025-03-27 21:44:45,526 - __main__ - INFO - Added /Users/carloslarramba/Documents to sys.path
2025-03-27 21:44:45,526 - root - INFO - Frontend: 2025-03-27 21:44:45,526 - __main__ - INFO - Attempting to import using absolute imports...
2025-03-27 21:44:46,641 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:45:16 WET)" (scheduled at 2025-03-27 21:44:46.635254+00:00)
2025-03-27 21:44:46,641 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:45:16 WET)" executed successfully
2025-03-27 21:44:49,732 - root - INFO - Frontend: 2025-03-27 21:44:49,732 - __main__ - INFO - Successfully imported using absolute imports
2025-03-27 21:44:49,844 - root - INFO - Frontend: 2025-03-27 21:44:49,844 - __main__ - INFO - Mounted static files directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/react-app/build/static
2025-03-27 21:44:49,845 - root - INFO - Frontend: 2025-03-27 21:44:49,845 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:44:49,846 - root - INFO - Frontend: 2025-03-27 21:44:49,845 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:44:49,846 - root - INFO - Frontend: 2025-03-27 21:44:49,845 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:44:49,846 - root - INFO - Frontend: 2025-03-27 21:44:49,846 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:44:49,846 - root - INFO - Frontend: 2025-03-27 21:44:49,846 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:44:49,846 - root - INFO - Frontend: 2025-03-27 21:44:49,846 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:44:49,957 - root - INFO - Frontend: INFO:     Started server process [80624]
2025-03-27 21:44:49,957 - root - INFO - Frontend: INFO:     Waiting for application startup.
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,957 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - __main__ - INFO - Bot initialized
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:44:49,958 - root - INFO - Frontend: 2025-03-27 21:44:49,958 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 21:44:49,962 - root - INFO - Frontend: 2025-03-27 21:44:49,962 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:44:49,962 - root - INFO - Frontend: 2025-03-27 21:44:49,962 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:44:49,962 - root - INFO - Frontend: 2025-03-27 21:44:49,962 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 21:44:49,963 - root - INFO - Frontend: 2025-03-27 21:44:49,962 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 21:44:49,963 - root - INFO - Frontend: 2025-03-27 21:44:49,962 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 21:44:49,963 - root - INFO - Frontend: 2025-03-27 21:44:49,962 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:44:49,963 - root - INFO - Frontend: 2025-03-27 21:44:49,962 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:44:49,963 - root - INFO - Frontend: 2025-03-27 21:44:49,962 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:44:49,974 - root - INFO - Frontend: 2025-03-27 21:44:49,974 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:44:49,999 - root - INFO - Frontend: 2025-03-27 21:44:49,999 - app.database.manager - INFO - Database connection successful
2025-03-27 21:44:49,999 - root - INFO - Frontend: 2025-03-27 21:44:49,999 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:44:49,999 - root - INFO - Frontend: 2025-03-27 21:44:49,999 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:49,999 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:49,999 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:49,999 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:44:50,000 - root - INFO - Frontend: 2025-03-27 21:44:50,000 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:44:50,001 - root - INFO - Frontend: 2025-03-27 21:44:50,001 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:44:50,001 - root - INFO - Frontend: 2025-03-27 21:44:50,001 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:44:50,001 - root - INFO - Frontend: 2025-03-27 21:44:50,001 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:44:50,001 - root - INFO - Frontend: 2025-03-27 21:44:50,001 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:44:50,003 - root - INFO - Frontend: 2025-03-27 21:44:50,003 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:44:50,003 - root - INFO - Frontend: 2025-03-27 21:44:50,003 - app.database.manager - INFO - Database connection established
2025-03-27 21:44:50,003 - root - INFO - Frontend: 2025-03-27 21:44:50,003 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - Scheduler started
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - Scheduling periodic jobs...
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_heartbeat" to job store "default"
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.schedule_jobs.<locals>.run_async_job" to job store "default"
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - All periodic jobs scheduled.
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - Jobs scheduled
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:44:50,004 - root - INFO - Frontend: 2025-03-27 21:44:50,004 - __main__ - INFO - Bot started in simulation mode
2025-03-27 21:44:50,004 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 21:44:50,004 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 21:44:59,835 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 21:44:59,835 - root - INFO - Frontend: INFO:     192.168.1.134:51899 - "GET / HTTP/1.1" 200 OK
2025-03-27 21:44:59,837 - root - INFO - Frontend: INFO:     192.168.1.134:51900 - "GET /manifest.json HTTP/1.1" 200 OK
2025-03-27 21:44:59,839 - root - INFO - Frontend: INFO:     192.168.1.134:51901 - "GET /static/js/main.2abb7c74.js HTTP/1.1" 200 OK
2025-03-27 21:44:59,971 - root - INFO - Frontend: INFO:     ('192.168.1.134', 51902) - "WebSocket /ws" [accepted]
2025-03-27 21:44:59,971 - root - INFO - Frontend: 2025-03-27 21:44:59,971 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 21:44:59,971 - root - INFO - Frontend: 2025-03-27 21:44:59,971 - __main__ - WARNING - ML module not available in BotOrchestrator.
2025-03-27 21:44:59,971 - root - INFO - Frontend: INFO:     connection open
2025-03-27 21:44:59,972 - root - INFO - Frontend: 2025-03-27 21:44:59,972 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:44:59,973 - root - INFO - Frontend: 2025-03-27 21:44:59,972 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:44:59.972926", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:44:59,973 - root - INFO - Frontend: 2025-03-27 21:44:59,973 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:44:59,973 - root - INFO - Frontend: 2025-03-27 21:44:59,973 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:44:59,973 - root - INFO - Frontend: 2025-03-27 21:44:59,973 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:44:59.972926", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"], "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 21:45:02,731 - root - INFO - Frontend: 2025-03-27 21:45:02,731 - __main__ - INFO - WebSocket client disconnected
2025-03-27 21:45:02,732 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 21:45:16,641 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:45:46 WET)" (scheduled at 2025-03-27 21:45:16.635254+00:00)
2025-03-27 21:45:16,641 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:16 WET)" (scheduled at 2025-03-27 21:45:16.635354+00:00)
2025-03-27 21:45:16,642 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:16 WET)" (scheduled at 2025-03-27 21:45:16.635432+00:00)
2025-03-27 21:45:16,642 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:16 WET)" (scheduled at 2025-03-27 21:45:16.635525+00:00)
2025-03-27 21:45:16,642 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:45:46 WET)" executed successfully
2025-03-27 21:45:16,643 - app.core.orchestrator - ERROR - No running event loop found to schedule async job. Scheduler might be misconfigured.
2025-03-27 21:45:16,643 - app.core.orchestrator - ERROR - No running event loop found to schedule async job. Scheduler might be misconfigured.
2025-03-27 21:45:16,643 - app.core.orchestrator - ERROR - No running event loop found to schedule async job. Scheduler might be misconfigured.
2025-03-27 21:45:16,643 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:16 WET)" executed successfully
2025-03-27 21:45:16,643 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:16 WET)" executed successfully
2025-03-27 21:45:16,644 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:16 WET)" executed successfully
2025-03-27 21:45:20,010 - root - INFO - Frontend: 2025-03-27 21:45:20,010 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:45:20 WET)" (scheduled at 2025-03-27 21:45:20.004363+00:00)
2025-03-27 21:45:20,012 - root - INFO - Frontend: 2025-03-27 21:45:20,011 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:45:50 WET)" executed successfully
2025-03-27 21:45:46,642 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:46:16 WET)" (scheduled at 2025-03-27 21:45:46.635254+00:00)
2025-03-27 21:45:46,643 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:46:16 WET)" executed successfully
2025-03-27 21:45:50,008 - root - INFO - Frontend: 2025-03-27 21:45:50,008 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:46:20 WET)" (scheduled at 2025-03-27 21:45:50.004363+00:00)
2025-03-27 21:45:50,009 - root - INFO - Frontend: 2025-03-27 21:45:50,008 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:50 WET)" (scheduled at 2025-03-27 21:45:50.004440+00:00)
2025-03-27 21:45:50,010 - root - INFO - Frontend: 2025-03-27 21:45:50,009 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:46:20 WET)" executed successfully
2025-03-27 21:45:50,010 - root - INFO - Frontend: 2025-03-27 21:45:50,009 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:50 WET)" (scheduled at 2025-03-27 21:45:50.004490+00:00)
2025-03-27 21:45:50,010 - root - INFO - Frontend: 2025-03-27 21:45:50,009 - app.core.orchestrator - ERROR - No running event loop found to schedule async job. Scheduler might be misconfigured.
2025-03-27 21:45:50,010 - root - INFO - Frontend: 2025-03-27 21:45:50,010 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:50 WET)" (scheduled at 2025-03-27 21:45:50.004532+00:00)
2025-03-27 21:45:50,010 - root - INFO - Frontend: 2025-03-27 21:45:50,010 - app.core.orchestrator - ERROR - No running event loop found to schedule async job. Scheduler might be misconfigured.
2025-03-27 21:45:50,010 - root - INFO - Frontend: 2025-03-27 21:45:50,010 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:50 WET)" executed successfully
2025-03-27 21:45:50,010 - root - INFO - Frontend: 2025-03-27 21:45:50,010 - app.core.orchestrator - ERROR - No running event loop found to schedule async job. Scheduler might be misconfigured.
2025-03-27 21:45:50,010 - root - INFO - Frontend: 2025-03-27 21:45:50,010 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:50 WET)" executed successfully
2025-03-27 21:45:50,011 - root - INFO - Frontend: 2025-03-27 21:45:50,010 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:46:50 WET)" executed successfully
2025-03-27 21:46:16,640 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:46:46 WET)" (scheduled at 2025-03-27 21:46:16.635254+00:00)
2025-03-27 21:46:16,641 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:47:16 WET)" (scheduled at 2025-03-27 21:46:16.635354+00:00)
2025-03-27 21:46:16,641 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:47:16 WET)" (scheduled at 2025-03-27 21:46:16.635432+00:00)
2025-03-27 21:46:16,641 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:47:16 WET)" (scheduled at 2025-03-27 21:46:16.635525+00:00)
2025-03-27 21:46:16,641 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:46:46 WET)" executed successfully
2025-03-27 21:46:16,641 - app.core.orchestrator - ERROR - No running event loop found to schedule async job. Scheduler might be misconfigured.
2025-03-27 21:46:16,641 - app.core.orchestrator - ERROR - No running event loop found to schedule async job. Scheduler might be misconfigured.
2025-03-27 21:46:16,641 - app.core.orchestrator - ERROR - No running event loop found to schedule async job. Scheduler might be misconfigured.
2025-03-27 21:46:16,641 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:47:16 WET)" executed successfully
2025-03-27 21:46:16,642 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:47:16 WET)" executed successfully
2025-03-27 21:46:16,642 - apscheduler.executors.default - INFO - Job "BotOrchestrator.schedule_jobs.<locals>.run_async_job (trigger: interval[0:01:00], next run at: 2025-03-27 21:47:16 WET)" executed successfully
2025-03-27 21:46:20,006 - root - INFO - Frontend: 2025-03-27 21:46:20,006 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:46:50 WET)" (scheduled at 2025-03-27 21:46:20.004363+00:00)
2025-03-27 21:46:20,006 - root - INFO - Frontend: 2025-03-27 21:46:20,006 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:46:50 WET)" executed successfully
2025-03-27 21:46:31,925 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 21:46:32,026 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 21:46:32,026 - root - INFO - Frontend: 2025-03-27 21:46:32,026 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 21:46:32,026 - root - INFO - Frontend: 2025-03-27 21:46:32,026 - app.core.orchestrator - INFO - Shutting down scheduler
2025-03-27 21:46:32,026 - root - INFO - Frontend: 2025-03-27 21:46:32,026 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-03-27 21:46:32,027 - root - INFO - Frontend: 2025-03-27 21:46:32,027 - app.core.orchestrator - INFO - Scheduler shut down successfully
2025-03-27 21:46:32,027 - root - INFO - Frontend: 2025-03-27 21:46:32,027 - app.core.orchestrator - INFO - Trading bot stopped successfully
2025-03-27 21:46:32,027 - root - INFO - Frontend: 2025-03-27 21:46:32,027 - app.utils.notification_system - INFO - [NOTICE] SYSTEM - Trading Bot Stopped: Trading bot has been stopped after running for 0.0 hours
2025-03-27 21:46:32,027 - root - INFO - Frontend: 2025-03-27 21:46:32,027 - app.utils.notification_system - INFO - Additional data: {
2025-03-27 21:46:32,027 - root - INFO - Frontend: "run_duration_hours": "0.0",
2025-03-27 21:46:32,027 - root - INFO - Frontend: "trades_executed": 0,
2025-03-27 21:46:32,027 - root - INFO - Frontend: "profit_loss": "$0.00"
2025-03-27 21:46:32,027 - root - INFO - Frontend: }
2025-03-27 21:46:32,027 - root - INFO - Frontend: INFO:     Application shutdown complete.
2025-03-27 21:46:32,027 - root - INFO - Frontend: INFO:     Finished server process [80624]
2025-03-27 21:46:32,201 - root - INFO - Frontend: Exception ignored in: <module 'threading' from '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py'>
2025-03-27 21:46:32,201 - root - INFO - Frontend: Traceback (most recent call last):
2025-03-27 21:46:32,201 - root - INFO - Frontend: File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py", line 1448, in _shutdown
2025-03-27 21:46:32,201 - root - INFO - Frontend: lock.acquire()
2025-03-27 21:46:32,202 - root - INFO - Frontend: KeyboardInterrupt:
2025-03-27 21:46:33,111 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 21:46:33,111 - root - INFO - Attempting to restart frontend...
2025-03-27 21:46:33,112 - root - INFO - Starting frontend server...
2025-03-27 21:46:33,124 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:46:33,629 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-3' coro=<Server.serve() done, defined at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py:68> exception=KeyboardInterrupt()>
Traceback (most recent call last):
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/run.py", line 411, in <module>
    asyncio.run(main())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 629, in run_until_complete
    self.run_forever()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 596, in run_forever
    self._run_once()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 1890, in _run_once
    handle._run()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 70, in serve
    await self._serve(sockets)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/contextlib.py", line 124, in __exit__
    next(self.gen)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 330, in capture_signals
    signal.raise_signal(captured_signal)
KeyboardInterrupt
2025-03-27 21:47:02,959 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:47:02,960 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:47:02,960 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:47:02,960 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:47:02,960 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:47:02,960 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:47:02,960 - root - INFO - Starting trading bot in simulation mode with components: ['bot', 'api', 'frontend']
2025-03-27 21:47:02,960 - root - INFO - Local IP: 192.168.1.134
2025-03-27 21:47:02,960 - root - INFO - API will be available at: http://192.168.1.134:8080
2025-03-27 21:47:02,960 - root - INFO - Dashboard will be available at: http://192.168.1.134:3001
2025-03-27 21:47:02,960 - root - INFO - Starting trading bot with components: ['bot', 'api', 'frontend'] in mode: simulation
2025-03-27 21:47:02,960 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:47:02,960 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: simulation)
2025-03-27 21:47:02,965 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:47:02,965 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:47:02,965 - root - INFO - Exchange manager initialized in simulation mode
2025-03-27 21:47:02,965 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:47:02,965 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:47:02,965 - root - INFO - Created shared orchestrator instance
2025-03-27 21:47:02,965 - root - INFO - Starting trading bot in simulation mode
2025-03-27 21:47:02,965 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:47:02,965 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:47:02,965 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:47:02,982 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:47:03,014 - app.database.manager - INFO - Database connection successful
2025-03-27 21:47:03,015 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:47:03,015 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:47:03,015 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:47:03,015 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:47:03,015 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:47:03,015 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:47:03,015 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:47:03,015 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:47:03,015 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:47:03,015 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:47:03,015 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:47:03,015 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:47:03,015 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:47:03,015 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:47:03,015 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:47:03,015 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:47:03,015 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:47:03,018 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:47:03,018 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:47:03,018 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:47:03,018 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:47:03,022 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:47:03,022 - app.database.manager - INFO - Database connection established
2025-03-27 21:47:03,022 - app.core.orchestrator - INFO - Loaded 46 balance history records
2025-03-27 21:47:03,023 - app.core.orchestrator - INFO - Loaded 30 PnL history records
2025-03-27 21:47:03,023 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:47:03,023 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:47:03,023 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:47:03,023 - app.core.orchestrator - ERROR - Scheduler not running, cannot schedule jobs
2025-03-27 21:47:03,023 - app.core.orchestrator - INFO - Jobs scheduled
2025-03-27 21:47:03,023 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:47:03,023 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:47:03,023 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:47:03,023 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:47:03,023 - root - INFO - Bot initialized and started via orchestrator
2025-03-27 21:47:03,023 - root - INFO - Starting API server
2025-03-27 21:47:03,025 - app.api.server - INFO - API server initialized
2025-03-27 21:47:03,026 - app.api.server - INFO - Starting API server on http://192.168.1.134:8080 ...
2025-03-27 21:47:03,027 - app.api.server - INFO - API server available at: http://192.168.1.134:8080
2025-03-27 21:47:03,027 - app.api.server - INFO - API can be accessed from any device on the network using the above URL
2025-03-27 21:47:03,027 - root - INFO - Starting frontend server
2025-03-27 21:47:03,027 - root - INFO - Starting frontend server...
2025-03-27 21:47:03,070 - root - INFO - Database connection: Success
2025-03-27 21:47:03,070 - root - INFO - Redis connection: Success
2025-03-27 21:47:03,070 - root - INFO - Logging is configured and working
2025-03-27 21:47:03,070 - root - INFO - Trading bot is running with components: Trading Bot, API Server, Frontend Dashboard
2025-03-27 21:47:03,094 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:47:03,094 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:47:03,142 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:47:03,142 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:47:03,143 - root - INFO - Frontend: Building React app...
2025-03-27 21:47:03,208 - root - INFO - Frontend: 
2025-03-27 21:47:03,208 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:47:03,208 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:47:03,208 - root - INFO - Frontend: 
2025-03-27 21:47:04,134 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:47:30,095 - root - INFO - Frontend: Compiled with warnings.
2025-03-27 21:47:30,097 - root - INFO - Frontend: 
2025-03-27 21:47:30,097 - root - INFO - Frontend: TS7006: Parameter 'pair' implicitly has an 'any' type.
2025-03-27 21:47:30,097 - root - INFO - Frontend: 229 |               {active_pairs.length > 0 ? (
2025-03-27 21:47:30,097 - root - INFO - Frontend: 230 |                 <Stack direction="row" spacing={1} flexWrap="wrap">
2025-03-27 21:47:30,097 - root - INFO - Frontend: > 231 |                   {active_pairs.map((pair) => (
2025-03-27 21:47:30,097 - root - INFO - Frontend: |                                      ^^^^
2025-03-27 21:47:30,097 - root - INFO - Frontend: 232 |                     <Chip key={pair} label={pair} variant="outlined" size="small" sx={{ mb: 1 }} />
2025-03-27 21:47:30,097 - root - INFO - Frontend: 233 |                   ))}
2025-03-27 21:47:30,097 - root - INFO - Frontend: 234 |                 </Stack>
2025-03-27 21:47:30,097 - root - INFO - Frontend: 
2025-03-27 21:47:30,097 - root - INFO - Frontend: Search for the keywords to learn more about each warning.
2025-03-27 21:47:30,097 - root - INFO - Frontend: To ignore, add // eslint-disable-next-line to the line before.
2025-03-27 21:47:30,097 - root - INFO - Frontend: 
2025-03-27 21:47:30,097 - root - INFO - Frontend: File sizes after gzip:
2025-03-27 21:47:30,097 - root - INFO - Frontend: 
2025-03-27 21:47:30,199 - root - INFO - Frontend: 1.44 MB  build/static/js/main.2abb7c74.js
2025-03-27 21:47:30,199 - root - INFO - Frontend: 
2025-03-27 21:47:30,199 - root - INFO - Frontend: The bundle size is significantly larger than recommended.
2025-03-27 21:47:30,199 - root - INFO - Frontend: Consider reducing it with code splitting: https://goo.gl/9VhYWB
2025-03-27 21:47:30,200 - root - INFO - Frontend: You can also analyze the project dependencies: https://goo.gl/LeUzfb
2025-03-27 21:47:30,200 - root - INFO - Frontend: 
2025-03-27 21:47:30,200 - root - INFO - Frontend: The project was built assuming it is hosted at /.
2025-03-27 21:47:30,200 - root - INFO - Frontend: You can control this with the homepage field in your package.json.
2025-03-27 21:47:30,200 - root - INFO - Frontend: 
2025-03-27 21:47:30,200 - root - INFO - Frontend: The build folder is ready to be deployed.
2025-03-27 21:47:30,200 - root - INFO - Frontend: You may serve it with a static server:
2025-03-27 21:47:30,200 - root - INFO - Frontend: 
2025-03-27 21:47:30,200 - root - INFO - Frontend: npm install -g serve
2025-03-27 21:47:30,200 - root - INFO - Frontend: serve -s build
2025-03-27 21:47:30,200 - root - INFO - Frontend: 
2025-03-27 21:47:30,200 - root - INFO - Frontend: Find out more about deployment here:
2025-03-27 21:47:30,200 - root - INFO - Frontend: 
2025-03-27 21:47:30,200 - root - INFO - Frontend: https://cra.link/deployment
2025-03-27 21:47:30,200 - root - INFO - Frontend: 
2025-03-27 21:47:30,282 - root - INFO - Frontend: React app built successfully
2025-03-27 21:47:30,282 - root - INFO - Frontend: Starting frontend server...
2025-03-27 21:47:30,367 - root - INFO - Frontend: 2025-03-27 21:47:30,367 - __main__ - INFO - Current file: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/server.py
2025-03-27 21:47:30,367 - root - INFO - Frontend: 2025-03-27 21:47:30,367 - __main__ - INFO - Current directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:47:30,367 - root - INFO - Frontend: 2025-03-27 21:47:30,367 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML to sys.path
2025-03-27 21:47:30,367 - root - INFO - Frontend: 2025-03-27 21:47:30,367 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app to sys.path
2025-03-27 21:47:30,367 - root - INFO - Frontend: 2025-03-27 21:47:30,367 - __main__ - INFO - Added /Users/carloslarramba/Documents to sys.path
2025-03-27 21:47:30,367 - root - INFO - Frontend: 2025-03-27 21:47:30,367 - __main__ - INFO - Attempting to import using absolute imports...
2025-03-27 21:47:34,930 - root - INFO - Frontend: 2025-03-27 21:47:34,930 - __main__ - INFO - Successfully imported using absolute imports
2025-03-27 21:47:35,045 - root - INFO - Frontend: 2025-03-27 21:47:35,045 - __main__ - INFO - Mounted static files directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/react-app/build/static
2025-03-27 21:47:35,047 - root - INFO - Frontend: 2025-03-27 21:47:35,047 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:47:35,047 - root - INFO - Frontend: 2025-03-27 21:47:35,047 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:47:35,047 - root - INFO - Frontend: 2025-03-27 21:47:35,047 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:47:35,047 - root - INFO - Frontend: 2025-03-27 21:47:35,047 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:47:35,047 - root - INFO - Frontend: 2025-03-27 21:47:35,047 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:47:35,047 - root - INFO - Frontend: 2025-03-27 21:47:35,047 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:47:35,163 - root - INFO - Frontend: INFO:     Started server process [80818]
2025-03-27 21:47:35,163 - root - INFO - Frontend: INFO:     Waiting for application startup.
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - __main__ - INFO - Bot initialized
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:47:35,164 - root - INFO - Frontend: 2025-03-27 21:47:35,164 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 21:47:35,169 - root - INFO - Frontend: 2025-03-27 21:47:35,169 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:47:35,169 - root - INFO - Frontend: 2025-03-27 21:47:35,169 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:47:35,169 - root - INFO - Frontend: 2025-03-27 21:47:35,169 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 21:47:35,169 - root - INFO - Frontend: 2025-03-27 21:47:35,169 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 21:47:35,169 - root - INFO - Frontend: 2025-03-27 21:47:35,169 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 21:47:35,169 - root - INFO - Frontend: 2025-03-27 21:47:35,169 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:47:35,169 - root - INFO - Frontend: 2025-03-27 21:47:35,169 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:47:35,169 - root - INFO - Frontend: 2025-03-27 21:47:35,169 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:47:35,182 - root - INFO - Frontend: 2025-03-27 21:47:35,182 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:47:35,209 - root - INFO - Frontend: 2025-03-27 21:47:35,209 - app.database.manager - INFO - Database connection successful
2025-03-27 21:47:35,209 - root - INFO - Frontend: 2025-03-27 21:47:35,209 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:47:35,209 - root - INFO - Frontend: 2025-03-27 21:47:35,209 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:47:35,209 - root - INFO - Frontend: 2025-03-27 21:47:35,209 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:47:35,209 - root - INFO - Frontend: 2025-03-27 21:47:35,209 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:47:35,209 - root - INFO - Frontend: 2025-03-27 21:47:35,209 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:47:35,209 - root - INFO - Frontend: 2025-03-27 21:47:35,209 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:47:35,209 - root - INFO - Frontend: 2025-03-27 21:47:35,209 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:47:35,209 - root - INFO - Frontend: 2025-03-27 21:47:35,209 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:47:35,210 - root - INFO - Frontend: 2025-03-27 21:47:35,210 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:47:35,210 - root - INFO - Frontend: 2025-03-27 21:47:35,210 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:47:35,210 - root - INFO - Frontend: 2025-03-27 21:47:35,210 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:47:35,210 - root - INFO - Frontend: 2025-03-27 21:47:35,210 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:47:35,210 - root - INFO - Frontend: 2025-03-27 21:47:35,210 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:47:35,210 - root - INFO - Frontend: 2025-03-27 21:47:35,210 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:47:35,210 - root - INFO - Frontend: 2025-03-27 21:47:35,210 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:47:35,210 - root - INFO - Frontend: 2025-03-27 21:47:35,210 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:47:35,210 - root - INFO - Frontend: 2025-03-27 21:47:35,210 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:47:35,211 - root - INFO - Frontend: 2025-03-27 21:47:35,211 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:47:35,211 - root - INFO - Frontend: 2025-03-27 21:47:35,211 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:47:35,211 - root - INFO - Frontend: 2025-03-27 21:47:35,211 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:47:35,211 - root - INFO - Frontend: 2025-03-27 21:47:35,211 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:47:35,213 - root - INFO - Frontend: 2025-03-27 21:47:35,213 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:47:35,213 - root - INFO - Frontend: 2025-03-27 21:47:35,213 - app.database.manager - INFO - Database connection established
2025-03-27 21:47:35,213 - root - INFO - Frontend: 2025-03-27 21:47:35,213 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 21:47:35,213 - root - INFO - Frontend: 2025-03-27 21:47:35,213 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 21:47:35,214 - root - INFO - Frontend: 2025-03-27 21:47:35,214 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:47:35,214 - root - INFO - Frontend: 2025-03-27 21:47:35,214 - app.core.orchestrator - ERROR - Scheduler not running, cannot schedule jobs
2025-03-27 21:47:35,214 - root - INFO - Frontend: 2025-03-27 21:47:35,214 - app.core.orchestrator - INFO - Jobs scheduled
2025-03-27 21:47:35,214 - root - INFO - Frontend: 2025-03-27 21:47:35,214 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:47:35,214 - root - INFO - Frontend: 2025-03-27 21:47:35,214 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:47:35,214 - root - INFO - Frontend: 2025-03-27 21:47:35,214 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:47:35,214 - root - INFO - Frontend: 2025-03-27 21:47:35,214 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:47:35,214 - root - INFO - Frontend: 2025-03-27 21:47:35,214 - __main__ - INFO - Bot started in simulation mode
2025-03-27 21:47:35,214 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 21:47:35,214 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 21:48:56,116 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 21:48:56,217 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 21:48:56,218 - root - INFO - Frontend: 2025-03-27 21:48:56,217 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 21:48:56,218 - root - INFO - Frontend: 2025-03-27 21:48:56,218 - app.core.orchestrator - INFO - Trading bot stopped successfully
2025-03-27 21:48:56,218 - root - INFO - Frontend: 2025-03-27 21:48:56,218 - app.utils.notification_system - INFO - [NOTICE] SYSTEM - Trading Bot Stopped: Trading bot has been stopped after running for 0.0 hours
2025-03-27 21:48:56,219 - root - INFO - Frontend: 2025-03-27 21:48:56,219 - app.utils.notification_system - INFO - Additional data: {
2025-03-27 21:48:56,219 - root - INFO - Frontend: "run_duration_hours": "0.0",
2025-03-27 21:48:56,219 - root - INFO - Frontend: "trades_executed": 0,
2025-03-27 21:48:56,219 - root - INFO - Frontend: "profit_loss": "$0.00"
2025-03-27 21:48:56,219 - root - INFO - Frontend: }
2025-03-27 21:48:56,219 - root - INFO - Frontend: INFO:     Application shutdown complete.
2025-03-27 21:48:56,219 - root - INFO - Frontend: INFO:     Finished server process [80818]
2025-03-27 21:48:56,221 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 21:48:56,389 - root - INFO - Frontend: Exception ignored in: <module 'threading' from '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py'>
2025-03-27 21:48:56,390 - root - INFO - Frontend: Traceback (most recent call last):
2025-03-27 21:48:56,390 - root - INFO - Frontend: File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py", line 1448, in _shutdown
2025-03-27 21:48:56,390 - root - INFO - Frontend: lock.acquire()
2025-03-27 21:48:56,390 - root - INFO - Frontend: KeyboardInterrupt:
2025-03-27 21:48:56,694 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 21:48:56,694 - root - INFO - Attempting to restart frontend...
2025-03-27 21:48:56,694 - root - INFO - Starting frontend server...
2025-03-27 21:48:56,706 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:48:56,709 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:48:56,789 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:48:56,789 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:48:56,789 - root - INFO - Frontend: Building React app...
2025-03-27 21:48:56,851 - root - INFO - Frontend: 
2025-03-27 21:48:56,851 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:48:56,852 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:48:56,852 - root - INFO - Frontend: 
2025-03-27 21:48:57,596 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:48:58,388 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-3' coro=<Server.serve() done, defined at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py:68> exception=KeyboardInterrupt()>
Traceback (most recent call last):
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/run.py", line 411, in <module>
    asyncio.run(main())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 629, in run_until_complete
    self.run_forever()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 596, in run_forever
    self._run_once()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 1890, in _run_once
    handle._run()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 70, in serve
    await self._serve(sockets)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/contextlib.py", line 124, in __exit__
    next(self.gen)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 330, in capture_signals
    signal.raise_signal(captured_signal)
KeyboardInterrupt
2025-03-27 21:49:04,661 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:49:04,661 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:49:04,661 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:49:04,661 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:49:04,661 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:49:04,661 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:49:04,661 - root - INFO - Starting trading bot in simulation mode with components: ['bot', 'api', 'frontend']
2025-03-27 21:49:04,661 - root - INFO - Local IP: 192.168.1.134
2025-03-27 21:49:04,661 - root - INFO - API will be available at: http://192.168.1.134:8080
2025-03-27 21:49:04,661 - root - INFO - Dashboard will be available at: http://192.168.1.134:3001
2025-03-27 21:49:04,661 - root - INFO - Starting trading bot with components: ['bot', 'api', 'frontend'] in mode: simulation
2025-03-27 21:49:04,661 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:49:04,661 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: simulation)
2025-03-27 21:49:04,666 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:49:04,666 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:49:04,666 - root - INFO - Exchange manager initialized in simulation mode
2025-03-27 21:49:04,666 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:49:04,666 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:49:04,666 - root - INFO - Created shared orchestrator instance
2025-03-27 21:49:04,666 - root - INFO - Starting trading bot in simulation mode
2025-03-27 21:49:04,666 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:49:04,667 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:49:04,667 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:49:04,679 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:49:04,718 - app.database.manager - INFO - Database connection successful
2025-03-27 21:49:04,718 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:49:04,718 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:49:04,718 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:49:04,718 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:49:04,718 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:49:04,718 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:49:04,718 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:49:04,718 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:49:04,719 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:49:04,719 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:49:04,719 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:49:04,719 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:49:04,719 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:49:04,719 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:49:04,719 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:49:04,719 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:49:04,719 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:49:04,720 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:49:04,720 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:49:04,720 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:49:04,720 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:49:04,722 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:49:04,722 - app.database.manager - INFO - Database connection established
2025-03-27 21:49:04,722 - app.core.orchestrator - INFO - Loaded 46 balance history records
2025-03-27 21:49:04,722 - app.core.orchestrator - INFO - Loaded 30 PnL history records
2025-03-27 21:49:04,723 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:49:04,723 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:49:04,723 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:49:04,723 - app.core.orchestrator - ERROR - Scheduler not running, cannot schedule jobs
2025-03-27 21:49:04,723 - app.core.orchestrator - INFO - Jobs scheduled
2025-03-27 21:49:04,723 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:49:04,723 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:49:04,723 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:49:04,723 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:49:04,723 - root - INFO - Bot initialized and started via orchestrator
2025-03-27 21:49:04,723 - root - INFO - Starting API server
2025-03-27 21:49:04,725 - app.api.server - INFO - API server initialized
2025-03-27 21:49:04,726 - app.api.server - INFO - Starting API server on http://192.168.1.134:8080 ...
2025-03-27 21:49:04,727 - app.api.server - INFO - API server available at: http://192.168.1.134:8080
2025-03-27 21:49:04,727 - app.api.server - INFO - API can be accessed from any device on the network using the above URL
2025-03-27 21:49:04,727 - root - INFO - Starting frontend server
2025-03-27 21:49:04,727 - root - INFO - Starting frontend server...
2025-03-27 21:49:04,766 - root - INFO - Database connection: Success
2025-03-27 21:49:04,766 - root - INFO - Redis connection: Success
2025-03-27 21:49:04,766 - root - INFO - Logging is configured and working
2025-03-27 21:49:04,766 - root - INFO - Trading bot is running with components: Trading Bot, API Server, Frontend Dashboard
2025-03-27 21:49:04,793 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:49:04,793 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:49:04,816 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:49:04,816 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:49:04,816 - root - INFO - Frontend: Building React app...
2025-03-27 21:49:04,881 - root - INFO - Frontend: 
2025-03-27 21:49:04,882 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:49:04,882 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:49:04,882 - root - INFO - Frontend: 
2025-03-27 21:49:05,528 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:49:31,804 - root - INFO - Frontend: Compiled with warnings.
2025-03-27 21:49:31,805 - root - INFO - Frontend: 
2025-03-27 21:49:31,805 - root - INFO - Frontend: TS7006: Parameter 'pair' implicitly has an 'any' type.
2025-03-27 21:49:31,805 - root - INFO - Frontend: 229 |               {active_pairs.length > 0 ? (
2025-03-27 21:49:31,805 - root - INFO - Frontend: 230 |                 <Stack direction="row" spacing={1} flexWrap="wrap">
2025-03-27 21:49:31,805 - root - INFO - Frontend: > 231 |                   {active_pairs.map((pair) => (
2025-03-27 21:49:31,805 - root - INFO - Frontend: |                                      ^^^^
2025-03-27 21:49:31,806 - root - INFO - Frontend: 232 |                     <Chip key={pair} label={pair} variant="outlined" size="small" sx={{ mb: 1 }} />
2025-03-27 21:49:31,806 - root - INFO - Frontend: 233 |                   ))}
2025-03-27 21:49:31,806 - root - INFO - Frontend: 234 |                 </Stack>
2025-03-27 21:49:31,806 - root - INFO - Frontend: 
2025-03-27 21:49:31,806 - root - INFO - Frontend: Search for the keywords to learn more about each warning.
2025-03-27 21:49:31,806 - root - INFO - Frontend: To ignore, add // eslint-disable-next-line to the line before.
2025-03-27 21:49:31,806 - root - INFO - Frontend: 
2025-03-27 21:49:31,806 - root - INFO - Frontend: File sizes after gzip:
2025-03-27 21:49:31,806 - root - INFO - Frontend: 
2025-03-27 21:49:31,907 - root - INFO - Frontend: 1.44 MB  build/static/js/main.2abb7c74.js
2025-03-27 21:49:31,907 - root - INFO - Frontend: 
2025-03-27 21:49:31,907 - root - INFO - Frontend: The bundle size is significantly larger than recommended.
2025-03-27 21:49:31,907 - root - INFO - Frontend: Consider reducing it with code splitting: https://goo.gl/9VhYWB
2025-03-27 21:49:31,907 - root - INFO - Frontend: You can also analyze the project dependencies: https://goo.gl/LeUzfb
2025-03-27 21:49:31,907 - root - INFO - Frontend: 
2025-03-27 21:49:31,907 - root - INFO - Frontend: The project was built assuming it is hosted at /.
2025-03-27 21:49:31,907 - root - INFO - Frontend: You can control this with the homepage field in your package.json.
2025-03-27 21:49:31,907 - root - INFO - Frontend: 
2025-03-27 21:49:31,907 - root - INFO - Frontend: The build folder is ready to be deployed.
2025-03-27 21:49:31,907 - root - INFO - Frontend: You may serve it with a static server:
2025-03-27 21:49:31,907 - root - INFO - Frontend: 
2025-03-27 21:49:31,908 - root - INFO - Frontend: npm install -g serve
2025-03-27 21:49:31,908 - root - INFO - Frontend: serve -s build
2025-03-27 21:49:31,908 - root - INFO - Frontend: 
2025-03-27 21:49:31,908 - root - INFO - Frontend: Find out more about deployment here:
2025-03-27 21:49:31,908 - root - INFO - Frontend: 
2025-03-27 21:49:31,908 - root - INFO - Frontend: https://cra.link/deployment
2025-03-27 21:49:31,908 - root - INFO - Frontend: 
2025-03-27 21:49:31,985 - root - INFO - Frontend: React app built successfully
2025-03-27 21:49:31,985 - root - INFO - Frontend: Starting frontend server...
2025-03-27 21:49:32,056 - root - INFO - Frontend: 2025-03-27 21:49:32,056 - __main__ - INFO - Current file: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/server.py
2025-03-27 21:49:32,057 - root - INFO - Frontend: 2025-03-27 21:49:32,056 - __main__ - INFO - Current directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:49:32,057 - root - INFO - Frontend: 2025-03-27 21:49:32,056 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML to sys.path
2025-03-27 21:49:32,057 - root - INFO - Frontend: 2025-03-27 21:49:32,056 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app to sys.path
2025-03-27 21:49:32,057 - root - INFO - Frontend: 2025-03-27 21:49:32,056 - __main__ - INFO - Added /Users/carloslarramba/Documents to sys.path
2025-03-27 21:49:32,057 - root - INFO - Frontend: 2025-03-27 21:49:32,056 - __main__ - INFO - Attempting to import using absolute imports...
2025-03-27 21:49:36,651 - root - INFO - Frontend: 2025-03-27 21:49:36,651 - __main__ - INFO - Successfully imported using absolute imports
2025-03-27 21:49:36,765 - root - INFO - Frontend: 2025-03-27 21:49:36,765 - __main__ - INFO - Mounted static files directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/react-app/build/static
2025-03-27 21:49:36,766 - root - INFO - Frontend: 2025-03-27 21:49:36,766 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:49:36,766 - root - INFO - Frontend: 2025-03-27 21:49:36,766 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:49:36,766 - root - INFO - Frontend: 2025-03-27 21:49:36,766 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:49:36,767 - root - INFO - Frontend: 2025-03-27 21:49:36,766 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:49:36,767 - root - INFO - Frontend: 2025-03-27 21:49:36,766 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:49:36,767 - root - INFO - Frontend: 2025-03-27 21:49:36,767 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:49:36,876 - root - INFO - Frontend: INFO:     Started server process [81009]
2025-03-27 21:49:36,877 - root - INFO - Frontend: INFO:     Waiting for application startup.
2025-03-27 21:49:36,877 - root - INFO - Frontend: 2025-03-27 21:49:36,877 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:49:36,877 - root - INFO - Frontend: 2025-03-27 21:49:36,877 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:49:36,877 - root - INFO - Frontend: 2025-03-27 21:49:36,877 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:49:36,877 - root - INFO - Frontend: 2025-03-27 21:49:36,877 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:49:36,877 - root - INFO - Frontend: 2025-03-27 21:49:36,877 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:49:36,877 - root - INFO - Frontend: 2025-03-27 21:49:36,877 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:49:36,878 - root - INFO - Frontend: 2025-03-27 21:49:36,877 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:49:36,878 - root - INFO - Frontend: 2025-03-27 21:49:36,878 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:49:36,878 - root - INFO - Frontend: 2025-03-27 21:49:36,878 - __main__ - INFO - Bot initialized
2025-03-27 21:49:36,878 - root - INFO - Frontend: 2025-03-27 21:49:36,878 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:49:36,878 - root - INFO - Frontend: 2025-03-27 21:49:36,878 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:49:36,878 - root - INFO - Frontend: 2025-03-27 21:49:36,878 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:49:36,878 - root - INFO - Frontend: 2025-03-27 21:49:36,878 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 21:49:36,882 - root - INFO - Frontend: 2025-03-27 21:49:36,882 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:49:36,883 - root - INFO - Frontend: 2025-03-27 21:49:36,882 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:49:36,883 - root - INFO - Frontend: 2025-03-27 21:49:36,882 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 21:49:36,883 - root - INFO - Frontend: 2025-03-27 21:49:36,883 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 21:49:36,883 - root - INFO - Frontend: 2025-03-27 21:49:36,883 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 21:49:36,883 - root - INFO - Frontend: 2025-03-27 21:49:36,883 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:49:36,883 - root - INFO - Frontend: 2025-03-27 21:49:36,883 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:49:36,883 - root - INFO - Frontend: 2025-03-27 21:49:36,883 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:49:36,895 - root - INFO - Frontend: 2025-03-27 21:49:36,895 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:49:36,922 - root - INFO - Frontend: 2025-03-27 21:49:36,922 - app.database.manager - INFO - Database connection successful
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:49:36,923 - root - INFO - Frontend: 2025-03-27 21:49:36,923 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:49:36,924 - root - INFO - Frontend: 2025-03-27 21:49:36,924 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:49:36,924 - root - INFO - Frontend: 2025-03-27 21:49:36,924 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:49:36,924 - root - INFO - Frontend: 2025-03-27 21:49:36,924 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:49:36,925 - root - INFO - Frontend: 2025-03-27 21:49:36,924 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:49:36,926 - root - INFO - Frontend: 2025-03-27 21:49:36,926 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:49:36,926 - root - INFO - Frontend: 2025-03-27 21:49:36,926 - app.database.manager - INFO - Database connection established
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - app.core.orchestrator - ERROR - Scheduler not running, cannot schedule jobs
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - app.core.orchestrator - INFO - Jobs scheduled
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:49:36,927 - root - INFO - Frontend: 2025-03-27 21:49:36,927 - __main__ - INFO - Bot started in simulation mode
2025-03-27 21:49:36,927 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 21:49:36,927 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 21:50:41,951 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 21:50:42,051 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 21:50:42,052 - root - INFO - Frontend: 2025-03-27 21:50:42,051 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 21:50:42,052 - root - INFO - Frontend: 2025-03-27 21:50:42,052 - app.core.orchestrator - INFO - Trading bot stopped successfully
2025-03-27 21:50:42,052 - root - INFO - Frontend: 2025-03-27 21:50:42,052 - app.utils.notification_system - INFO - [NOTICE] SYSTEM - Trading Bot Stopped: Trading bot has been stopped after running for 0.0 hours
2025-03-27 21:50:42,052 - root - INFO - Frontend: 2025-03-27 21:50:42,052 - app.utils.notification_system - INFO - Additional data: {
2025-03-27 21:50:42,052 - root - INFO - Frontend: "run_duration_hours": "0.0",
2025-03-27 21:50:42,052 - root - INFO - Frontend: "trades_executed": 0,
2025-03-27 21:50:42,052 - root - INFO - Frontend: "profit_loss": "$0.00"
2025-03-27 21:50:42,052 - root - INFO - Frontend: }
2025-03-27 21:50:42,052 - root - INFO - Frontend: INFO:     Application shutdown complete.
2025-03-27 21:50:42,052 - root - INFO - Frontend: INFO:     Finished server process [81009]
2025-03-27 21:50:42,054 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 21:50:42,106 - root - INFO - Frontend: Exception ignored in: <module 'threading' from '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py'>
2025-03-27 21:50:42,107 - root - INFO - Frontend: Traceback (most recent call last):
2025-03-27 21:50:42,107 - root - INFO - Frontend: File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py", line 1448, in _shutdown
2025-03-27 21:50:42,107 - root - INFO - Frontend: lock.acquire()
2025-03-27 21:50:42,107 - root - INFO - Frontend: KeyboardInterrupt:
2025-03-27 21:50:42,271 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 21:50:42,272 - root - INFO - Attempting to restart frontend...
2025-03-27 21:50:42,272 - root - INFO - Starting frontend server...
2025-03-27 21:50:42,281 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:50:42,284 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:50:42,367 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:50:42,367 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:50:42,367 - root - INFO - Frontend: Building React app...
2025-03-27 21:50:42,429 - root - INFO - Frontend: 
2025-03-27 21:50:42,429 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:50:42,429 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:50:42,429 - root - INFO - Frontend: 
2025-03-27 21:50:43,170 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:50:43,634 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 21:50:43,634 - root - INFO - Attempting to restart frontend...
2025-03-27 21:50:43,634 - root - INFO - Starting frontend server...
2025-03-27 21:50:58,753 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:50:58,754 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:50:58,754 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:50:58,754 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:50:58,754 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:50:58,754 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:50:58,754 - root - INFO - Starting trading bot in simulation mode with components: ['bot', 'api', 'frontend']
2025-03-27 21:50:58,754 - root - INFO - Local IP: 192.168.1.134
2025-03-27 21:50:58,754 - root - INFO - API will be available at: http://192.168.1.134:8080
2025-03-27 21:50:58,754 - root - INFO - Dashboard will be available at: http://192.168.1.134:3001
2025-03-27 21:50:58,754 - root - INFO - Starting trading bot with components: ['bot', 'api', 'frontend'] in mode: simulation
2025-03-27 21:50:58,754 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:50:58,754 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: simulation)
2025-03-27 21:50:58,759 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:50:58,759 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:50:58,759 - root - INFO - Exchange manager initialized in simulation mode
2025-03-27 21:50:58,759 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:50:58,759 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:50:58,759 - root - INFO - Created shared orchestrator instance
2025-03-27 21:50:58,759 - root - INFO - Starting trading bot in simulation mode
2025-03-27 21:50:58,759 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:50:58,759 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:50:58,759 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:50:58,774 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:50:58,809 - app.database.manager - INFO - Database connection successful
2025-03-27 21:50:58,810 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:50:58,810 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:50:58,810 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:50:58,810 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:50:58,810 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:50:58,810 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:50:58,810 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:50:58,810 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:50:58,810 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:50:58,810 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:50:58,810 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:50:58,810 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:50:58,810 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:50:58,811 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:50:58,811 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:50:58,811 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:50:58,811 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:50:58,812 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:50:58,812 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:50:58,812 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:50:58,812 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:50:58,816 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:50:58,816 - app.database.manager - INFO - Database connection established
2025-03-27 21:50:58,817 - app.core.orchestrator - INFO - Loaded 46 balance history records
2025-03-27 21:50:58,817 - app.core.orchestrator - INFO - Loaded 30 PnL history records
2025-03-27 21:50:58,817 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:50:58,817 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:50:58,817 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:50:58,817 - app.core.orchestrator - ERROR - Scheduler did not start successfully, skipping job scheduling.
2025-03-27 21:50:58,817 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:50:58,817 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:50:58,817 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:50:58,817 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:50:58,817 - root - INFO - Bot initialized and started via orchestrator
2025-03-27 21:50:58,817 - root - INFO - Starting API server
2025-03-27 21:50:58,820 - app.api.server - INFO - API server initialized
2025-03-27 21:50:58,821 - app.api.server - INFO - Starting API server on http://192.168.1.134:8080 ...
2025-03-27 21:50:58,822 - app.api.server - INFO - API server available at: http://192.168.1.134:8080
2025-03-27 21:50:58,822 - app.api.server - INFO - API can be accessed from any device on the network using the above URL
2025-03-27 21:50:58,822 - root - INFO - Starting frontend server
2025-03-27 21:50:58,822 - root - INFO - Starting frontend server...
2025-03-27 21:50:58,874 - root - INFO - Database connection: Success
2025-03-27 21:50:58,874 - root - INFO - Redis connection: Success
2025-03-27 21:50:58,874 - root - INFO - Logging is configured and working
2025-03-27 21:50:58,874 - root - INFO - Trading bot is running with components: Trading Bot, API Server, Frontend Dashboard
2025-03-27 21:50:58,896 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:50:58,896 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:50:58,930 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:50:58,930 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:50:58,930 - root - INFO - Frontend: Building React app...
2025-03-27 21:50:58,994 - root - INFO - Frontend: 
2025-03-27 21:50:58,994 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:50:58,994 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:50:58,994 - root - INFO - Frontend: 
2025-03-27 21:50:59,682 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:51:27,846 - root - INFO - Frontend: Compiled with warnings.
2025-03-27 21:51:27,847 - root - INFO - Frontend: 
2025-03-27 21:51:27,847 - root - INFO - Frontend: TS7006: Parameter 'pair' implicitly has an 'any' type.
2025-03-27 21:51:27,848 - root - INFO - Frontend: 229 |               {active_pairs.length > 0 ? (
2025-03-27 21:51:27,848 - root - INFO - Frontend: 230 |                 <Stack direction="row" spacing={1} flexWrap="wrap">
2025-03-27 21:51:27,848 - root - INFO - Frontend: > 231 |                   {active_pairs.map((pair) => (
2025-03-27 21:51:27,848 - root - INFO - Frontend: |                                      ^^^^
2025-03-27 21:51:27,848 - root - INFO - Frontend: 232 |                     <Chip key={pair} label={pair} variant="outlined" size="small" sx={{ mb: 1 }} />
2025-03-27 21:51:27,848 - root - INFO - Frontend: 233 |                   ))}
2025-03-27 21:51:27,848 - root - INFO - Frontend: 234 |                 </Stack>
2025-03-27 21:51:27,848 - root - INFO - Frontend: 
2025-03-27 21:51:27,848 - root - INFO - Frontend: Search for the keywords to learn more about each warning.
2025-03-27 21:51:27,848 - root - INFO - Frontend: To ignore, add // eslint-disable-next-line to the line before.
2025-03-27 21:51:27,848 - root - INFO - Frontend: 
2025-03-27 21:51:27,849 - root - INFO - Frontend: File sizes after gzip:
2025-03-27 21:51:27,849 - root - INFO - Frontend: 
2025-03-27 21:51:27,961 - root - INFO - Frontend: 1.44 MB  build/static/js/main.2abb7c74.js
2025-03-27 21:51:27,961 - root - INFO - Frontend: 
2025-03-27 21:51:27,961 - root - INFO - Frontend: The bundle size is significantly larger than recommended.
2025-03-27 21:51:27,961 - root - INFO - Frontend: Consider reducing it with code splitting: https://goo.gl/9VhYWB
2025-03-27 21:51:27,961 - root - INFO - Frontend: You can also analyze the project dependencies: https://goo.gl/LeUzfb
2025-03-27 21:51:27,962 - root - INFO - Frontend: 
2025-03-27 21:51:27,962 - root - INFO - Frontend: The project was built assuming it is hosted at /.
2025-03-27 21:51:27,962 - root - INFO - Frontend: You can control this with the homepage field in your package.json.
2025-03-27 21:51:27,962 - root - INFO - Frontend: 
2025-03-27 21:51:27,962 - root - INFO - Frontend: The build folder is ready to be deployed.
2025-03-27 21:51:27,962 - root - INFO - Frontend: You may serve it with a static server:
2025-03-27 21:51:27,962 - root - INFO - Frontend: 
2025-03-27 21:51:27,962 - root - INFO - Frontend: npm install -g serve
2025-03-27 21:51:27,962 - root - INFO - Frontend: serve -s build
2025-03-27 21:51:27,962 - root - INFO - Frontend: 
2025-03-27 21:51:27,962 - root - INFO - Frontend: Find out more about deployment here:
2025-03-27 21:51:27,962 - root - INFO - Frontend: 
2025-03-27 21:51:27,962 - root - INFO - Frontend: https://cra.link/deployment
2025-03-27 21:51:27,962 - root - INFO - Frontend: 
2025-03-27 21:51:28,088 - root - INFO - Frontend: React app built successfully
2025-03-27 21:51:28,088 - root - INFO - Frontend: Starting frontend server...
2025-03-27 21:51:28,152 - root - INFO - Frontend: 2025-03-27 21:51:28,151 - __main__ - INFO - Current file: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/server.py
2025-03-27 21:51:28,152 - root - INFO - Frontend: 2025-03-27 21:51:28,152 - __main__ - INFO - Current directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:51:28,152 - root - INFO - Frontend: 2025-03-27 21:51:28,152 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML to sys.path
2025-03-27 21:51:28,152 - root - INFO - Frontend: 2025-03-27 21:51:28,152 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app to sys.path
2025-03-27 21:51:28,152 - root - INFO - Frontend: 2025-03-27 21:51:28,152 - __main__ - INFO - Added /Users/carloslarramba/Documents to sys.path
2025-03-27 21:51:28,152 - root - INFO - Frontend: 2025-03-27 21:51:28,152 - __main__ - INFO - Attempting to import using absolute imports...
2025-03-27 21:51:32,608 - root - INFO - Frontend: 2025-03-27 21:51:32,608 - __main__ - INFO - Successfully imported using absolute imports
2025-03-27 21:51:32,722 - root - INFO - Frontend: 2025-03-27 21:51:32,721 - __main__ - INFO - Mounted static files directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/react-app/build/static
2025-03-27 21:51:32,723 - root - INFO - Frontend: 2025-03-27 21:51:32,723 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:51:32,723 - root - INFO - Frontend: 2025-03-27 21:51:32,723 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:51:32,723 - root - INFO - Frontend: 2025-03-27 21:51:32,723 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:51:32,723 - root - INFO - Frontend: 2025-03-27 21:51:32,723 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:51:32,724 - root - INFO - Frontend: 2025-03-27 21:51:32,723 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:51:32,724 - root - INFO - Frontend: 2025-03-27 21:51:32,723 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:51:32,841 - root - INFO - Frontend: INFO:     Started server process [81273]
2025-03-27 21:51:32,841 - root - INFO - Frontend: INFO:     Waiting for application startup.
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - __main__ - INFO - Bot initialized
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:51:32,842 - root - INFO - Frontend: 2025-03-27 21:51:32,842 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 21:51:32,847 - root - INFO - Frontend: 2025-03-27 21:51:32,847 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:51:32,847 - root - INFO - Frontend: 2025-03-27 21:51:32,847 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:51:32,847 - root - INFO - Frontend: 2025-03-27 21:51:32,847 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 21:51:32,847 - root - INFO - Frontend: 2025-03-27 21:51:32,847 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 21:51:32,847 - root - INFO - Frontend: 2025-03-27 21:51:32,847 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 21:51:32,847 - root - INFO - Frontend: 2025-03-27 21:51:32,847 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:51:32,847 - root - INFO - Frontend: 2025-03-27 21:51:32,847 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:51:32,847 - root - INFO - Frontend: 2025-03-27 21:51:32,847 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:51:32,859 - root - INFO - Frontend: 2025-03-27 21:51:32,859 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:51:32,886 - root - INFO - Frontend: 2025-03-27 21:51:32,886 - app.database.manager - INFO - Database connection successful
2025-03-27 21:51:32,886 - root - INFO - Frontend: 2025-03-27 21:51:32,886 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:51:32,886 - root - INFO - Frontend: 2025-03-27 21:51:32,886 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:51:32,886 - root - INFO - Frontend: 2025-03-27 21:51:32,886 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:51:32,886 - root - INFO - Frontend: 2025-03-27 21:51:32,886 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:51:32,886 - root - INFO - Frontend: 2025-03-27 21:51:32,886 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:51:32,886 - root - INFO - Frontend: 2025-03-27 21:51:32,886 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:51:32,886 - root - INFO - Frontend: 2025-03-27 21:51:32,886 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:51:32,886 - root - INFO - Frontend: 2025-03-27 21:51:32,886 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:51:32,887 - root - INFO - Frontend: 2025-03-27 21:51:32,887 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:51:32,887 - root - INFO - Frontend: 2025-03-27 21:51:32,887 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:51:32,887 - root - INFO - Frontend: 2025-03-27 21:51:32,887 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:51:32,887 - root - INFO - Frontend: 2025-03-27 21:51:32,887 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:51:32,887 - root - INFO - Frontend: 2025-03-27 21:51:32,887 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:51:32,887 - root - INFO - Frontend: 2025-03-27 21:51:32,887 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:51:32,887 - root - INFO - Frontend: 2025-03-27 21:51:32,887 - app.core.orchestrator - ERROR - Error initializing ML module: 'Settings' object has no attribute 'MODEL_DIR'
2025-03-27 21:51:32,887 - root - INFO - Frontend: 2025-03-27 21:51:32,887 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:51:32,887 - root - INFO - Frontend: 2025-03-27 21:51:32,887 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:51:32,888 - root - INFO - Frontend: 2025-03-27 21:51:32,888 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:51:32,888 - root - INFO - Frontend: 2025-03-27 21:51:32,888 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:51:32,888 - root - INFO - Frontend: 2025-03-27 21:51:32,888 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:51:32,888 - root - INFO - Frontend: 2025-03-27 21:51:32,888 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.database.manager - INFO - Database connection established
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.core.orchestrator - ERROR - Scheduler did not start successfully, skipping job scheduling.
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:51:32,890 - root - INFO - Frontend: 2025-03-27 21:51:32,890 - __main__ - INFO - Bot started in simulation mode
2025-03-27 21:51:32,891 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 21:51:32,891 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 21:55:22,018 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 21:55:22,119 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 21:55:22,120 - root - INFO - Frontend: 2025-03-27 21:55:22,119 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 21:55:22,120 - root - INFO - Frontend: 2025-03-27 21:55:22,120 - app.core.orchestrator - INFO - Trading bot stopped successfully
2025-03-27 21:55:22,120 - root - INFO - Frontend: 2025-03-27 21:55:22,120 - app.utils.notification_system - INFO - [NOTICE] SYSTEM - Trading Bot Stopped: Trading bot has been stopped after running for 0.1 hours
2025-03-27 21:55:22,120 - root - INFO - Frontend: 2025-03-27 21:55:22,120 - app.utils.notification_system - INFO - Additional data: {
2025-03-27 21:55:22,120 - root - INFO - Frontend: "run_duration_hours": "0.1",
2025-03-27 21:55:22,120 - root - INFO - Frontend: "trades_executed": 0,
2025-03-27 21:55:22,120 - root - INFO - Frontend: "profit_loss": "$0.00"
2025-03-27 21:55:22,121 - root - INFO - Frontend: }
2025-03-27 21:55:22,121 - root - INFO - Frontend: INFO:     Application shutdown complete.
2025-03-27 21:55:22,121 - root - INFO - Frontend: INFO:     Finished server process [81273]
2025-03-27 21:55:22,123 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 21:55:22,339 - root - INFO - Frontend: Exception ignored in: <module 'threading' from '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py'>
2025-03-27 21:55:22,340 - root - INFO - Frontend: Traceback (most recent call last):
2025-03-27 21:55:22,340 - root - INFO - Frontend: File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py", line 1448, in _shutdown
2025-03-27 21:55:22,340 - root - INFO - Frontend: lock.acquire()
2025-03-27 21:55:22,341 - root - INFO - Frontend: KeyboardInterrupt:
2025-03-27 21:55:22,648 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 21:55:22,648 - root - INFO - Attempting to restart frontend...
2025-03-27 21:55:22,648 - root - INFO - Starting frontend server...
2025-03-27 21:55:22,660 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:55:22,663 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:55:22,755 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:55:22,755 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:55:22,755 - root - INFO - Frontend: Building React app...
2025-03-27 21:55:22,819 - root - INFO - Frontend: 
2025-03-27 21:55:22,819 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:55:22,819 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:55:22,819 - root - INFO - Frontend: 
2025-03-27 21:55:23,491 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-3' coro=<Server.serve() done, defined at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py:68> exception=KeyboardInterrupt()>
Traceback (most recent call last):
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/run.py", line 411, in <module>
    asyncio.run(main())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 629, in run_until_complete
    self.run_forever()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 596, in run_forever
    self._run_once()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 1890, in _run_once
    handle._run()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 70, in serve
    await self._serve(sockets)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/contextlib.py", line 124, in __exit__
    next(self.gen)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 330, in capture_signals
    signal.raise_signal(captured_signal)
KeyboardInterrupt
2025-03-27 21:55:32,955 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:55:32,956 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:55:32,956 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:55:32,956 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:55:32,956 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:55:32,956 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:55:32,956 - root - INFO - Starting trading bot in simulation mode with components: ['bot', 'api', 'frontend']
2025-03-27 21:55:32,956 - root - INFO - Local IP: 192.168.1.134
2025-03-27 21:55:32,956 - root - INFO - API will be available at: http://192.168.1.134:8080
2025-03-27 21:55:32,956 - root - INFO - Dashboard will be available at: http://192.168.1.134:3001
2025-03-27 21:55:32,956 - root - INFO - Starting trading bot with components: ['bot', 'api', 'frontend'] in mode: simulation
2025-03-27 21:55:32,956 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:55:32,956 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: simulation)
2025-03-27 21:55:32,961 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:55:32,961 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:55:32,961 - root - INFO - Exchange manager initialized in simulation mode
2025-03-27 21:55:32,961 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:55:32,961 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:55:32,961 - root - INFO - Created shared orchestrator instance
2025-03-27 21:55:32,961 - root - INFO - Starting trading bot in simulation mode
2025-03-27 21:55:32,961 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:55:32,961 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:55:32,961 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:55:32,974 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:55:33,002 - app.database.manager - INFO - Database connection successful
2025-03-27 21:55:33,003 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:55:33,003 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:55:33,003 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:55:33,003 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:55:33,003 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:55:33,003 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:55:33,003 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:55:33,003 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:55:33,003 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:55:33,003 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:55:33,003 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:55:33,003 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:55:33,003 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:55:33,003 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:55:33,003 - app.core.orchestrator - INFO - ML module initialized
2025-03-27 21:55:33,003 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:55:33,003 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:55:33,006 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:55:33,006 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:55:33,006 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:55:33,006 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:55:33,008 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:55:33,008 - app.database.manager - INFO - Database connection established
2025-03-27 21:55:33,008 - app.core.orchestrator - INFO - Loaded 46 balance history records
2025-03-27 21:55:33,008 - app.core.orchestrator - INFO - Loaded 30 PnL history records
2025-03-27 21:55:33,008 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:55:33,008 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:55:33,008 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:55:33,008 - app.core.orchestrator - ERROR - Scheduler did not start successfully, skipping job scheduling.
2025-03-27 21:55:33,008 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:55:33,008 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:55:33,008 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:55:33,008 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:55:33,008 - root - INFO - Bot initialized and started via orchestrator
2025-03-27 21:55:33,009 - root - INFO - Starting API server
2025-03-27 21:55:33,010 - app.api.server - INFO - API server initialized
2025-03-27 21:55:33,012 - app.api.server - INFO - Starting API server on http://192.168.1.134:8080 ...
2025-03-27 21:55:33,012 - app.api.server - INFO - API server available at: http://192.168.1.134:8080
2025-03-27 21:55:33,012 - app.api.server - INFO - API can be accessed from any device on the network using the above URL
2025-03-27 21:55:33,013 - root - INFO - Starting frontend server
2025-03-27 21:55:33,013 - root - INFO - Starting frontend server...
2025-03-27 21:55:33,059 - root - INFO - Database connection: Success
2025-03-27 21:55:33,059 - root - INFO - Redis connection: Success
2025-03-27 21:55:33,059 - root - INFO - Logging is configured and working
2025-03-27 21:55:33,059 - root - INFO - Trading bot is running with components: Trading Bot, API Server, Frontend Dashboard
2025-03-27 21:55:33,080 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:55:33,080 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:55:33,113 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:55:33,113 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:55:33,113 - root - INFO - Frontend: Building React app...
2025-03-27 21:55:33,178 - root - INFO - Frontend: 
2025-03-27 21:55:33,178 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:55:33,178 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:55:33,178 - root - INFO - Frontend: 
2025-03-27 21:55:34,128 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:56:01,486 - root - INFO - Frontend: Compiled with warnings.
2025-03-27 21:56:01,489 - root - INFO - Frontend: 
2025-03-27 21:56:01,489 - root - INFO - Frontend: TS7006: Parameter 'pair' implicitly has an 'any' type.
2025-03-27 21:56:01,490 - root - INFO - Frontend: 229 |               {active_pairs.length > 0 ? (
2025-03-27 21:56:01,490 - root - INFO - Frontend: 230 |                 <Stack direction="row" spacing={1} flexWrap="wrap">
2025-03-27 21:56:01,490 - root - INFO - Frontend: > 231 |                   {active_pairs.map((pair) => (
2025-03-27 21:56:01,490 - root - INFO - Frontend: |                                      ^^^^
2025-03-27 21:56:01,490 - root - INFO - Frontend: 232 |                     <Chip key={pair} label={pair} variant="outlined" size="small" sx={{ mb: 1 }} />
2025-03-27 21:56:01,490 - root - INFO - Frontend: 233 |                   ))}
2025-03-27 21:56:01,490 - root - INFO - Frontend: 234 |                 </Stack>
2025-03-27 21:56:01,490 - root - INFO - Frontend: 
2025-03-27 21:56:01,490 - root - INFO - Frontend: Search for the keywords to learn more about each warning.
2025-03-27 21:56:01,490 - root - INFO - Frontend: To ignore, add // eslint-disable-next-line to the line before.
2025-03-27 21:56:01,490 - root - INFO - Frontend: 
2025-03-27 21:56:01,490 - root - INFO - Frontend: File sizes after gzip:
2025-03-27 21:56:01,490 - root - INFO - Frontend: 
2025-03-27 21:56:01,593 - root - INFO - Frontend: 1.44 MB  build/static/js/main.2abb7c74.js
2025-03-27 21:56:01,593 - root - INFO - Frontend: 
2025-03-27 21:56:01,593 - root - INFO - Frontend: The bundle size is significantly larger than recommended.
2025-03-27 21:56:01,593 - root - INFO - Frontend: Consider reducing it with code splitting: https://goo.gl/9VhYWB
2025-03-27 21:56:01,593 - root - INFO - Frontend: You can also analyze the project dependencies: https://goo.gl/LeUzfb
2025-03-27 21:56:01,593 - root - INFO - Frontend: 
2025-03-27 21:56:01,594 - root - INFO - Frontend: The project was built assuming it is hosted at /.
2025-03-27 21:56:01,594 - root - INFO - Frontend: You can control this with the homepage field in your package.json.
2025-03-27 21:56:01,594 - root - INFO - Frontend: 
2025-03-27 21:56:01,594 - root - INFO - Frontend: The build folder is ready to be deployed.
2025-03-27 21:56:01,594 - root - INFO - Frontend: You may serve it with a static server:
2025-03-27 21:56:01,594 - root - INFO - Frontend: 
2025-03-27 21:56:01,595 - root - INFO - Frontend: npm install -g serve
2025-03-27 21:56:01,595 - root - INFO - Frontend: serve -s build
2025-03-27 21:56:01,595 - root - INFO - Frontend: 
2025-03-27 21:56:01,595 - root - INFO - Frontend: Find out more about deployment here:
2025-03-27 21:56:01,595 - root - INFO - Frontend: 
2025-03-27 21:56:01,595 - root - INFO - Frontend: https://cra.link/deployment
2025-03-27 21:56:01,595 - root - INFO - Frontend: 
2025-03-27 21:56:01,682 - root - INFO - Frontend: React app built successfully
2025-03-27 21:56:01,683 - root - INFO - Frontend: Starting frontend server...
2025-03-27 21:56:01,779 - root - INFO - Frontend: 2025-03-27 21:56:01,779 - __main__ - INFO - Current file: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/server.py
2025-03-27 21:56:01,779 - root - INFO - Frontend: 2025-03-27 21:56:01,779 - __main__ - INFO - Current directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:56:01,779 - root - INFO - Frontend: 2025-03-27 21:56:01,779 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML to sys.path
2025-03-27 21:56:01,779 - root - INFO - Frontend: 2025-03-27 21:56:01,779 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app to sys.path
2025-03-27 21:56:01,779 - root - INFO - Frontend: 2025-03-27 21:56:01,779 - __main__ - INFO - Added /Users/carloslarramba/Documents to sys.path
2025-03-27 21:56:01,779 - root - INFO - Frontend: 2025-03-27 21:56:01,779 - __main__ - INFO - Attempting to import using absolute imports...
2025-03-27 21:56:06,694 - root - INFO - Frontend: 2025-03-27 21:56:06,694 - __main__ - INFO - Successfully imported using absolute imports
2025-03-27 21:56:06,811 - root - INFO - Frontend: 2025-03-27 21:56:06,811 - __main__ - INFO - Mounted static files directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/react-app/build/static
2025-03-27 21:56:06,813 - root - INFO - Frontend: 2025-03-27 21:56:06,813 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:56:06,813 - root - INFO - Frontend: 2025-03-27 21:56:06,813 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:56:06,813 - root - INFO - Frontend: 2025-03-27 21:56:06,813 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:56:06,813 - root - INFO - Frontend: 2025-03-27 21:56:06,813 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:56:06,813 - root - INFO - Frontend: 2025-03-27 21:56:06,813 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:56:06,813 - root - INFO - Frontend: 2025-03-27 21:56:06,813 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:56:06,931 - root - INFO - Frontend: INFO:     Started server process [81545]
2025-03-27 21:56:06,931 - root - INFO - Frontend: INFO:     Waiting for application startup.
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - __main__ - INFO - Bot initialized
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:56:06,932 - root - INFO - Frontend: 2025-03-27 21:56:06,932 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 21:56:06,937 - root - INFO - Frontend: 2025-03-27 21:56:06,937 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:56:06,937 - root - INFO - Frontend: 2025-03-27 21:56:06,937 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:56:06,937 - root - INFO - Frontend: 2025-03-27 21:56:06,937 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 21:56:06,937 - root - INFO - Frontend: 2025-03-27 21:56:06,937 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 21:56:06,937 - root - INFO - Frontend: 2025-03-27 21:56:06,937 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 21:56:06,937 - root - INFO - Frontend: 2025-03-27 21:56:06,937 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:56:06,937 - root - INFO - Frontend: 2025-03-27 21:56:06,937 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:56:06,937 - root - INFO - Frontend: 2025-03-27 21:56:06,937 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:56:06,949 - root - INFO - Frontend: 2025-03-27 21:56:06,949 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:56:06,974 - root - INFO - Frontend: 2025-03-27 21:56:06,974 - app.database.manager - INFO - Database connection successful
2025-03-27 21:56:06,974 - root - INFO - Frontend: 2025-03-27 21:56:06,974 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:56:06,974 - root - INFO - Frontend: 2025-03-27 21:56:06,974 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:56:06,974 - root - INFO - Frontend: 2025-03-27 21:56:06,974 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:56:06,974 - root - INFO - Frontend: 2025-03-27 21:56:06,974 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:56:06,974 - root - INFO - Frontend: 2025-03-27 21:56:06,974 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:56:06,974 - root - INFO - Frontend: 2025-03-27 21:56:06,974 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:56:06,974 - root - INFO - Frontend: 2025-03-27 21:56:06,974 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:56:06,974 - root - INFO - Frontend: 2025-03-27 21:56:06,974 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:56:06,975 - root - INFO - Frontend: 2025-03-27 21:56:06,975 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:56:06,975 - root - INFO - Frontend: 2025-03-27 21:56:06,975 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:56:06,975 - root - INFO - Frontend: 2025-03-27 21:56:06,975 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:56:06,975 - root - INFO - Frontend: 2025-03-27 21:56:06,975 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:56:06,975 - root - INFO - Frontend: 2025-03-27 21:56:06,975 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:56:06,975 - root - INFO - Frontend: 2025-03-27 21:56:06,975 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:56:06,975 - root - INFO - Frontend: 2025-03-27 21:56:06,975 - app.core.orchestrator - INFO - ML module initialized
2025-03-27 21:56:06,975 - root - INFO - Frontend: 2025-03-27 21:56:06,975 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:56:06,975 - root - INFO - Frontend: 2025-03-27 21:56:06,975 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:56:06,976 - root - INFO - Frontend: 2025-03-27 21:56:06,976 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:56:06,976 - root - INFO - Frontend: 2025-03-27 21:56:06,976 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:56:06,976 - root - INFO - Frontend: 2025-03-27 21:56:06,976 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:56:06,976 - root - INFO - Frontend: 2025-03-27 21:56:06,976 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:56:06,978 - root - INFO - Frontend: 2025-03-27 21:56:06,978 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:56:06,978 - root - INFO - Frontend: 2025-03-27 21:56:06,978 - app.database.manager - INFO - Database connection established
2025-03-27 21:56:06,978 - root - INFO - Frontend: 2025-03-27 21:56:06,978 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 21:56:06,979 - root - INFO - Frontend: 2025-03-27 21:56:06,979 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 21:56:06,979 - root - INFO - Frontend: 2025-03-27 21:56:06,979 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:56:06,979 - root - INFO - Frontend: 2025-03-27 21:56:06,979 - app.core.orchestrator - ERROR - Scheduler did not start successfully, skipping job scheduling.
2025-03-27 21:56:06,979 - root - INFO - Frontend: 2025-03-27 21:56:06,979 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:56:06,979 - root - INFO - Frontend: 2025-03-27 21:56:06,979 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:56:06,979 - root - INFO - Frontend: 2025-03-27 21:56:06,979 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:56:06,979 - root - INFO - Frontend: 2025-03-27 21:56:06,979 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:56:06,979 - root - INFO - Frontend: 2025-03-27 21:56:06,979 - __main__ - INFO - Bot started in simulation mode
2025-03-27 21:56:06,979 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 21:56:06,979 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 21:56:21,640 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 21:56:21,742 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 21:56:21,742 - root - INFO - Frontend: 2025-03-27 21:56:21,742 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 21:56:21,742 - root - INFO - Frontend: 2025-03-27 21:56:21,742 - app.core.orchestrator - INFO - Trading bot stopped successfully
2025-03-27 21:56:21,742 - root - INFO - Frontend: 2025-03-27 21:56:21,742 - app.utils.notification_system - INFO - [NOTICE] SYSTEM - Trading Bot Stopped: Trading bot has been stopped after running for 0.0 hours
2025-03-27 21:56:21,742 - root - INFO - Frontend: 2025-03-27 21:56:21,742 - app.utils.notification_system - INFO - Additional data: {
2025-03-27 21:56:21,742 - root - INFO - Frontend: "run_duration_hours": "0.0",
2025-03-27 21:56:21,742 - root - INFO - Frontend: "trades_executed": 0,
2025-03-27 21:56:21,742 - root - INFO - Frontend: "profit_loss": "$0.00"
2025-03-27 21:56:21,742 - root - INFO - Frontend: }
2025-03-27 21:56:21,742 - root - INFO - Frontend: INFO:     Application shutdown complete.
2025-03-27 21:56:21,742 - root - INFO - Frontend: INFO:     Finished server process [81545]
2025-03-27 21:56:21,743 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 21:56:21,863 - root - INFO - Frontend: Exception ignored in: <module 'threading' from '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py'>
2025-03-27 21:56:21,863 - root - INFO - Frontend: Traceback (most recent call last):
2025-03-27 21:56:21,863 - root - INFO - Frontend: File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py", line 1448, in _shutdown
2025-03-27 21:56:21,864 - root - INFO - Frontend: lock.acquire()
2025-03-27 21:56:21,864 - root - INFO - Frontend: KeyboardInterrupt:
2025-03-27 21:56:22,199 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 21:56:22,200 - root - INFO - Attempting to restart frontend...
2025-03-27 21:56:22,200 - root - INFO - Starting frontend server...
2025-03-27 21:56:22,208 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:56:22,211 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:56:22,303 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:56:22,303 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:56:22,303 - root - INFO - Frontend: Building React app...
2025-03-27 21:56:22,369 - root - INFO - Frontend: 
2025-03-27 21:56:22,369 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:56:22,369 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:56:22,369 - root - INFO - Frontend: 
2025-03-27 21:56:50,949 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:56:50,949 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:56:50,949 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:56:50,949 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:56:50,949 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:56:50,950 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:56:50,950 - root - INFO - Starting trading bot in simulation mode with components: ['bot', 'api', 'frontend']
2025-03-27 21:56:50,950 - root - INFO - Local IP: 192.168.1.134
2025-03-27 21:56:50,950 - root - INFO - API will be available at: http://192.168.1.134:8080
2025-03-27 21:56:50,950 - root - INFO - Dashboard will be available at: http://192.168.1.134:3001
2025-03-27 21:56:50,950 - root - INFO - Starting trading bot with components: ['bot', 'api', 'frontend'] in mode: simulation
2025-03-27 21:56:50,950 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:56:50,950 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: simulation)
2025-03-27 21:56:50,955 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:56:50,955 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:56:50,955 - root - INFO - Exchange manager initialized in simulation mode
2025-03-27 21:56:50,955 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:56:50,955 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:56:50,955 - root - INFO - Created shared orchestrator instance
2025-03-27 21:56:50,955 - root - INFO - Starting trading bot in simulation mode
2025-03-27 21:56:50,955 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:56:50,955 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:56:50,955 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:56:50,972 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:56:50,998 - app.database.manager - INFO - Database connection successful
2025-03-27 21:56:50,998 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:56:50,998 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:56:50,998 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:56:50,998 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:56:50,998 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:56:50,998 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:56:50,998 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:56:50,998 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:56:50,999 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:56:50,999 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:56:50,999 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:56:50,999 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:56:50,999 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:56:50,999 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:56:50,999 - app.core.orchestrator - INFO - ML module initialized
2025-03-27 21:56:50,999 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:56:50,999 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:56:51,001 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:56:51,001 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:56:51,002 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:56:51,002 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:56:51,005 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:56:51,006 - app.database.manager - INFO - Database connection established
2025-03-27 21:56:51,006 - app.core.orchestrator - INFO - Loaded 46 balance history records
2025-03-27 21:56:51,006 - app.core.orchestrator - INFO - Loaded 30 PnL history records
2025-03-27 21:56:51,006 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:56:51,006 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:56:51,006 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:56:51,006 - app.core.orchestrator - ERROR - Scheduler not running, cannot schedule jobs
2025-03-27 21:56:51,006 - app.core.orchestrator - INFO - Jobs added to scheduler configuration.
2025-03-27 21:56:51,007 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 21:56:51,007 - app.core.orchestrator - INFO - AsyncIOScheduler started.
2025-03-27 21:56:51,058 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:56:51,058 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:56:51,058 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:56:51,058 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:56:51,058 - root - INFO - Bot initialized and started via orchestrator
2025-03-27 21:56:51,058 - root - INFO - Starting API server
2025-03-27 21:56:51,060 - app.api.server - INFO - API server initialized
2025-03-27 21:56:51,061 - app.api.server - INFO - Starting API server on http://192.168.1.134:8080 ...
2025-03-27 21:56:51,062 - app.api.server - INFO - API server available at: http://192.168.1.134:8080
2025-03-27 21:56:51,062 - app.api.server - INFO - API can be accessed from any device on the network using the above URL
2025-03-27 21:56:51,062 - root - INFO - Starting frontend server
2025-03-27 21:56:51,062 - root - INFO - Starting frontend server...
2025-03-27 21:56:51,112 - root - INFO - Database connection: Success
2025-03-27 21:56:51,112 - root - INFO - Redis connection: Success
2025-03-27 21:56:51,112 - root - INFO - Logging is configured and working
2025-03-27 21:56:51,112 - root - INFO - Trading bot is running with components: Trading Bot, API Server, Frontend Dashboard
2025-03-27 21:56:51,135 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:56:51,135 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:56:51,171 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:56:51,171 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:56:51,171 - root - INFO - Frontend: Building React app...
2025-03-27 21:56:51,234 - root - INFO - Frontend: 
2025-03-27 21:56:51,234 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:56:51,234 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:56:51,234 - root - INFO - Frontend: 
2025-03-27 21:56:52,102 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:57:20,507 - root - INFO - Frontend: Compiled with warnings.
2025-03-27 21:57:20,507 - root - INFO - Frontend: 
2025-03-27 21:57:20,507 - root - INFO - Frontend: TS7006: Parameter 'pair' implicitly has an 'any' type.
2025-03-27 21:57:20,507 - root - INFO - Frontend: 229 |               {active_pairs.length > 0 ? (
2025-03-27 21:57:20,507 - root - INFO - Frontend: 230 |                 <Stack direction="row" spacing={1} flexWrap="wrap">
2025-03-27 21:57:20,508 - root - INFO - Frontend: > 231 |                   {active_pairs.map((pair) => (
2025-03-27 21:57:20,508 - root - INFO - Frontend: |                                      ^^^^
2025-03-27 21:57:20,508 - root - INFO - Frontend: 232 |                     <Chip key={pair} label={pair} variant="outlined" size="small" sx={{ mb: 1 }} />
2025-03-27 21:57:20,508 - root - INFO - Frontend: 233 |                   ))}
2025-03-27 21:57:20,508 - root - INFO - Frontend: 234 |                 </Stack>
2025-03-27 21:57:20,508 - root - INFO - Frontend: 
2025-03-27 21:57:20,508 - root - INFO - Frontend: Search for the keywords to learn more about each warning.
2025-03-27 21:57:20,508 - root - INFO - Frontend: To ignore, add // eslint-disable-next-line to the line before.
2025-03-27 21:57:20,508 - root - INFO - Frontend: 
2025-03-27 21:57:20,508 - root - INFO - Frontend: File sizes after gzip:
2025-03-27 21:57:20,508 - root - INFO - Frontend: 
2025-03-27 21:57:20,608 - root - INFO - Frontend: 1.44 MB  build/static/js/main.2abb7c74.js
2025-03-27 21:57:20,609 - root - INFO - Frontend: 
2025-03-27 21:57:20,609 - root - INFO - Frontend: The bundle size is significantly larger than recommended.
2025-03-27 21:57:20,609 - root - INFO - Frontend: Consider reducing it with code splitting: https://goo.gl/9VhYWB
2025-03-27 21:57:20,609 - root - INFO - Frontend: You can also analyze the project dependencies: https://goo.gl/LeUzfb
2025-03-27 21:57:20,609 - root - INFO - Frontend: 
2025-03-27 21:57:20,610 - root - INFO - Frontend: The project was built assuming it is hosted at /.
2025-03-27 21:57:20,610 - root - INFO - Frontend: You can control this with the homepage field in your package.json.
2025-03-27 21:57:20,610 - root - INFO - Frontend: 
2025-03-27 21:57:20,610 - root - INFO - Frontend: The build folder is ready to be deployed.
2025-03-27 21:57:20,610 - root - INFO - Frontend: You may serve it with a static server:
2025-03-27 21:57:20,610 - root - INFO - Frontend: 
2025-03-27 21:57:20,610 - root - INFO - Frontend: npm install -g serve
2025-03-27 21:57:20,610 - root - INFO - Frontend: serve -s build
2025-03-27 21:57:20,610 - root - INFO - Frontend: 
2025-03-27 21:57:20,610 - root - INFO - Frontend: Find out more about deployment here:
2025-03-27 21:57:20,610 - root - INFO - Frontend: 
2025-03-27 21:57:20,610 - root - INFO - Frontend: https://cra.link/deployment
2025-03-27 21:57:20,610 - root - INFO - Frontend: 
2025-03-27 21:57:20,705 - root - INFO - Frontend: React app built successfully
2025-03-27 21:57:20,706 - root - INFO - Frontend: Starting frontend server...
2025-03-27 21:57:20,777 - root - INFO - Frontend: 2025-03-27 21:57:20,777 - __main__ - INFO - Current file: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/server.py
2025-03-27 21:57:20,777 - root - INFO - Frontend: 2025-03-27 21:57:20,777 - __main__ - INFO - Current directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:57:20,777 - root - INFO - Frontend: 2025-03-27 21:57:20,777 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML to sys.path
2025-03-27 21:57:20,777 - root - INFO - Frontend: 2025-03-27 21:57:20,777 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app to sys.path
2025-03-27 21:57:20,777 - root - INFO - Frontend: 2025-03-27 21:57:20,777 - __main__ - INFO - Added /Users/carloslarramba/Documents to sys.path
2025-03-27 21:57:20,777 - root - INFO - Frontend: 2025-03-27 21:57:20,777 - __main__ - INFO - Attempting to import using absolute imports...
2025-03-27 21:57:25,135 - root - INFO - Frontend: 2025-03-27 21:57:25,135 - __main__ - INFO - Successfully imported using absolute imports
2025-03-27 21:57:25,250 - root - INFO - Frontend: 2025-03-27 21:57:25,250 - __main__ - INFO - Mounted static files directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/react-app/build/static
2025-03-27 21:57:25,252 - root - INFO - Frontend: 2025-03-27 21:57:25,252 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:57:25,252 - root - INFO - Frontend: 2025-03-27 21:57:25,252 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:57:25,252 - root - INFO - Frontend: 2025-03-27 21:57:25,252 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:57:25,252 - root - INFO - Frontend: 2025-03-27 21:57:25,252 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:57:25,252 - root - INFO - Frontend: 2025-03-27 21:57:25,252 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:57:25,252 - root - INFO - Frontend: 2025-03-27 21:57:25,252 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:57:25,366 - root - INFO - Frontend: INFO:     Started server process [81725]
2025-03-27 21:57:25,366 - root - INFO - Frontend: INFO:     Waiting for application startup.
2025-03-27 21:57:25,367 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:57:25,367 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:57:25,367 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:57:25,367 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:57:25,367 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:57:25,367 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:57:25,367 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:57:25,367 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:57:25,367 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - __main__ - INFO - Bot initialized
2025-03-27 21:57:25,368 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:57:25,368 - root - INFO - Frontend: 2025-03-27 21:57:25,367 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:57:25,368 - root - INFO - Frontend: 2025-03-27 21:57:25,368 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:57:25,368 - root - INFO - Frontend: 2025-03-27 21:57:25,368 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 21:57:25,372 - root - INFO - Frontend: 2025-03-27 21:57:25,372 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:57:25,372 - root - INFO - Frontend: 2025-03-27 21:57:25,372 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:57:25,372 - root - INFO - Frontend: 2025-03-27 21:57:25,372 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 21:57:25,372 - root - INFO - Frontend: 2025-03-27 21:57:25,372 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 21:57:25,372 - root - INFO - Frontend: 2025-03-27 21:57:25,372 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 21:57:25,372 - root - INFO - Frontend: 2025-03-27 21:57:25,372 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:57:25,373 - root - INFO - Frontend: 2025-03-27 21:57:25,372 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:57:25,373 - root - INFO - Frontend: 2025-03-27 21:57:25,372 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:57:25,384 - root - INFO - Frontend: 2025-03-27 21:57:25,384 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:57:25,406 - root - INFO - Frontend: 2025-03-27 21:57:25,406 - app.database.manager - INFO - Database connection successful
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,406 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.core.orchestrator - INFO - ML module initialized
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:57:25,407 - root - INFO - Frontend: 2025-03-27 21:57:25,407 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:57:25,409 - root - INFO - Frontend: 2025-03-27 21:57:25,409 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:57:25,409 - root - INFO - Frontend: 2025-03-27 21:57:25,409 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:57:25,409 - root - INFO - Frontend: 2025-03-27 21:57:25,409 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:57:25,409 - root - INFO - Frontend: 2025-03-27 21:57:25,409 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:57:25,411 - root - INFO - Frontend: 2025-03-27 21:57:25,411 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:57:25,411 - root - INFO - Frontend: 2025-03-27 21:57:25,411 - app.database.manager - INFO - Database connection established
2025-03-27 21:57:25,411 - root - INFO - Frontend: 2025-03-27 21:57:25,411 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 21:57:25,411 - root - INFO - Frontend: 2025-03-27 21:57:25,411 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 21:57:25,411 - root - INFO - Frontend: 2025-03-27 21:57:25,411 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:57:25,411 - root - INFO - Frontend: 2025-03-27 21:57:25,411 - app.core.orchestrator - ERROR - Scheduler not running, cannot schedule jobs
2025-03-27 21:57:25,411 - root - INFO - Frontend: 2025-03-27 21:57:25,411 - app.core.orchestrator - INFO - Jobs added to scheduler configuration.
2025-03-27 21:57:25,412 - root - INFO - Frontend: 2025-03-27 21:57:25,412 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 21:57:25,412 - root - INFO - Frontend: 2025-03-27 21:57:25,412 - app.core.orchestrator - INFO - AsyncIOScheduler started.
2025-03-27 21:57:25,463 - root - INFO - Frontend: 2025-03-27 21:57:25,463 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:57:25,463 - root - INFO - Frontend: 2025-03-27 21:57:25,463 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:57:25,463 - root - INFO - Frontend: 2025-03-27 21:57:25,463 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:57:25,463 - root - INFO - Frontend: 2025-03-27 21:57:25,463 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:57:25,463 - root - INFO - Frontend: 2025-03-27 21:57:25,463 - __main__ - INFO - Bot started in simulation mode
2025-03-27 21:57:25,463 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 21:57:25,463 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 21:57:58,639 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 21:57:58,740 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 21:57:58,741 - root - INFO - Frontend: 2025-03-27 21:57:58,740 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 21:57:58,741 - root - INFO - Frontend: 2025-03-27 21:57:58,741 - app.core.orchestrator - INFO - Shutting down scheduler
2025-03-27 21:57:58,741 - root - INFO - Frontend: 2025-03-27 21:57:58,741 - app.core.orchestrator - INFO - Scheduler shut down
2025-03-27 21:57:58,741 - root - INFO - Frontend: 2025-03-27 21:57:58,741 - app.core.orchestrator - INFO - Trading bot stopped successfully
2025-03-27 21:57:58,741 - root - INFO - Frontend: 2025-03-27 21:57:58,741 - app.utils.notification_system - INFO - [NOTICE] SYSTEM - Trading Bot Stopped: Trading bot has been stopped after running for 0.0 hours
2025-03-27 21:57:58,741 - root - INFO - Frontend: 2025-03-27 21:57:58,741 - app.utils.notification_system - INFO - Additional data: {
2025-03-27 21:57:58,741 - root - INFO - Frontend: "run_duration_hours": "0.0",
2025-03-27 21:57:58,741 - root - INFO - Frontend: "trades_executed": 0,
2025-03-27 21:57:58,742 - root - INFO - Frontend: "profit_loss": "$0.00"
2025-03-27 21:57:58,742 - root - INFO - Frontend: }
2025-03-27 21:57:58,742 - root - INFO - Frontend: 2025-03-27 21:57:58,741 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-03-27 21:57:58,742 - root - INFO - Frontend: INFO:     Application shutdown complete.
2025-03-27 21:57:58,742 - root - INFO - Frontend: INFO:     Finished server process [81725]
2025-03-27 21:57:58,743 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 21:57:58,865 - root - INFO - Frontend: Exception ignored in: <module 'threading' from '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py'>
2025-03-27 21:57:58,865 - root - INFO - Frontend: Traceback (most recent call last):
2025-03-27 21:57:58,865 - root - INFO - Frontend: File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py", line 1448, in _shutdown
2025-03-27 21:57:58,866 - root - INFO - Frontend: lock.acquire()
2025-03-27 21:57:58,866 - root - INFO - Frontend: KeyboardInterrupt:
2025-03-27 21:57:59,119 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 21:57:59,119 - root - INFO - Attempting to restart frontend...
2025-03-27 21:57:59,119 - root - INFO - Starting frontend server...
2025-03-27 21:57:59,129 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:57:59,131 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:57:59,213 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:57:59,213 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:57:59,213 - root - INFO - Frontend: Building React app...
2025-03-27 21:57:59,277 - root - INFO - Frontend: 
2025-03-27 21:57:59,277 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:57:59,277 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:57:59,277 - root - INFO - Frontend: 
2025-03-27 21:58:00,744 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-3' coro=<Server.serve() done, defined at /Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py:68> exception=KeyboardInterrupt()>
Traceback (most recent call last):
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/run.py", line 411, in <module>
    asyncio.run(main())
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 629, in run_until_complete
    self.run_forever()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 596, in run_forever
    self._run_once()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 1890, in _run_once
    handle._run()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 70, in serve
    await self._serve(sockets)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/contextlib.py", line 124, in __exit__
    next(self.gen)
  File "/Users/carloslarramba/Documents/Projects2025/Refactored_ML/trading_bot_env/lib/python3.9/site-packages/uvicorn/server.py", line 330, in capture_signals
    signal.raise_signal(captured_signal)
KeyboardInterrupt
2025-03-27 21:58:09,471 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:58:09,472 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:58:09,472 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:58:09,472 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:58:09,472 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:58:09,472 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:58:09,472 - root - INFO - Starting trading bot in simulation mode with components: ['bot', 'api', 'frontend']
2025-03-27 21:58:09,472 - root - INFO - Local IP: 192.168.1.134
2025-03-27 21:58:09,472 - root - INFO - API will be available at: http://192.168.1.134:8080
2025-03-27 21:58:09,472 - root - INFO - Dashboard will be available at: http://192.168.1.134:3001
2025-03-27 21:58:09,472 - root - INFO - Starting trading bot with components: ['bot', 'api', 'frontend'] in mode: simulation
2025-03-27 21:58:09,472 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:58:09,472 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: simulation)
2025-03-27 21:58:09,477 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:58:09,477 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:58:09,477 - root - INFO - Exchange manager initialized in simulation mode
2025-03-27 21:58:09,477 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:58:09,477 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:58:09,477 - root - INFO - Created shared orchestrator instance
2025-03-27 21:58:09,477 - root - INFO - Starting trading bot in simulation mode
2025-03-27 21:58:09,477 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:58:09,477 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:58:09,477 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:58:09,490 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:58:09,518 - app.database.manager - INFO - Database connection successful
2025-03-27 21:58:09,518 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:58:09,518 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:58:09,518 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:58:09,518 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:58:09,518 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:58:09,518 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:58:09,518 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:58:09,518 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:58:09,519 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:58:09,519 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:58:09,519 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:58:09,519 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:58:09,519 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:58:09,519 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:58:09,519 - app.core.orchestrator - INFO - ML module initialized
2025-03-27 21:58:09,519 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:58:09,519 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:58:09,520 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:58:09,520 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:58:09,521 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:58:09,521 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:58:09,522 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:58:09,522 - app.database.manager - INFO - Database connection established
2025-03-27 21:58:09,522 - app.core.orchestrator - INFO - Loaded 46 balance history records
2025-03-27 21:58:09,523 - app.core.orchestrator - INFO - Loaded 30 PnL history records
2025-03-27 21:58:09,523 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:58:09,523 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:58:09,523 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:58:09,523 - app.core.orchestrator - INFO - Scheduling periodic jobs...
2025-03-27 21:58:09,523 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:09,523 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:09,523 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:09,523 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:09,523 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:09,523 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:09,523 - app.core.orchestrator - INFO - All periodic jobs scheduled.
2025-03-27 21:58:09,523 - app.core.orchestrator - INFO - Jobs added to scheduler configuration.
2025-03-27 21:58:09,524 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_heartbeat" to job store "default"
2025-03-27 21:58:09,524 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.collect_market_data" to job store "default"
2025-03-27 21:58:09,524 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.generate_signals" to job store "default"
2025-03-27 21:58:09,524 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_position_prices" to job store "default"
2025-03-27 21:58:09,524 - apscheduler.scheduler - INFO - Added job "BotOrchestrator._ensure_position_monitoring" to job store "default"
2025-03-27 21:58:09,524 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_historical_data" to job store "default"
2025-03-27 21:58:09,524 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 21:58:09,524 - app.core.orchestrator - INFO - AsyncIOScheduler started.
2025-03-27 21:58:09,575 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:58:09,575 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:58:09,575 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:58:09,575 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:58:09,575 - root - INFO - Bot initialized and started via orchestrator
2025-03-27 21:58:09,575 - root - INFO - Starting API server
2025-03-27 21:58:09,578 - app.api.server - INFO - API server initialized
2025-03-27 21:58:09,580 - app.api.server - INFO - Starting API server on http://192.168.1.134:8080 ...
2025-03-27 21:58:09,580 - app.api.server - INFO - API server available at: http://192.168.1.134:8080
2025-03-27 21:58:09,580 - app.api.server - INFO - API can be accessed from any device on the network using the above URL
2025-03-27 21:58:09,580 - root - INFO - Starting frontend server
2025-03-27 21:58:09,581 - root - INFO - Starting frontend server...
2025-03-27 21:58:09,625 - root - INFO - Database connection: Success
2025-03-27 21:58:09,625 - root - INFO - Redis connection: Success
2025-03-27 21:58:09,625 - root - INFO - Logging is configured and working
2025-03-27 21:58:09,625 - root - INFO - Trading bot is running with components: Trading Bot, API Server, Frontend Dashboard
2025-03-27 21:58:09,646 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 21:58:09,646 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:58:09,694 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 21:58:09,694 - root - INFO - Frontend: Dependencies already installed
2025-03-27 21:58:09,694 - root - INFO - Frontend: Building React app...
2025-03-27 21:58:09,762 - root - INFO - Frontend: 
2025-03-27 21:58:09,762 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 21:58:09,762 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 21:58:09,762 - root - INFO - Frontend: 
2025-03-27 21:58:10,575 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 21:58:36,487 - root - INFO - Frontend: Compiled with warnings.
2025-03-27 21:58:36,488 - root - INFO - Frontend: 
2025-03-27 21:58:36,488 - root - INFO - Frontend: TS7006: Parameter 'pair' implicitly has an 'any' type.
2025-03-27 21:58:36,488 - root - INFO - Frontend: 229 |               {active_pairs.length > 0 ? (
2025-03-27 21:58:36,488 - root - INFO - Frontend: 230 |                 <Stack direction="row" spacing={1} flexWrap="wrap">
2025-03-27 21:58:36,488 - root - INFO - Frontend: > 231 |                   {active_pairs.map((pair) => (
2025-03-27 21:58:36,488 - root - INFO - Frontend: |                                      ^^^^
2025-03-27 21:58:36,488 - root - INFO - Frontend: 232 |                     <Chip key={pair} label={pair} variant="outlined" size="small" sx={{ mb: 1 }} />
2025-03-27 21:58:36,488 - root - INFO - Frontend: 233 |                   ))}
2025-03-27 21:58:36,488 - root - INFO - Frontend: 234 |                 </Stack>
2025-03-27 21:58:36,488 - root - INFO - Frontend: 
2025-03-27 21:58:36,488 - root - INFO - Frontend: Search for the keywords to learn more about each warning.
2025-03-27 21:58:36,488 - root - INFO - Frontend: To ignore, add // eslint-disable-next-line to the line before.
2025-03-27 21:58:36,488 - root - INFO - Frontend: 
2025-03-27 21:58:36,488 - root - INFO - Frontend: File sizes after gzip:
2025-03-27 21:58:36,489 - root - INFO - Frontend: 
2025-03-27 21:58:36,590 - root - INFO - Frontend: 1.44 MB  build/static/js/main.2abb7c74.js
2025-03-27 21:58:36,590 - root - INFO - Frontend: 
2025-03-27 21:58:36,590 - root - INFO - Frontend: The bundle size is significantly larger than recommended.
2025-03-27 21:58:36,590 - root - INFO - Frontend: Consider reducing it with code splitting: https://goo.gl/9VhYWB
2025-03-27 21:58:36,590 - root - INFO - Frontend: You can also analyze the project dependencies: https://goo.gl/LeUzfb
2025-03-27 21:58:36,590 - root - INFO - Frontend: 
2025-03-27 21:58:36,592 - root - INFO - Frontend: The project was built assuming it is hosted at /.
2025-03-27 21:58:36,592 - root - INFO - Frontend: You can control this with the homepage field in your package.json.
2025-03-27 21:58:36,592 - root - INFO - Frontend: 
2025-03-27 21:58:36,592 - root - INFO - Frontend: The build folder is ready to be deployed.
2025-03-27 21:58:36,592 - root - INFO - Frontend: You may serve it with a static server:
2025-03-27 21:58:36,592 - root - INFO - Frontend: 
2025-03-27 21:58:36,592 - root - INFO - Frontend: npm install -g serve
2025-03-27 21:58:36,592 - root - INFO - Frontend: serve -s build
2025-03-27 21:58:36,592 - root - INFO - Frontend: 
2025-03-27 21:58:36,592 - root - INFO - Frontend: Find out more about deployment here:
2025-03-27 21:58:36,592 - root - INFO - Frontend: 
2025-03-27 21:58:36,592 - root - INFO - Frontend: https://cra.link/deployment
2025-03-27 21:58:36,592 - root - INFO - Frontend: 
2025-03-27 21:58:36,673 - root - INFO - Frontend: React app built successfully
2025-03-27 21:58:36,674 - root - INFO - Frontend: Starting frontend server...
2025-03-27 21:58:36,759 - root - INFO - Frontend: 2025-03-27 21:58:36,759 - __main__ - INFO - Current file: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/server.py
2025-03-27 21:58:36,759 - root - INFO - Frontend: 2025-03-27 21:58:36,759 - __main__ - INFO - Current directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 21:58:36,759 - root - INFO - Frontend: 2025-03-27 21:58:36,759 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML to sys.path
2025-03-27 21:58:36,759 - root - INFO - Frontend: 2025-03-27 21:58:36,759 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app to sys.path
2025-03-27 21:58:36,759 - root - INFO - Frontend: 2025-03-27 21:58:36,759 - __main__ - INFO - Added /Users/carloslarramba/Documents to sys.path
2025-03-27 21:58:36,759 - root - INFO - Frontend: 2025-03-27 21:58:36,759 - __main__ - INFO - Attempting to import using absolute imports...
2025-03-27 21:58:41,140 - root - INFO - Frontend: 2025-03-27 21:58:41,140 - __main__ - INFO - Successfully imported using absolute imports
2025-03-27 21:58:41,252 - root - INFO - Frontend: 2025-03-27 21:58:41,252 - __main__ - INFO - Mounted static files directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/react-app/build/static
2025-03-27 21:58:41,253 - root - INFO - Frontend: 2025-03-27 21:58:41,253 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:58:41,253 - root - INFO - Frontend: 2025-03-27 21:58:41,253 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:58:41,253 - root - INFO - Frontend: 2025-03-27 21:58:41,253 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:58:41,253 - root - INFO - Frontend: 2025-03-27 21:58:41,253 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:58:41,253 - root - INFO - Frontend: 2025-03-27 21:58:41,253 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:58:41,253 - root - INFO - Frontend: 2025-03-27 21:58:41,253 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:58:41,363 - root - INFO - Frontend: INFO:     Started server process [81881]
2025-03-27 21:58:41,363 - root - INFO - Frontend: INFO:     Waiting for application startup.
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - __main__ - INFO - Bot initialized
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 21:58:41,364 - root - INFO - Frontend: 2025-03-27 21:58:41,364 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 21:58:41,369 - root - INFO - Frontend: 2025-03-27 21:58:41,369 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 21:58:41,369 - root - INFO - Frontend: 2025-03-27 21:58:41,369 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 21:58:41,369 - root - INFO - Frontend: 2025-03-27 21:58:41,369 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 21:58:41,369 - root - INFO - Frontend: 2025-03-27 21:58:41,369 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 21:58:41,369 - root - INFO - Frontend: 2025-03-27 21:58:41,369 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 21:58:41,369 - root - INFO - Frontend: 2025-03-27 21:58:41,369 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:58:41,369 - root - INFO - Frontend: 2025-03-27 21:58:41,369 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:58:41,369 - root - INFO - Frontend: 2025-03-27 21:58:41,369 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 21:58:41,381 - root - INFO - Frontend: 2025-03-27 21:58:41,381 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 21:58:41,408 - root - INFO - Frontend: 2025-03-27 21:58:41,408 - app.database.manager - INFO - Database connection successful
2025-03-27 21:58:41,408 - root - INFO - Frontend: 2025-03-27 21:58:41,408 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 21:58:41,408 - root - INFO - Frontend: 2025-03-27 21:58:41,408 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 21:58:41,408 - root - INFO - Frontend: 2025-03-27 21:58:41,408 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 21:58:41,408 - root - INFO - Frontend: 2025-03-27 21:58:41,408 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 21:58:41,408 - root - INFO - Frontend: 2025-03-27 21:58:41,408 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 21:58:41,408 - root - INFO - Frontend: 2025-03-27 21:58:41,408 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,408 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,408 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,409 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,409 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,409 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,409 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,409 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,409 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,409 - app.core.orchestrator - INFO - ML module initialized
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,409 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 21:58:41,409 - root - INFO - Frontend: 2025-03-27 21:58:41,409 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 21:58:41,411 - root - INFO - Frontend: 2025-03-27 21:58:41,411 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 21:58:41,411 - root - INFO - Frontend: 2025-03-27 21:58:41,411 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 21:58:41,411 - root - INFO - Frontend: 2025-03-27 21:58:41,411 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 21:58:41,411 - root - INFO - Frontend: 2025-03-27 21:58:41,411 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 21:58:41,412 - root - INFO - Frontend: 2025-03-27 21:58:41,412 - app.database.manager - INFO - Database tables initialized
2025-03-27 21:58:41,412 - root - INFO - Frontend: 2025-03-27 21:58:41,412 - app.database.manager - INFO - Database connection established
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - app.core.orchestrator - INFO - Scheduling periodic jobs...
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - app.core.orchestrator - INFO - All periodic jobs scheduled.
2025-03-27 21:58:41,413 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - app.core.orchestrator - INFO - Jobs added to scheduler configuration.
2025-03-27 21:58:41,414 - root - INFO - Frontend: 2025-03-27 21:58:41,413 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_heartbeat" to job store "default"
2025-03-27 21:58:41,414 - root - INFO - Frontend: 2025-03-27 21:58:41,414 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.collect_market_data" to job store "default"
2025-03-27 21:58:41,414 - root - INFO - Frontend: 2025-03-27 21:58:41,414 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.generate_signals" to job store "default"
2025-03-27 21:58:41,414 - root - INFO - Frontend: 2025-03-27 21:58:41,414 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_position_prices" to job store "default"
2025-03-27 21:58:41,414 - root - INFO - Frontend: 2025-03-27 21:58:41,414 - apscheduler.scheduler - INFO - Added job "BotOrchestrator._ensure_position_monitoring" to job store "default"
2025-03-27 21:58:41,414 - root - INFO - Frontend: 2025-03-27 21:58:41,414 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_historical_data" to job store "default"
2025-03-27 21:58:41,414 - root - INFO - Frontend: 2025-03-27 21:58:41,414 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 21:58:41,414 - root - INFO - Frontend: 2025-03-27 21:58:41,414 - app.core.orchestrator - INFO - AsyncIOScheduler started.
2025-03-27 21:58:41,465 - root - INFO - Frontend: 2025-03-27 21:58:41,465 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 21:58:41,465 - root - INFO - Frontend: 2025-03-27 21:58:41,465 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 21:58:41,465 - root - INFO - Frontend: 2025-03-27 21:58:41,465 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:58:41,465 - root - INFO - Frontend: 2025-03-27 21:58:41,465 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 21:58:41,465 - root - INFO - Frontend: 2025-03-27 21:58:41,465 - __main__ - INFO - Bot started in simulation mode
2025-03-27 21:58:41,465 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 21:58:41,465 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 21:58:50,073 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 21:58:50,073 - root - INFO - Frontend: INFO:     192.168.1.134:52321 - "GET /ml HTTP/1.1" 200 OK
2025-03-27 21:58:50,086 - root - INFO - Frontend: INFO:     192.168.1.134:52321 - "GET /manifest.json HTTP/1.1" 200 OK
2025-03-27 21:58:50,098 - root - INFO - Frontend: INFO:     192.168.1.134:52321 - "GET /static/js/main.2abb7c74.js HTTP/1.1" 200 OK
2025-03-27 21:58:51,903 - root - INFO - Frontend: INFO:     ('192.168.1.134', 52322) - "WebSocket /ws" [accepted]
2025-03-27 21:58:51,904 - root - INFO - Frontend: 2025-03-27 21:58:51,903 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 21:58:51,904 - root - INFO - Frontend: 2025-03-27 21:58:51,903 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 21:58:51,904 - root - INFO - Frontend: 2025-03-27 21:58:51,903 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 21:58:51,904 - root - INFO - Frontend: INFO:     connection open
2025-03-27 21:58:51,907 - root - INFO - Frontend: 2025-03-27 21:58:51,907 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:58:51,907 - root - INFO - Frontend: 2025-03-27 21:58:51,907 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:58:51.907466", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:58:51,908 - root - INFO - Frontend: 2025-03-27 21:58:51,907 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:58:51,908 - root - INFO - Frontend: 2025-03-27 21:58:51,907 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:58:51,908 - root - INFO - Frontend: 2025-03-27 21:58:51,907 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:58:51.907466", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"], "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 21:58:56,467 - root - INFO - Frontend: 2025-03-27 21:58:56,467 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 21:58:56,468 - root - INFO - Frontend: 2025-03-27 21:58:56,467 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 21:58:56,469 - root - INFO - Frontend: 2025-03-27 21:58:56,469 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:58:56,469 - root - INFO - Frontend: 2025-03-27 21:58:56,469 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:58:56.469687", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:58:56,470 - root - INFO - Frontend: 2025-03-27 21:58:56,469 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:58:56,470 - root - INFO - Frontend: 2025-03-27 21:58:56,469 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:59:11,414 - root - INFO - Frontend: 2025-03-27 21:59:11,414 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:59:41 WET)" (scheduled at 2025-03-27 21:59:11.413410+00:00)
2025-03-27 21:59:11,415 - root - INFO - Frontend: 2025-03-27 21:59:11,414 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 21:59:41 WET)" executed successfully
2025-03-27 21:59:11,472 - root - INFO - Frontend: 2025-03-27 21:59:11,472 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 21:59:11,472 - root - INFO - Frontend: 2025-03-27 21:59:11,472 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 21:59:11,473 - root - INFO - Frontend: 2025-03-27 21:59:11,473 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:59:11,473 - root - INFO - Frontend: 2025-03-27 21:59:11,473 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:59:11.473536", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:59:11,473 - root - INFO - Frontend: 2025-03-27 21:59:11,473 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:59:11,473 - root - INFO - Frontend: 2025-03-27 21:59:11,473 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:59:26,475 - root - INFO - Frontend: 2025-03-27 21:59:26,475 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 21:59:26,476 - root - INFO - Frontend: 2025-03-27 21:59:26,475 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 21:59:26,477 - root - INFO - Frontend: 2025-03-27 21:59:26,477 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:59:26,477 - root - INFO - Frontend: 2025-03-27 21:59:26,477 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:59:26.477702", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:59:26,478 - root - INFO - Frontend: 2025-03-27 21:59:26,477 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:59:26,478 - root - INFO - Frontend: 2025-03-27 21:59:26,477 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:59:41,415 - root - INFO - Frontend: 2025-03-27 21:59:41,415 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:00:11 WET)" (scheduled at 2025-03-27 21:59:41.413410+00:00)
2025-03-27 21:59:41,416 - root - INFO - Frontend: 2025-03-27 21:59:41,415 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:00:11 WET)" executed successfully
2025-03-27 21:59:41,416 - root - INFO - Frontend: 2025-03-27 21:59:41,415 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:00:41 WET)" (scheduled at 2025-03-27 21:59:41.413493+00:00)
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:00:41 WET)" (scheduled at 2025-03-27 21:59:41.413527+00:00)
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 21:59:41,417 - root - INFO - Frontend: 2025-03-27 21:59:41,416 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:00:41 WET)" (scheduled at 2025-03-27 21:59:41.413555+00:00)
2025-03-27 21:59:41,418 - root - INFO - Frontend: 2025-03-27 21:59:41,417 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:00:41 WET)" executed successfully
2025-03-27 21:59:41,478 - root - INFO - Frontend: 2025-03-27 21:59:41,478 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 21:59:41,478 - root - INFO - Frontend: 2025-03-27 21:59:41,478 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 21:59:41,479 - root - INFO - Frontend: 2025-03-27 21:59:41,479 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:59:41,479 - root - INFO - Frontend: 2025-03-27 21:59:41,479 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:59:41.479415", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:59:41,479 - root - INFO - Frontend: 2025-03-27 21:59:41,479 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:59:41,479 - root - INFO - Frontend: 2025-03-27 21:59:41,479 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 21:59:43,859 - root - INFO - Frontend: 2025-03-27 21:59:43,859 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 21:59:43,883 - root - INFO - Frontend: 2025-03-27 21:59:43,883 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 21:59:44,170 - root - INFO - Frontend: 2025-03-27 21:59:44,170 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 21:59:44,179 - root - INFO - Frontend: 2025-03-27 21:59:44,179 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 21:59:44,600 - root - INFO - Frontend: 2025-03-27 21:59:44,600 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 21:59:44,616 - root - INFO - Frontend: 2025-03-27 21:59:44,616 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 21:59:44,990 - root - INFO - Frontend: 2025-03-27 21:59:44,990 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 21:59:44,997 - root - INFO - Frontend: 2025-03-27 21:59:44,997 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 21:59:45,390 - root - INFO - Frontend: 2025-03-27 21:59:45,390 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 21:59:45,391 - root - INFO - Frontend: 2025-03-27 21:59:45,391 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 21:59:45,823 - root - INFO - Frontend: 2025-03-27 21:59:45,823 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 21:59:45,838 - root - INFO - Frontend: 2025-03-27 21:59:45,838 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 21:59:46,231 - root - INFO - Frontend: 2025-03-27 21:59:46,231 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 21:59:46,245 - root - INFO - Frontend: 2025-03-27 21:59:46,245 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 21:59:46,642 - root - INFO - Frontend: 2025-03-27 21:59:46,642 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 21:59:46,656 - root - INFO - Frontend: 2025-03-27 21:59:46,656 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 21:59:47,052 - root - INFO - Frontend: 2025-03-27 21:59:47,051 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 21:59:47,066 - root - INFO - Frontend: 2025-03-27 21:59:47,066 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 21:59:47,439 - root - INFO - Frontend: 2025-03-27 21:59:47,439 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 21:59:47,440 - root - INFO - Frontend: 2025-03-27 21:59:47,440 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 21:59:47,771 - root - INFO - Frontend: 2025-03-27 21:59:47,771 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 21:59:47,785 - root - INFO - Frontend: 2025-03-27 21:59:47,785 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 21:59:48,179 - root - INFO - Frontend: 2025-03-27 21:59:48,179 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 21:59:48,192 - root - INFO - Frontend: 2025-03-27 21:59:48,192 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 21:59:48,585 - root - INFO - Frontend: 2025-03-27 21:59:48,585 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 21:59:48,597 - root - INFO - Frontend: 2025-03-27 21:59:48,597 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 21:59:48,998 - root - INFO - Frontend: 2025-03-27 21:59:48,998 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 21:59:49,011 - root - INFO - Frontend: 2025-03-27 21:59:49,011 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 21:59:49,390 - root - INFO - Frontend: 2025-03-27 21:59:49,390 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 21:59:49,391 - root - INFO - Frontend: 2025-03-27 21:59:49,391 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 21:59:49,819 - root - INFO - Frontend: 2025-03-27 21:59:49,819 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 21:59:49,833 - root - INFO - Frontend: 2025-03-27 21:59:49,833 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 21:59:50,230 - root - INFO - Frontend: 2025-03-27 21:59:50,230 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 21:59:50,244 - root - INFO - Frontend: 2025-03-27 21:59:50,244 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 21:59:50,638 - root - INFO - Frontend: 2025-03-27 21:59:50,638 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 21:59:50,652 - root - INFO - Frontend: 2025-03-27 21:59:50,652 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 21:59:51,048 - root - INFO - Frontend: 2025-03-27 21:59:51,048 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 21:59:51,060 - root - INFO - Frontend: 2025-03-27 21:59:51,060 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 21:59:51,440 - root - INFO - Frontend: 2025-03-27 21:59:51,440 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 21:59:51,441 - root - INFO - Frontend: 2025-03-27 21:59:51,440 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 21:59:51,871 - root - INFO - Frontend: 2025-03-27 21:59:51,870 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 21:59:51,885 - root - INFO - Frontend: 2025-03-27 21:59:51,885 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 21:59:52,280 - root - INFO - Frontend: 2025-03-27 21:59:52,280 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 21:59:52,294 - root - INFO - Frontend: 2025-03-27 21:59:52,294 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 21:59:52,691 - root - INFO - Frontend: 2025-03-27 21:59:52,690 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 21:59:52,703 - root - INFO - Frontend: 2025-03-27 21:59:52,703 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 21:59:53,092 - root - INFO - Frontend: 2025-03-27 21:59:53,092 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 21:59:53,103 - root - INFO - Frontend: 2025-03-27 21:59:53,103 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 21:59:53,489 - root - INFO - Frontend: 2025-03-27 21:59:53,489 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 21:59:53,499 - root - INFO - Frontend: 2025-03-27 21:59:53,499 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 21:59:53,499 - root - INFO - Frontend: 2025-03-27 21:59:53,499 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 21:59:53,499 - root - INFO - Frontend: 2025-03-27 21:59:53,499 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 21:59:53,504 - root - INFO - Frontend: 2025-03-27 21:59:53,504 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 21:59:53,504 - root - INFO - Frontend: 2025-03-27 21:59:53,504 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 21:59:53,505 - root - INFO - Frontend: 2025-03-27 21:59:53,505 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 21:59:53,505 - root - INFO - Frontend: 2025-03-27 21:59:53,505 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 21:59:53,508 - root - INFO - Frontend: 2025-03-27 21:59:53,508 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 21:59:53,508 - root - INFO - Frontend: 2025-03-27 21:59:53,508 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 21:59:53,509 - root - INFO - Frontend: 2025-03-27 21:59:53,509 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 21:59:53,509 - root - INFO - Frontend: 2025-03-27 21:59:53,509 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 21:59:53,510 - root - INFO - Frontend: 2025-03-27 21:59:53,510 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 21:59:53,511 - root - INFO - Frontend: 2025-03-27 21:59:53,510 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 21:59:53,511 - root - INFO - Frontend: 2025-03-27 21:59:53,511 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 21:59:53,511 - root - INFO - Frontend: 2025-03-27 21:59:53,511 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 21:59:53,513 - root - INFO - Frontend: 2025-03-27 21:59:53,513 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 21:59:53,513 - root - INFO - Frontend: 2025-03-27 21:59:53,513 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 21:59:53,513 - root - INFO - Frontend: 2025-03-27 21:59:53,513 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 21:59:53,513 - root - INFO - Frontend: 2025-03-27 21:59:53,513 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 21:59:53,513 - root - INFO - Frontend: 2025-03-27 21:59:53,513 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 21:59:53,514 - root - INFO - Frontend: 2025-03-27 21:59:53,513 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 21:59:53,515 - root - INFO - Frontend: 2025-03-27 21:59:53,515 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 21:59:53,515 - root - INFO - Frontend: 2025-03-27 21:59:53,515 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 21:59:53,515 - root - INFO - Frontend: 2025-03-27 21:59:53,515 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 21:59:53,515 - root - INFO - Frontend: 2025-03-27 21:59:53,515 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 21:59:53,517 - root - INFO - Frontend: 2025-03-27 21:59:53,517 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 21:59:53,517 - root - INFO - Frontend: 2025-03-27 21:59:53,517 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 21:59:53,517 - root - INFO - Frontend: 2025-03-27 21:59:53,517 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 21:59:53,517 - root - INFO - Frontend: 2025-03-27 21:59:53,517 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 21:59:53,518 - root - INFO - Frontend: 2025-03-27 21:59:53,518 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 21:59:53,518 - root - INFO - Frontend: 2025-03-27 21:59:53,518 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 21:59:53,519 - root - INFO - Frontend: 2025-03-27 21:59:53,519 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 21:59:53,519 - root - INFO - Frontend: 2025-03-27 21:59:53,519 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 21:59:53,520 - root - INFO - Frontend: 2025-03-27 21:59:53,520 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 1 signals
2025-03-27 21:59:53,520 - root - INFO - Frontend: 2025-03-27 21:59:53,520 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 21:59:53,521 - root - INFO - Frontend: 2025-03-27 21:59:53,521 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 21:59:53,521 - root - INFO - Frontend: 2025-03-27 21:59:53,521 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 21:59:53,521 - root - INFO - Frontend: 2025-03-27 21:59:53,521 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 21:59:53,521 - root - INFO - Frontend: 2025-03-27 21:59:53,521 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 21:59:53,522 - root - INFO - Frontend: 2025-03-27 21:59:53,522 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 21:59:53,522 - root - INFO - Frontend: 2025-03-27 21:59:53,522 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 21:59:53,523 - root - INFO - Frontend: 2025-03-27 21:59:53,523 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 21:59:53,523 - root - INFO - Frontend: 2025-03-27 21:59:53,523 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 21:59:53,524 - root - INFO - Frontend: 2025-03-27 21:59:53,524 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 21:59:53,524 - root - INFO - Frontend: 2025-03-27 21:59:53,524 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 21:59:53,524 - root - INFO - Frontend: 2025-03-27 21:59:53,524 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 21:59:53,524 - root - INFO - Frontend: 2025-03-27 21:59:53,524 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 21:59:53,525 - root - INFO - Frontend: 2025-03-27 21:59:53,525 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 21:59:53,525 - root - INFO - Frontend: 2025-03-27 21:59:53,525 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 21:59:53,526 - root - INFO - Frontend: 2025-03-27 21:59:53,526 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 21:59:53,526 - root - INFO - Frontend: 2025-03-27 21:59:53,526 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 21:59:53,528 - root - INFO - Frontend: 2025-03-27 21:59:53,528 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 21:59:53,528 - root - INFO - Frontend: 2025-03-27 21:59:53,528 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 21:59:53,528 - root - INFO - Frontend: 2025-03-27 21:59:53,528 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 21:59:53,528 - root - INFO - Frontend: 2025-03-27 21:59:53,528 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 21:59:53,528 - root - INFO - Frontend: 2025-03-27 21:59:53,528 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 21:59:53,528 - root - INFO - Frontend: 2025-03-27 21:59:53,528 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 21:59:53,529 - root - INFO - Frontend: 2025-03-27 21:59:53,529 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 21:59:53,529 - root - INFO - Frontend: 2025-03-27 21:59:53,529 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 21:59:53,530 - root - INFO - Frontend: 2025-03-27 21:59:53,529 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 21:59:53,530 - root - INFO - Frontend: 2025-03-27 21:59:53,530 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 21:59:53,530 - root - INFO - Frontend: 2025-03-27 21:59:53,530 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 21:59:53,530 - root - INFO - Frontend: 2025-03-27 21:59:53,530 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 21:59:53,531 - root - INFO - Frontend: 2025-03-27 21:59:53,531 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 21:59:53,531 - root - INFO - Frontend: 2025-03-27 21:59:53,531 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 21:59:53,532 - root - INFO - Frontend: 2025-03-27 21:59:53,532 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 21:59:53,532 - root - INFO - Frontend: 2025-03-27 21:59:53,532 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 21:59:53,532 - root - INFO - Frontend: 2025-03-27 21:59:53,532 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 21:59:53,532 - root - INFO - Frontend: 2025-03-27 21:59:53,532 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 21:59:53,533 - root - INFO - Frontend: 2025-03-27 21:59:53,533 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 1 signals
2025-03-27 21:59:53,533 - root - INFO - Frontend: 2025-03-27 21:59:53,533 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 21:59:53,534 - root - INFO - Frontend: 2025-03-27 21:59:53,534 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 21:59:53,534 - root - INFO - Frontend: 2025-03-27 21:59:53,534 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 21:59:53,534 - root - INFO - Frontend: 2025-03-27 21:59:53,534 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 21:59:53,534 - root - INFO - Frontend: 2025-03-27 21:59:53,534 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 21:59:53,535 - root - INFO - Frontend: 2025-03-27 21:59:53,535 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 21:59:53,535 - root - INFO - Frontend: 2025-03-27 21:59:53,535 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 21:59:53,535 - root - INFO - Frontend: 2025-03-27 21:59:53,535 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 21:59:53,535 - root - INFO - Frontend: 2025-03-27 21:59:53,535 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 21:59:53,536 - root - INFO - Frontend: 2025-03-27 21:59:53,536 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 21:59:53,536 - root - INFO - Frontend: 2025-03-27 21:59:53,536 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 21:59:53,536 - root - INFO - Frontend: 2025-03-27 21:59:53,536 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 21:59:53,536 - root - INFO - Frontend: 2025-03-27 21:59:53,536 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 21:59:53,537 - root - INFO - Frontend: 2025-03-27 21:59:53,537 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 21:59:53,537 - root - INFO - Frontend: 2025-03-27 21:59:53,537 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 21:59:53,538 - root - INFO - Frontend: 2025-03-27 21:59:53,538 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 21:59:53,538 - root - INFO - Frontend: 2025-03-27 21:59:53,538 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 21:59:53,539 - root - INFO - Frontend: 2025-03-27 21:59:53,539 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 21:59:53,539 - root - INFO - Frontend: 2025-03-27 21:59:53,539 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 21:59:53,539 - root - INFO - Frontend: 2025-03-27 21:59:53,539 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 21:59:53,539 - root - INFO - Frontend: 2025-03-27 21:59:53,539 - app.core.orchestrator - INFO - Received 4 signals from strategy module
2025-03-27 21:59:53,539 - root - INFO - Frontend: 2025-03-27 21:59:53,539 - app.core.orchestrator - INFO - Processing 4 trading signals
2025-03-27 21:59:53,539 - root - INFO - Frontend: 2025-03-27 21:59:53,539 - app.exchange.manager - INFO - Fetching simulated balance with real trading pairs
2025-03-27 21:59:53,539 - root - INFO - Frontend: 2025-03-27 21:59:53,539 - app.exchange.manager - INFO - Fetching real markets from Binance mainnet
2025-03-27 21:59:53,540 - root - INFO - Frontend: 2025-03-27 21:59:53,540 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:00:41 WET)" executed successfully
2025-03-27 21:59:54,718 - root - INFO - Frontend: 2025-03-27 21:59:54,718 - app.exchange.manager - INFO - Found 162 active USDC markets
2025-03-27 21:59:54,728 - root - INFO - Frontend: 2025-03-27 21:59:54,727 - app.exchange.manager - INFO - Fetched balance from binance. Total assets: 163
2025-03-27 21:59:54,728 - root - INFO - Frontend: 2025-03-27 21:59:54,728 - app.exchange.manager - INFO - Simulated exchange binance has no positions
2025-03-27 21:59:54,728 - root - INFO - Frontend: 2025-03-27 21:59:54,728 - app.core.orchestrator - INFO - Skipping signal for BTC/USDC - insufficient balance (0 USDC)
2025-03-27 21:59:54,728 - root - INFO - Frontend: 2025-03-27 21:59:54,728 - app.core.orchestrator - INFO - Skipping signal for ETH/USDC - insufficient balance (0 USDC)
2025-03-27 21:59:54,728 - root - INFO - Frontend: 2025-03-27 21:59:54,728 - app.core.orchestrator - INFO - Skipping signal for XRP/USDC - insufficient balance (0 USDC)
2025-03-27 21:59:54,728 - root - INFO - Frontend: 2025-03-27 21:59:54,728 - app.core.orchestrator - INFO - Skipping signal for LINK/USDC - insufficient balance (0 USDC)
2025-03-27 21:59:54,728 - root - INFO - Frontend: 2025-03-27 21:59:54,728 - app.core.orchestrator - INFO - Processed signals: 0 passed filtering
2025-03-27 21:59:54,728 - root - INFO - Frontend: 2025-03-27 21:59:54,728 - app.core.orchestrator - INFO - Generated 0 trading signals
2025-03-27 21:59:54,729 - root - INFO - Frontend: 2025-03-27 21:59:54,728 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:00:41 WET)" executed successfully
2025-03-27 21:59:56,491 - root - INFO - Frontend: 2025-03-27 21:59:56,491 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 21:59:56,492 - root - INFO - Frontend: 2025-03-27 21:59:56,491 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 21:59:56,494 - root - INFO - Frontend: 2025-03-27 21:59:56,494 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 21:59:56,494 - root - INFO - Frontend: 2025-03-27 21:59:56,494 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T21:59:56.494311", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 21:59:56,494 - root - INFO - Frontend: 2025-03-27 21:59:56,494 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 21:59:56,494 - root - INFO - Frontend: 2025-03-27 21:59:56,494 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:00:11,431 - root - INFO - Frontend: 2025-03-27 22:00:11,431 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:00:41 WET)" (scheduled at 2025-03-27 22:00:11.413410+00:00)
2025-03-27 22:00:11,433 - root - INFO - Frontend: 2025-03-27 22:00:11,431 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:00:41 WET)" executed successfully
2025-03-27 22:00:11,502 - root - INFO - Frontend: 2025-03-27 22:00:11,502 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:00:11,502 - root - INFO - Frontend: 2025-03-27 22:00:11,502 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:00:11,503 - root - INFO - Frontend: 2025-03-27 22:00:11,503 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:00:11,503 - root - INFO - Frontend: 2025-03-27 22:00:11,503 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:00:11.503189", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:00:11,503 - root - INFO - Frontend: 2025-03-27 22:00:11,503 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:00:11,503 - root - INFO - Frontend: 2025-03-27 22:00:11,503 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:00:26,506 - root - INFO - Frontend: 2025-03-27 22:00:26,506 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:00:26,507 - root - INFO - Frontend: 2025-03-27 22:00:26,506 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:00:26,508 - root - INFO - Frontend: 2025-03-27 22:00:26,508 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:00:26,508 - root - INFO - Frontend: 2025-03-27 22:00:26,508 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:00:26.508554", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:00:26,509 - root - INFO - Frontend: 2025-03-27 22:00:26,508 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:00:26,509 - root - INFO - Frontend: 2025-03-27 22:00:26,508 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:00:41,419 - root - INFO - Frontend: 2025-03-27 22:00:41,419 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:01:11 WET)" (scheduled at 2025-03-27 22:00:41.413410+00:00)
2025-03-27 22:00:41,420 - root - INFO - Frontend: 2025-03-27 22:00:41,419 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:01:11 WET)" executed successfully
2025-03-27 22:00:41,420 - root - INFO - Frontend: 2025-03-27 22:00:41,419 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:01:41 WET)" (scheduled at 2025-03-27 22:00:41.413493+00:00)
2025-03-27 22:00:41,420 - root - INFO - Frontend: 2025-03-27 22:00:41,419 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:00:41,420 - root - INFO - Frontend: 2025-03-27 22:00:41,420 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:00:41,420 - root - INFO - Frontend: 2025-03-27 22:00:41,420 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:00:41,421 - root - INFO - Frontend: 2025-03-27 22:00:41,421 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:01:41 WET)" (scheduled at 2025-03-27 22:00:41.413527+00:00)
2025-03-27 22:00:41,421 - root - INFO - Frontend: 2025-03-27 22:00:41,421 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 22:00:41,421 - root - INFO - Frontend: 2025-03-27 22:00:41,421 - app.core.orchestrator - INFO - Using existing market data from store
2025-03-27 22:00:41,421 - root - INFO - Frontend: 2025-03-27 22:00:41,421 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 22:00:41,432 - root - INFO - Frontend: 2025-03-27 22:00:41,432 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:00:41,432 - root - INFO - Frontend: 2025-03-27 22:00:41,432 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 22:00:41,432 - root - INFO - Frontend: 2025-03-27 22:00:41,432 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 22:00:41,434 - root - INFO - Frontend: 2025-03-27 22:00:41,434 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 22:00:41,434 - root - INFO - Frontend: 2025-03-27 22:00:41,434 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 22:00:41,434 - root - INFO - Frontend: 2025-03-27 22:00:41,434 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 22:00:41,434 - root - INFO - Frontend: 2025-03-27 22:00:41,434 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 22:00:41,436 - root - INFO - Frontend: 2025-03-27 22:00:41,436 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:00:41,436 - root - INFO - Frontend: 2025-03-27 22:00:41,436 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 22:00:41,436 - root - INFO - Frontend: 2025-03-27 22:00:41,436 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:00:41,436 - root - INFO - Frontend: 2025-03-27 22:00:41,436 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 22:00:41,437 - root - INFO - Frontend: 2025-03-27 22:00:41,437 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:00:41,437 - root - INFO - Frontend: 2025-03-27 22:00:41,437 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 22:00:41,438 - root - INFO - Frontend: 2025-03-27 22:00:41,438 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:00:41,438 - root - INFO - Frontend: 2025-03-27 22:00:41,438 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 22:00:41,439 - root - INFO - Frontend: 2025-03-27 22:00:41,439 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:00:41,439 - root - INFO - Frontend: 2025-03-27 22:00:41,439 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 22:00:41,440 - root - INFO - Frontend: 2025-03-27 22:00:41,440 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:00:41,440 - root - INFO - Frontend: 2025-03-27 22:00:41,440 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:00:41,440 - root - INFO - Frontend: 2025-03-27 22:00:41,440 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 22:00:41,440 - root - INFO - Frontend: 2025-03-27 22:00:41,440 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 22:00:41,441 - root - INFO - Frontend: 2025-03-27 22:00:41,441 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:00:41,441 - root - INFO - Frontend: 2025-03-27 22:00:41,441 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 22:00:41,441 - root - INFO - Frontend: 2025-03-27 22:00:41,441 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:00:41,441 - root - INFO - Frontend: 2025-03-27 22:00:41,441 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 22:00:41,442 - root - INFO - Frontend: 2025-03-27 22:00:41,442 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:00:41,442 - root - INFO - Frontend: 2025-03-27 22:00:41,442 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 22:00:41,443 - root - INFO - Frontend: 2025-03-27 22:00:41,443 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:00:41,443 - root - INFO - Frontend: 2025-03-27 22:00:41,443 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 22:00:41,444 - root - INFO - Frontend: 2025-03-27 22:00:41,444 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:00:41,444 - root - INFO - Frontend: 2025-03-27 22:00:41,444 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 22:00:41,444 - root - INFO - Frontend: 2025-03-27 22:00:41,444 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:00:41,445 - root - INFO - Frontend: 2025-03-27 22:00:41,444 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 22:00:41,446 - root - INFO - Frontend: 2025-03-27 22:00:41,446 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 1 signals
2025-03-27 22:00:41,446 - root - INFO - Frontend: 2025-03-27 22:00:41,446 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 22:00:41,446 - root - INFO - Frontend: 2025-03-27 22:00:41,446 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:00:41,446 - root - INFO - Frontend: 2025-03-27 22:00:41,446 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:00:41,446 - root - INFO - Frontend: 2025-03-27 22:00:41,446 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 22:00:41,446 - root - INFO - Frontend: 2025-03-27 22:00:41,446 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 22:00:41,447 - root - INFO - Frontend: 2025-03-27 22:00:41,447 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:00:41,447 - root - INFO - Frontend: 2025-03-27 22:00:41,447 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 22:00:41,448 - root - INFO - Frontend: 2025-03-27 22:00:41,448 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:00:41,448 - root - INFO - Frontend: 2025-03-27 22:00:41,448 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 22:00:41,449 - root - INFO - Frontend: 2025-03-27 22:00:41,449 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:00:41,449 - root - INFO - Frontend: 2025-03-27 22:00:41,449 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 22:00:41,449 - root - INFO - Frontend: 2025-03-27 22:00:41,449 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:00:41,449 - root - INFO - Frontend: 2025-03-27 22:00:41,449 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 22:00:41,450 - root - INFO - Frontend: 2025-03-27 22:00:41,450 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:00:41,450 - root - INFO - Frontend: 2025-03-27 22:00:41,450 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 22:00:41,451 - root - INFO - Frontend: 2025-03-27 22:00:41,451 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:00:41,451 - root - INFO - Frontend: 2025-03-27 22:00:41,451 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 22:00:41,452 - root - INFO - Frontend: 2025-03-27 22:00:41,452 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:00:41,452 - root - INFO - Frontend: 2025-03-27 22:00:41,452 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 22:00:41,452 - root - INFO - Frontend: 2025-03-27 22:00:41,452 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:00:41,452 - root - INFO - Frontend: 2025-03-27 22:00:41,452 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:00:41,452 - root - INFO - Frontend: 2025-03-27 22:00:41,452 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 22:00:41,452 - root - INFO - Frontend: 2025-03-27 22:00:41,452 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 22:00:41,453 - root - INFO - Frontend: 2025-03-27 22:00:41,453 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:00:41,453 - root - INFO - Frontend: 2025-03-27 22:00:41,453 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 22:00:41,453 - root - INFO - Frontend: 2025-03-27 22:00:41,453 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:00:41,453 - root - INFO - Frontend: 2025-03-27 22:00:41,453 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 22:00:41,454 - root - INFO - Frontend: 2025-03-27 22:00:41,454 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:00:41,454 - root - INFO - Frontend: 2025-03-27 22:00:41,454 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 22:00:41,454 - root - INFO - Frontend: 2025-03-27 22:00:41,454 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:00:41,454 - root - INFO - Frontend: 2025-03-27 22:00:41,454 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 22:00:41,455 - root - INFO - Frontend: 2025-03-27 22:00:41,455 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:00:41,455 - root - INFO - Frontend: 2025-03-27 22:00:41,455 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 22:00:41,455 - root - INFO - Frontend: 2025-03-27 22:00:41,455 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:00:41,456 - root - INFO - Frontend: 2025-03-27 22:00:41,455 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 22:00:41,457 - root - INFO - Frontend: 2025-03-27 22:00:41,456 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 1 signals
2025-03-27 22:00:41,457 - root - INFO - Frontend: 2025-03-27 22:00:41,457 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 22:00:41,457 - root - INFO - Frontend: 2025-03-27 22:00:41,457 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:00:41,457 - root - INFO - Frontend: 2025-03-27 22:00:41,457 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:00:41,457 - root - INFO - Frontend: 2025-03-27 22:00:41,457 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 22:00:41,457 - root - INFO - Frontend: 2025-03-27 22:00:41,457 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 22:00:41,458 - root - INFO - Frontend: 2025-03-27 22:00:41,458 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 22:00:41,458 - root - INFO - Frontend: 2025-03-27 22:00:41,458 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 22:00:41,458 - root - INFO - Frontend: 2025-03-27 22:00:41,458 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 22:00:41,458 - root - INFO - Frontend: 2025-03-27 22:00:41,458 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 22:00:41,459 - root - INFO - Frontend: 2025-03-27 22:00:41,459 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:00:41,459 - root - INFO - Frontend: 2025-03-27 22:00:41,459 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 22:00:41,459 - root - INFO - Frontend: 2025-03-27 22:00:41,459 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:00:41,459 - root - INFO - Frontend: 2025-03-27 22:00:41,459 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 22:00:41,460 - root - INFO - Frontend: 2025-03-27 22:00:41,460 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:00:41,460 - root - INFO - Frontend: 2025-03-27 22:00:41,460 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 22:00:41,460 - root - INFO - Frontend: 2025-03-27 22:00:41,460 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:00:41,460 - root - INFO - Frontend: 2025-03-27 22:00:41,460 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 22:00:41,461 - root - INFO - Frontend: 2025-03-27 22:00:41,461 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:00:41,461 - root - INFO - Frontend: 2025-03-27 22:00:41,461 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 22:00:41,461 - root - INFO - Frontend: 2025-03-27 22:00:41,461 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:00:41,461 - root - INFO - Frontend: 2025-03-27 22:00:41,461 - app.core.orchestrator - INFO - Received 4 signals from strategy module
2025-03-27 22:00:41,461 - root - INFO - Frontend: 2025-03-27 22:00:41,461 - app.core.orchestrator - INFO - Processing 4 trading signals
2025-03-27 22:00:41,461 - root - INFO - Frontend: 2025-03-27 22:00:41,461 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:01:41 WET)" (scheduled at 2025-03-27 22:00:41.413555+00:00)
2025-03-27 22:00:41,461 - root - INFO - Frontend: 2025-03-27 22:00:41,461 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:01:41 WET)" executed successfully
2025-03-27 22:00:41,462 - root - INFO - Frontend: 2025-03-27 22:00:41,462 - app.exchange.manager - INFO - Fetching simulated balance with real trading pairs
2025-03-27 22:00:41,462 - root - INFO - Frontend: 2025-03-27 22:00:41,462 - app.exchange.manager - INFO - Fetching real markets from Binance mainnet
2025-03-27 22:00:41,510 - root - INFO - Frontend: 2025-03-27 22:00:41,510 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:00:41,510 - root - INFO - Frontend: 2025-03-27 22:00:41,510 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:00:41,511 - root - INFO - Frontend: 2025-03-27 22:00:41,511 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:00:41,512 - root - INFO - Frontend: 2025-03-27 22:00:41,511 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:00:41.511960", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:00:41,512 - root - INFO - Frontend: 2025-03-27 22:00:41,512 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:00:41,512 - root - INFO - Frontend: 2025-03-27 22:00:41,512 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:00:41,840 - root - INFO - Frontend: 2025-03-27 22:00:41,840 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:00:42,220 - root - INFO - Frontend: 2025-03-27 22:00:42,219 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:00:42,510 - root - INFO - Frontend: 2025-03-27 22:00:42,510 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:00:42,798 - root - INFO - Frontend: 2025-03-27 22:00:42,797 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:00:43,084 - root - INFO - Frontend: 2025-03-27 22:00:43,084 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:00:43,285 - root - INFO - Frontend: 2025-03-27 22:00:43,284 - app.exchange.manager - INFO - Found 162 active USDC markets
2025-03-27 22:00:43,294 - root - INFO - Frontend: 2025-03-27 22:00:43,294 - app.exchange.manager - INFO - Fetched balance from binance. Total assets: 163
2025-03-27 22:00:43,294 - root - INFO - Frontend: 2025-03-27 22:00:43,294 - app.exchange.manager - INFO - Simulated exchange binance has no positions
2025-03-27 22:00:43,294 - root - INFO - Frontend: 2025-03-27 22:00:43,294 - app.core.orchestrator - INFO - Skipping signal for BTC/USDC - insufficient balance (0 USDC)
2025-03-27 22:00:43,294 - root - INFO - Frontend: 2025-03-27 22:00:43,294 - app.core.orchestrator - INFO - Skipping signal for ETH/USDC - insufficient balance (0 USDC)
2025-03-27 22:00:43,294 - root - INFO - Frontend: 2025-03-27 22:00:43,294 - app.core.orchestrator - INFO - Skipping signal for XRP/USDC - insufficient balance (0 USDC)
2025-03-27 22:00:43,294 - root - INFO - Frontend: 2025-03-27 22:00:43,294 - app.core.orchestrator - INFO - Skipping signal for LINK/USDC - insufficient balance (0 USDC)
2025-03-27 22:00:43,294 - root - INFO - Frontend: 2025-03-27 22:00:43,294 - app.core.orchestrator - INFO - Processed signals: 0 passed filtering
2025-03-27 22:00:43,294 - root - INFO - Frontend: 2025-03-27 22:00:43,294 - app.core.orchestrator - INFO - Generated 0 trading signals
2025-03-27 22:00:43,294 - root - INFO - Frontend: 2025-03-27 22:00:43,294 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:01:41 WET)" executed successfully
2025-03-27 22:00:43,375 - root - INFO - Frontend: 2025-03-27 22:00:43,375 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:00:43,691 - root - INFO - Frontend: 2025-03-27 22:00:43,690 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:00:43,996 - root - INFO - Frontend: 2025-03-27 22:00:43,996 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:00:44,298 - root - INFO - Frontend: 2025-03-27 22:00:44,298 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:00:44,599 - root - INFO - Frontend: 2025-03-27 22:00:44,599 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:00:44,904 - root - INFO - Frontend: 2025-03-27 22:00:44,904 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:00:45,266 - root - INFO - Frontend: 2025-03-27 22:00:45,265 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:00:45,574 - root - INFO - Frontend: 2025-03-27 22:00:45,573 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:00:45,875 - root - INFO - Frontend: 2025-03-27 22:00:45,875 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:00:46,162 - root - INFO - Frontend: 2025-03-27 22:00:46,162 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:00:46,467 - root - INFO - Frontend: 2025-03-27 22:00:46,467 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:00:46,775 - root - INFO - Frontend: 2025-03-27 22:00:46,775 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:00:47,078 - root - INFO - Frontend: 2025-03-27 22:00:47,078 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:00:47,388 - root - INFO - Frontend: 2025-03-27 22:00:47,388 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:00:47,676 - root - INFO - Frontend: 2025-03-27 22:00:47,676 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:00:47,984 - root - INFO - Frontend: 2025-03-27 22:00:47,984 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:00:48,295 - root - INFO - Frontend: 2025-03-27 22:00:48,294 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:00:48,605 - root - INFO - Frontend: 2025-03-27 22:00:48,605 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:00:49,019 - root - INFO - Frontend: 2025-03-27 22:00:49,019 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:00:49,299 - root - INFO - Frontend: 2025-03-27 22:00:49,299 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:01:41 WET)" executed successfully
2025-03-27 22:00:56,514 - root - INFO - Frontend: 2025-03-27 22:00:56,514 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:00:56,514 - root - INFO - Frontend: 2025-03-27 22:00:56,514 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:00:56,515 - root - INFO - Frontend: 2025-03-27 22:00:56,515 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:00:56,515 - root - INFO - Frontend: 2025-03-27 22:00:56,515 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:00:56.515706", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:00:56,516 - root - INFO - Frontend: 2025-03-27 22:00:56,515 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:00:56,516 - root - INFO - Frontend: 2025-03-27 22:00:56,515 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:01:11,417 - root - INFO - Frontend: 2025-03-27 22:01:11,416 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:01:41 WET)" (scheduled at 2025-03-27 22:01:11.413410+00:00)
2025-03-27 22:01:11,418 - root - INFO - Frontend: 2025-03-27 22:01:11,417 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:01:41 WET)" executed successfully
2025-03-27 22:01:11,518 - root - INFO - Frontend: 2025-03-27 22:01:11,518 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:01:11,518 - root - INFO - Frontend: 2025-03-27 22:01:11,518 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:01:11,520 - root - INFO - Frontend: 2025-03-27 22:01:11,520 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:01:11,520 - root - INFO - Frontend: 2025-03-27 22:01:11,520 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:01:11.520301", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:01:11,520 - root - INFO - Frontend: 2025-03-27 22:01:11,520 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:01:11,520 - root - INFO - Frontend: 2025-03-27 22:01:11,520 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:01:26,522 - root - INFO - Frontend: 2025-03-27 22:01:26,522 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:01:26,523 - root - INFO - Frontend: 2025-03-27 22:01:26,522 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:01:26,525 - root - INFO - Frontend: 2025-03-27 22:01:26,524 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:01:26,525 - root - INFO - Frontend: 2025-03-27 22:01:26,525 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:01:26.525022", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:01:26,525 - root - INFO - Frontend: 2025-03-27 22:01:26,525 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:01:26,525 - root - INFO - Frontend: 2025-03-27 22:01:26,525 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:01:41,416 - root - INFO - Frontend: 2025-03-27 22:01:41,415 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:02:11 WET)" (scheduled at 2025-03-27 22:01:41.413410+00:00)
2025-03-27 22:01:41,417 - root - INFO - Frontend: 2025-03-27 22:01:41,416 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:02:11 WET)" executed successfully
2025-03-27 22:01:41,418 - root - INFO - Frontend: 2025-03-27 22:01:41,416 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:02:41 WET)" (scheduled at 2025-03-27 22:01:41.413493+00:00)
2025-03-27 22:01:41,418 - root - INFO - Frontend: 2025-03-27 22:01:41,416 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:01:41,418 - root - INFO - Frontend: 2025-03-27 22:01:41,416 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:01:41,418 - root - INFO - Frontend: 2025-03-27 22:01:41,416 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:01:41,418 - root - INFO - Frontend: 2025-03-27 22:01:41,417 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:02:41 WET)" (scheduled at 2025-03-27 22:01:41.413527+00:00)
2025-03-27 22:01:41,418 - root - INFO - Frontend: 2025-03-27 22:01:41,417 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 22:01:41,418 - root - INFO - Frontend: 2025-03-27 22:01:41,417 - app.core.orchestrator - INFO - Using existing market data from store
2025-03-27 22:01:41,418 - root - INFO - Frontend: 2025-03-27 22:01:41,417 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 22:01:41,429 - root - INFO - Frontend: 2025-03-27 22:01:41,428 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:01:41,429 - root - INFO - Frontend: 2025-03-27 22:01:41,429 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 22:01:41,429 - root - INFO - Frontend: 2025-03-27 22:01:41,429 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 22:01:41,433 - root - INFO - Frontend: 2025-03-27 22:01:41,433 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 22:01:41,433 - root - INFO - Frontend: 2025-03-27 22:01:41,433 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 22:01:41,434 - root - INFO - Frontend: 2025-03-27 22:01:41,434 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 22:01:41,434 - root - INFO - Frontend: 2025-03-27 22:01:41,434 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 22:01:41,436 - root - INFO - Frontend: 2025-03-27 22:01:41,436 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:01:41,436 - root - INFO - Frontend: 2025-03-27 22:01:41,436 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 22:01:41,437 - root - INFO - Frontend: 2025-03-27 22:01:41,437 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:01:41,437 - root - INFO - Frontend: 2025-03-27 22:01:41,437 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 22:01:41,438 - root - INFO - Frontend: 2025-03-27 22:01:41,438 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:01:41,438 - root - INFO - Frontend: 2025-03-27 22:01:41,438 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 22:01:41,439 - root - INFO - Frontend: 2025-03-27 22:01:41,439 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:01:41,439 - root - INFO - Frontend: 2025-03-27 22:01:41,439 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 22:01:41,441 - root - INFO - Frontend: 2025-03-27 22:01:41,441 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:01:41,441 - root - INFO - Frontend: 2025-03-27 22:01:41,441 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 22:01:41,441 - root - INFO - Frontend: 2025-03-27 22:01:41,441 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:01:41,441 - root - INFO - Frontend: 2025-03-27 22:01:41,441 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:01:41,441 - root - INFO - Frontend: 2025-03-27 22:01:41,441 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 22:01:41,441 - root - INFO - Frontend: 2025-03-27 22:01:41,441 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 22:01:41,442 - root - INFO - Frontend: 2025-03-27 22:01:41,442 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:01:41,443 - root - INFO - Frontend: 2025-03-27 22:01:41,442 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 22:01:41,443 - root - INFO - Frontend: 2025-03-27 22:01:41,443 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:01:41,443 - root - INFO - Frontend: 2025-03-27 22:01:41,443 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 22:01:41,444 - root - INFO - Frontend: 2025-03-27 22:01:41,444 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:01:41,444 - root - INFO - Frontend: 2025-03-27 22:01:41,444 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 22:01:41,445 - root - INFO - Frontend: 2025-03-27 22:01:41,445 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:01:41,445 - root - INFO - Frontend: 2025-03-27 22:01:41,445 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 22:01:41,446 - root - INFO - Frontend: 2025-03-27 22:01:41,446 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:01:41,446 - root - INFO - Frontend: 2025-03-27 22:01:41,446 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 22:01:41,447 - root - INFO - Frontend: 2025-03-27 22:01:41,447 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:01:41,447 - root - INFO - Frontend: 2025-03-27 22:01:41,447 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 22:01:41,448 - root - INFO - Frontend: 2025-03-27 22:01:41,448 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:01:41,448 - root - INFO - Frontend: 2025-03-27 22:01:41,448 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 22:01:41,448 - root - INFO - Frontend: 2025-03-27 22:01:41,448 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:01:41,448 - root - INFO - Frontend: 2025-03-27 22:01:41,448 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:01:41,448 - root - INFO - Frontend: 2025-03-27 22:01:41,448 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 22:01:41,449 - root - INFO - Frontend: 2025-03-27 22:01:41,448 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 22:01:41,450 - root - INFO - Frontend: 2025-03-27 22:01:41,450 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 1 signals
2025-03-27 22:01:41,450 - root - INFO - Frontend: 2025-03-27 22:01:41,450 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 22:01:41,450 - root - INFO - Frontend: 2025-03-27 22:01:41,450 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:01:41,450 - root - INFO - Frontend: 2025-03-27 22:01:41,450 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 22:01:41,451 - root - INFO - Frontend: 2025-03-27 22:01:41,451 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:01:41,451 - root - INFO - Frontend: 2025-03-27 22:01:41,451 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 22:01:41,452 - root - INFO - Frontend: 2025-03-27 22:01:41,452 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:01:41,452 - root - INFO - Frontend: 2025-03-27 22:01:41,452 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 22:01:41,453 - root - INFO - Frontend: 2025-03-27 22:01:41,453 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:01:41,453 - root - INFO - Frontend: 2025-03-27 22:01:41,453 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 22:01:41,453 - root - INFO - Frontend: 2025-03-27 22:01:41,453 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:01:41,453 - root - INFO - Frontend: 2025-03-27 22:01:41,453 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 22:01:41,454 - root - INFO - Frontend: 2025-03-27 22:01:41,454 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:01:41,454 - root - INFO - Frontend: 2025-03-27 22:01:41,454 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 22:01:41,454 - root - INFO - Frontend: 2025-03-27 22:01:41,454 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:01:41,455 - root - INFO - Frontend: 2025-03-27 22:01:41,454 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:01:41,455 - root - INFO - Frontend: 2025-03-27 22:01:41,454 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 22:01:41,455 - root - INFO - Frontend: 2025-03-27 22:01:41,454 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 22:01:41,455 - root - INFO - Frontend: 2025-03-27 22:01:41,455 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:01:41,455 - root - INFO - Frontend: 2025-03-27 22:01:41,455 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 22:01:41,456 - root - INFO - Frontend: 2025-03-27 22:01:41,456 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:01:41,456 - root - INFO - Frontend: 2025-03-27 22:01:41,456 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 22:01:41,457 - root - INFO - Frontend: 2025-03-27 22:01:41,457 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:01:41,457 - root - INFO - Frontend: 2025-03-27 22:01:41,457 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 22:01:41,457 - root - INFO - Frontend: 2025-03-27 22:01:41,457 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:01:41,457 - root - INFO - Frontend: 2025-03-27 22:01:41,457 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 22:01:41,458 - root - INFO - Frontend: 2025-03-27 22:01:41,458 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:01:41,458 - root - INFO - Frontend: 2025-03-27 22:01:41,458 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 22:01:41,459 - root - INFO - Frontend: 2025-03-27 22:01:41,459 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:01:41,459 - root - INFO - Frontend: 2025-03-27 22:01:41,459 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 22:01:41,460 - root - INFO - Frontend: 2025-03-27 22:01:41,460 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:01:41,460 - root - INFO - Frontend: 2025-03-27 22:01:41,460 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 22:01:41,460 - root - INFO - Frontend: 2025-03-27 22:01:41,460 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:01:41,460 - root - INFO - Frontend: 2025-03-27 22:01:41,460 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:01:41,460 - root - INFO - Frontend: 2025-03-27 22:01:41,460 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 22:01:41,460 - root - INFO - Frontend: 2025-03-27 22:01:41,460 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 22:01:41,461 - root - INFO - Frontend: 2025-03-27 22:01:41,461 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 22:01:41,461 - root - INFO - Frontend: 2025-03-27 22:01:41,461 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 22:01:41,461 - root - INFO - Frontend: 2025-03-27 22:01:41,461 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 22:01:41,462 - root - INFO - Frontend: 2025-03-27 22:01:41,461 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 22:01:41,462 - root - INFO - Frontend: 2025-03-27 22:01:41,462 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:01:41,462 - root - INFO - Frontend: 2025-03-27 22:01:41,462 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 22:01:41,463 - root - INFO - Frontend: 2025-03-27 22:01:41,463 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:01:41,463 - root - INFO - Frontend: 2025-03-27 22:01:41,463 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 22:01:41,463 - root - INFO - Frontend: 2025-03-27 22:01:41,463 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:01:41,463 - root - INFO - Frontend: 2025-03-27 22:01:41,463 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 22:01:41,464 - root - INFO - Frontend: 2025-03-27 22:01:41,464 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:01:41,464 - root - INFO - Frontend: 2025-03-27 22:01:41,464 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 22:01:41,465 - root - INFO - Frontend: 2025-03-27 22:01:41,465 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:01:41,465 - root - INFO - Frontend: 2025-03-27 22:01:41,465 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 22:01:41,465 - root - INFO - Frontend: 2025-03-27 22:01:41,465 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:01:41,465 - root - INFO - Frontend: 2025-03-27 22:01:41,465 - app.core.orchestrator - INFO - Received 3 signals from strategy module
2025-03-27 22:01:41,465 - root - INFO - Frontend: 2025-03-27 22:01:41,465 - app.core.orchestrator - INFO - Processing 3 trading signals
2025-03-27 22:01:41,465 - root - INFO - Frontend: 2025-03-27 22:01:41,465 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:02:41 WET)" (scheduled at 2025-03-27 22:01:41.413555+00:00)
2025-03-27 22:01:41,465 - root - INFO - Frontend: 2025-03-27 22:01:41,465 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:02:41 WET)" executed successfully
2025-03-27 22:01:41,465 - root - INFO - Frontend: 2025-03-27 22:01:41,465 - app.exchange.manager - INFO - Fetching simulated balance with real trading pairs
2025-03-27 22:01:41,465 - root - INFO - Frontend: 2025-03-27 22:01:41,465 - app.exchange.manager - INFO - Fetching real markets from Binance mainnet
2025-03-27 22:01:41,526 - root - INFO - Frontend: 2025-03-27 22:01:41,526 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:01:41,526 - root - INFO - Frontend: 2025-03-27 22:01:41,526 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:01:41,527 - root - INFO - Frontend: 2025-03-27 22:01:41,527 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:01:41,527 - root - INFO - Frontend: 2025-03-27 22:01:41,527 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:01:41.527108", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:01:41,527 - root - INFO - Frontend: 2025-03-27 22:01:41,527 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:01:41,527 - root - INFO - Frontend: 2025-03-27 22:01:41,527 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:01:41,829 - root - INFO - Frontend: 2025-03-27 22:01:41,829 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:01:42,484 - root - INFO - Frontend: 2025-03-27 22:01:42,484 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:01:42,799 - root - INFO - Frontend: 2025-03-27 22:01:42,799 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:01:43,097 - root - INFO - Frontend: 2025-03-27 22:01:43,097 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:01:43,425 - root - INFO - Frontend: 2025-03-27 22:01:43,425 - app.exchange.manager - INFO - Found 162 active USDC markets
2025-03-27 22:01:43,434 - root - INFO - Frontend: 2025-03-27 22:01:43,434 - app.exchange.manager - INFO - Fetched balance from binance. Total assets: 163
2025-03-27 22:01:43,434 - root - INFO - Frontend: 2025-03-27 22:01:43,434 - app.exchange.manager - INFO - Simulated exchange binance has no positions
2025-03-27 22:01:43,434 - root - INFO - Frontend: 2025-03-27 22:01:43,434 - app.core.orchestrator - INFO - Skipping signal for BTC/USDC - insufficient balance (0 USDC)
2025-03-27 22:01:43,434 - root - INFO - Frontend: 2025-03-27 22:01:43,434 - app.core.orchestrator - INFO - Skipping signal for SOL/USDC - insufficient balance (0 USDC)
2025-03-27 22:01:43,434 - root - INFO - Frontend: 2025-03-27 22:01:43,434 - app.core.orchestrator - INFO - Skipping signal for LINK/USDC - insufficient balance (0 USDC)
2025-03-27 22:01:43,434 - root - INFO - Frontend: 2025-03-27 22:01:43,434 - app.core.orchestrator - INFO - Processed signals: 0 passed filtering
2025-03-27 22:01:43,434 - root - INFO - Frontend: 2025-03-27 22:01:43,434 - app.core.orchestrator - INFO - Generated 0 trading signals
2025-03-27 22:01:43,434 - root - INFO - Frontend: 2025-03-27 22:01:43,434 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:02:41 WET)" executed successfully
2025-03-27 22:01:43,434 - root - INFO - Frontend: 2025-03-27 22:01:43,434 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:01:43,809 - root - INFO - Frontend: 2025-03-27 22:01:43,809 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:01:44,218 - root - INFO - Frontend: 2025-03-27 22:01:44,218 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:01:44,533 - root - INFO - Frontend: 2025-03-27 22:01:44,533 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:01:44,843 - root - INFO - Frontend: 2025-03-27 22:01:44,843 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:01:45,132 - root - INFO - Frontend: 2025-03-27 22:01:45,132 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:01:45,443 - root - INFO - Frontend: 2025-03-27 22:01:45,442 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:01:45,745 - root - INFO - Frontend: 2025-03-27 22:01:45,745 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:01:46,097 - root - INFO - Frontend: 2025-03-27 22:01:46,097 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:01:46,403 - root - INFO - Frontend: 2025-03-27 22:01:46,403 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:01:46,695 - root - INFO - Frontend: 2025-03-27 22:01:46,694 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:01:47,086 - root - INFO - Frontend: 2025-03-27 22:01:47,086 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:01:47,482 - root - INFO - Frontend: 2025-03-27 22:01:47,482 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:01:47,906 - root - INFO - Frontend: 2025-03-27 22:01:47,906 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:01:48,315 - root - INFO - Frontend: 2025-03-27 22:01:48,315 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:01:48,699 - root - INFO - Frontend: 2025-03-27 22:01:48,699 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:01:49,022 - root - INFO - Frontend: 2025-03-27 22:01:49,022 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:01:49,439 - root - INFO - Frontend: 2025-03-27 22:01:49,438 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:01:49,845 - root - INFO - Frontend: 2025-03-27 22:01:49,845 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:01:50,262 - root - INFO - Frontend: 2025-03-27 22:01:50,262 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:01:50,548 - root - INFO - Frontend: 2025-03-27 22:01:50,548 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:02:41 WET)" executed successfully
2025-03-27 22:01:56,528 - root - INFO - Frontend: 2025-03-27 22:01:56,528 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:01:56,528 - root - INFO - Frontend: 2025-03-27 22:01:56,528 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:01:56,530 - root - INFO - Frontend: 2025-03-27 22:01:56,530 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:01:56,530 - root - INFO - Frontend: 2025-03-27 22:01:56,530 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:01:56.530428", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:01:56,530 - root - INFO - Frontend: 2025-03-27 22:01:56,530 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:01:56,530 - root - INFO - Frontend: 2025-03-27 22:01:56,530 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:02:11,415 - root - INFO - Frontend: 2025-03-27 22:02:11,415 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:02:41 WET)" (scheduled at 2025-03-27 22:02:11.413410+00:00)
2025-03-27 22:02:11,415 - root - INFO - Frontend: 2025-03-27 22:02:11,415 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:02:41 WET)" executed successfully
2025-03-27 22:02:11,532 - root - INFO - Frontend: 2025-03-27 22:02:11,532 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:02:11,532 - root - INFO - Frontend: 2025-03-27 22:02:11,532 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:02:11,533 - root - INFO - Frontend: 2025-03-27 22:02:11,533 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:02:11,533 - root - INFO - Frontend: 2025-03-27 22:02:11,533 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:02:11.533671", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:02:11,533 - root - INFO - Frontend: 2025-03-27 22:02:11,533 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:02:11,534 - root - INFO - Frontend: 2025-03-27 22:02:11,533 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:02:26,536 - root - INFO - Frontend: 2025-03-27 22:02:26,535 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:02:26,536 - root - INFO - Frontend: 2025-03-27 22:02:26,535 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:02:26,537 - root - INFO - Frontend: 2025-03-27 22:02:26,537 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:02:26,537 - root - INFO - Frontend: 2025-03-27 22:02:26,537 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:02:26.537117", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:02:26,537 - root - INFO - Frontend: 2025-03-27 22:02:26,537 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:02:26,537 - root - INFO - Frontend: 2025-03-27 22:02:26,537 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:02:41,416 - root - INFO - Frontend: 2025-03-27 22:02:41,415 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:03:11 WET)" (scheduled at 2025-03-27 22:02:41.413410+00:00)
2025-03-27 22:02:41,416 - root - INFO - Frontend: 2025-03-27 22:02:41,416 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:03:11 WET)" executed successfully
2025-03-27 22:02:41,416 - root - INFO - Frontend: 2025-03-27 22:02:41,416 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:03:41 WET)" (scheduled at 2025-03-27 22:02:41.413493+00:00)
2025-03-27 22:02:41,416 - root - INFO - Frontend: 2025-03-27 22:02:41,416 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:02:41,416 - root - INFO - Frontend: 2025-03-27 22:02:41,416 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:02:41,416 - root - INFO - Frontend: 2025-03-27 22:02:41,416 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:02:41,417 - root - INFO - Frontend: 2025-03-27 22:02:41,416 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:03:41 WET)" (scheduled at 2025-03-27 22:02:41.413527+00:00)
2025-03-27 22:02:41,417 - root - INFO - Frontend: 2025-03-27 22:02:41,417 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 22:02:41,417 - root - INFO - Frontend: 2025-03-27 22:02:41,417 - app.core.orchestrator - INFO - Using existing market data from store
2025-03-27 22:02:41,417 - root - INFO - Frontend: 2025-03-27 22:02:41,417 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 22:02:41,424 - root - INFO - Frontend: 2025-03-27 22:02:41,424 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:02:41,424 - root - INFO - Frontend: 2025-03-27 22:02:41,424 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 22:02:41,425 - root - INFO - Frontend: 2025-03-27 22:02:41,424 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 22:02:41,427 - root - INFO - Frontend: 2025-03-27 22:02:41,426 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 22:02:41,427 - root - INFO - Frontend: 2025-03-27 22:02:41,427 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 22:02:41,427 - root - INFO - Frontend: 2025-03-27 22:02:41,427 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 22:02:41,427 - root - INFO - Frontend: 2025-03-27 22:02:41,427 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 22:02:41,428 - root - INFO - Frontend: 2025-03-27 22:02:41,428 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 1 signals
2025-03-27 22:02:41,428 - root - INFO - Frontend: 2025-03-27 22:02:41,428 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 22:02:41,429 - root - INFO - Frontend: 2025-03-27 22:02:41,429 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:02:41,429 - root - INFO - Frontend: 2025-03-27 22:02:41,429 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 22:02:41,430 - root - INFO - Frontend: 2025-03-27 22:02:41,430 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:02:41,430 - root - INFO - Frontend: 2025-03-27 22:02:41,430 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 22:02:41,430 - root - INFO - Frontend: 2025-03-27 22:02:41,430 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:02:41,430 - root - INFO - Frontend: 2025-03-27 22:02:41,430 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 22:02:41,431 - root - INFO - Frontend: 2025-03-27 22:02:41,431 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:02:41,431 - root - INFO - Frontend: 2025-03-27 22:02:41,431 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 22:02:41,431 - root - INFO - Frontend: 2025-03-27 22:02:41,431 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:02:41,431 - root - INFO - Frontend: 2025-03-27 22:02:41,431 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:02:41,431 - root - INFO - Frontend: 2025-03-27 22:02:41,431 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 22:02:41,431 - root - INFO - Frontend: 2025-03-27 22:02:41,431 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 22:02:41,432 - root - INFO - Frontend: 2025-03-27 22:02:41,432 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:02:41,432 - root - INFO - Frontend: 2025-03-27 22:02:41,432 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 22:02:41,432 - root - INFO - Frontend: 2025-03-27 22:02:41,432 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:02:41,432 - root - INFO - Frontend: 2025-03-27 22:02:41,432 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 22:02:41,433 - root - INFO - Frontend: 2025-03-27 22:02:41,433 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:02:41,433 - root - INFO - Frontend: 2025-03-27 22:02:41,433 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 22:02:41,433 - root - INFO - Frontend: 2025-03-27 22:02:41,433 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:02:41,434 - root - INFO - Frontend: 2025-03-27 22:02:41,433 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 22:02:41,435 - root - INFO - Frontend: 2025-03-27 22:02:41,434 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:02:41,435 - root - INFO - Frontend: 2025-03-27 22:02:41,435 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 22:02:41,435 - root - INFO - Frontend: 2025-03-27 22:02:41,435 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:02:41,435 - root - INFO - Frontend: 2025-03-27 22:02:41,435 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 22:02:41,436 - root - INFO - Frontend: 2025-03-27 22:02:41,436 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:02:41,436 - root - INFO - Frontend: 2025-03-27 22:02:41,436 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 22:02:41,436 - root - INFO - Frontend: 2025-03-27 22:02:41,436 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:02:41,436 - root - INFO - Frontend: 2025-03-27 22:02:41,436 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:02:41,437 - root - INFO - Frontend: 2025-03-27 22:02:41,436 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 22:02:41,437 - root - INFO - Frontend: 2025-03-27 22:02:41,436 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 22:02:41,438 - root - INFO - Frontend: 2025-03-27 22:02:41,438 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 1 signals
2025-03-27 22:02:41,438 - root - INFO - Frontend: 2025-03-27 22:02:41,438 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 22:02:41,438 - root - INFO - Frontend: 2025-03-27 22:02:41,438 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:02:41,438 - root - INFO - Frontend: 2025-03-27 22:02:41,438 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 22:02:41,440 - root - INFO - Frontend: 2025-03-27 22:02:41,439 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:02:41,440 - root - INFO - Frontend: 2025-03-27 22:02:41,440 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 22:02:41,440 - root - INFO - Frontend: 2025-03-27 22:02:41,440 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:02:41,440 - root - INFO - Frontend: 2025-03-27 22:02:41,440 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 22:02:41,441 - root - INFO - Frontend: 2025-03-27 22:02:41,441 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:02:41,441 - root - INFO - Frontend: 2025-03-27 22:02:41,441 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 22:02:41,442 - root - INFO - Frontend: 2025-03-27 22:02:41,442 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:02:41,442 - root - INFO - Frontend: 2025-03-27 22:02:41,442 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 22:02:41,444 - root - INFO - Frontend: 2025-03-27 22:02:41,443 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:02:41,444 - root - INFO - Frontend: 2025-03-27 22:02:41,444 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 22:02:41,444 - root - INFO - Frontend: 2025-03-27 22:02:41,444 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:02:41,444 - root - INFO - Frontend: 2025-03-27 22:02:41,444 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:02:41,444 - root - INFO - Frontend: 2025-03-27 22:02:41,444 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 22:02:41,444 - root - INFO - Frontend: 2025-03-27 22:02:41,444 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 22:02:41,445 - root - INFO - Frontend: 2025-03-27 22:02:41,445 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:02:41,445 - root - INFO - Frontend: 2025-03-27 22:02:41,445 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 22:02:41,445 - root - INFO - Frontend: 2025-03-27 22:02:41,445 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:02:41,445 - root - INFO - Frontend: 2025-03-27 22:02:41,445 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 22:02:41,446 - root - INFO - Frontend: 2025-03-27 22:02:41,446 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:02:41,446 - root - INFO - Frontend: 2025-03-27 22:02:41,446 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 22:02:41,446 - root - INFO - Frontend: 2025-03-27 22:02:41,446 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:02:41,446 - root - INFO - Frontend: 2025-03-27 22:02:41,446 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 22:02:41,447 - root - INFO - Frontend: 2025-03-27 22:02:41,447 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:02:41,447 - root - INFO - Frontend: 2025-03-27 22:02:41,447 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 22:02:41,447 - root - INFO - Frontend: 2025-03-27 22:02:41,447 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:02:41,447 - root - INFO - Frontend: 2025-03-27 22:02:41,447 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 22:02:41,448 - root - INFO - Frontend: 2025-03-27 22:02:41,448 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:02:41,448 - root - INFO - Frontend: 2025-03-27 22:02:41,448 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 22:02:41,448 - root - INFO - Frontend: 2025-03-27 22:02:41,448 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:02:41,448 - root - INFO - Frontend: 2025-03-27 22:02:41,448 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:02:41,448 - root - INFO - Frontend: 2025-03-27 22:02:41,448 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 22:02:41,448 - root - INFO - Frontend: 2025-03-27 22:02:41,448 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 22:02:41,449 - root - INFO - Frontend: 2025-03-27 22:02:41,449 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 22:02:41,449 - root - INFO - Frontend: 2025-03-27 22:02:41,449 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 22:02:41,449 - root - INFO - Frontend: 2025-03-27 22:02:41,449 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 22:02:41,449 - root - INFO - Frontend: 2025-03-27 22:02:41,449 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 22:02:41,450 - root - INFO - Frontend: 2025-03-27 22:02:41,450 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:02:41,450 - root - INFO - Frontend: 2025-03-27 22:02:41,450 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 22:02:41,450 - root - INFO - Frontend: 2025-03-27 22:02:41,450 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:02:41,451 - root - INFO - Frontend: 2025-03-27 22:02:41,450 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 22:02:41,452 - root - INFO - Frontend: 2025-03-27 22:02:41,451 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:02:41,452 - root - INFO - Frontend: 2025-03-27 22:02:41,452 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 22:02:41,452 - root - INFO - Frontend: 2025-03-27 22:02:41,452 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:02:41,452 - root - INFO - Frontend: 2025-03-27 22:02:41,452 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 22:02:41,453 - root - INFO - Frontend: 2025-03-27 22:02:41,453 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:02:41,453 - root - INFO - Frontend: 2025-03-27 22:02:41,453 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 22:02:41,453 - root - INFO - Frontend: 2025-03-27 22:02:41,453 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:02:41,453 - root - INFO - Frontend: 2025-03-27 22:02:41,453 - app.core.orchestrator - INFO - Received 4 signals from strategy module
2025-03-27 22:02:41,453 - root - INFO - Frontend: 2025-03-27 22:02:41,453 - app.core.orchestrator - INFO - Processing 4 trading signals
2025-03-27 22:02:41,453 - root - INFO - Frontend: 2025-03-27 22:02:41,453 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:03:41 WET)" (scheduled at 2025-03-27 22:02:41.413555+00:00)
2025-03-27 22:02:41,453 - root - INFO - Frontend: 2025-03-27 22:02:41,453 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:03:41 WET)" executed successfully
2025-03-27 22:02:41,453 - root - INFO - Frontend: 2025-03-27 22:02:41,453 - app.exchange.manager - INFO - Fetching simulated balance with real trading pairs
2025-03-27 22:02:41,453 - root - INFO - Frontend: 2025-03-27 22:02:41,453 - app.exchange.manager - INFO - Fetching real markets from Binance mainnet
2025-03-27 22:02:41,537 - root - INFO - Frontend: 2025-03-27 22:02:41,537 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:02:41,538 - root - INFO - Frontend: 2025-03-27 22:02:41,537 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:02:41,539 - root - INFO - Frontend: 2025-03-27 22:02:41,539 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:02:41,539 - root - INFO - Frontend: 2025-03-27 22:02:41,539 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:02:41.539661", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:02:41,540 - root - INFO - Frontend: 2025-03-27 22:02:41,539 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:02:41,540 - root - INFO - Frontend: 2025-03-27 22:02:41,539 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:02:41,857 - root - INFO - Frontend: 2025-03-27 22:02:41,857 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:02:42,206 - root - INFO - Frontend: 2025-03-27 22:02:42,206 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:02:42,521 - root - INFO - Frontend: 2025-03-27 22:02:42,521 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:02:42,878 - root - INFO - Frontend: 2025-03-27 22:02:42,878 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:02:43,279 - root - INFO - Frontend: 2025-03-27 22:02:43,279 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:02:43,359 - root - INFO - Frontend: 2025-03-27 22:02:43,359 - app.exchange.manager - INFO - Found 162 active USDC markets
2025-03-27 22:02:43,367 - root - INFO - Frontend: 2025-03-27 22:02:43,367 - app.exchange.manager - INFO - Fetched balance from binance. Total assets: 163
2025-03-27 22:02:43,368 - root - INFO - Frontend: 2025-03-27 22:02:43,367 - app.exchange.manager - INFO - Simulated exchange binance has no positions
2025-03-27 22:02:43,368 - root - INFO - Frontend: 2025-03-27 22:02:43,367 - app.core.orchestrator - INFO - Skipping signal for BTC/USDC - insufficient balance (0 USDC)
2025-03-27 22:02:43,368 - root - INFO - Frontend: 2025-03-27 22:02:43,368 - app.core.orchestrator - INFO - Skipping signal for BTC/USDC - insufficient balance (0 USDC)
2025-03-27 22:02:43,368 - root - INFO - Frontend: 2025-03-27 22:02:43,368 - app.core.orchestrator - INFO - Skipping signal for SOL/USDC - insufficient balance (0 USDC)
2025-03-27 22:02:43,368 - root - INFO - Frontend: 2025-03-27 22:02:43,368 - app.core.orchestrator - INFO - Skipping signal for LINK/USDC - insufficient balance (0 USDC)
2025-03-27 22:02:43,368 - root - INFO - Frontend: 2025-03-27 22:02:43,368 - app.core.orchestrator - INFO - Processed signals: 0 passed filtering
2025-03-27 22:02:43,368 - root - INFO - Frontend: 2025-03-27 22:02:43,368 - app.core.orchestrator - INFO - Generated 0 trading signals
2025-03-27 22:02:43,368 - root - INFO - Frontend: 2025-03-27 22:02:43,368 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:03:41 WET)" executed successfully
2025-03-27 22:02:43,699 - root - INFO - Frontend: 2025-03-27 22:02:43,698 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:02:44,267 - root - INFO - Frontend: 2025-03-27 22:02:44,267 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:02:44,547 - root - INFO - Frontend: 2025-03-27 22:02:44,547 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:02:44,851 - root - INFO - Frontend: 2025-03-27 22:02:44,851 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:02:45,150 - root - INFO - Frontend: 2025-03-27 22:02:45,150 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:02:45,464 - root - INFO - Frontend: 2025-03-27 22:02:45,464 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:02:45,766 - root - INFO - Frontend: 2025-03-27 22:02:45,766 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:02:46,155 - root - INFO - Frontend: 2025-03-27 22:02:46,155 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:02:46,465 - root - INFO - Frontend: 2025-03-27 22:02:46,465 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:02:46,863 - root - INFO - Frontend: 2025-03-27 22:02:46,863 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:02:47,167 - root - INFO - Frontend: 2025-03-27 22:02:47,166 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:02:47,473 - root - INFO - Frontend: 2025-03-27 22:02:47,473 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:02:47,782 - root - INFO - Frontend: 2025-03-27 22:02:47,782 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:02:48,100 - root - INFO - Frontend: 2025-03-27 22:02:48,100 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:02:48,386 - root - INFO - Frontend: 2025-03-27 22:02:48,386 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:02:48,705 - root - INFO - Frontend: 2025-03-27 22:02:48,704 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:02:49,018 - root - INFO - Frontend: 2025-03-27 22:02:49,018 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:02:49,331 - root - INFO - Frontend: 2025-03-27 22:02:49,331 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:02:50,402 - root - INFO - Frontend: 2025-03-27 22:02:50,402 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:02:50,694 - root - INFO - Frontend: 2025-03-27 22:02:50,693 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:03:41 WET)" executed successfully
2025-03-27 22:02:56,541 - root - INFO - Frontend: 2025-03-27 22:02:56,541 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:02:56,542 - root - INFO - Frontend: 2025-03-27 22:02:56,541 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:02:56,543 - root - INFO - Frontend: 2025-03-27 22:02:56,543 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:02:56,543 - root - INFO - Frontend: 2025-03-27 22:02:56,543 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:02:56.543689", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:02:56,543 - root - INFO - Frontend: 2025-03-27 22:02:56,543 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:02:56,543 - root - INFO - Frontend: 2025-03-27 22:02:56,543 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:03:10,264 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 22:03:10,266 - root - INFO - Frontend: 2025-03-27 22:03:10,266 - __main__ - INFO - WebSocket client disconnected
2025-03-27 22:03:10,267 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 22:03:10,366 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 22:03:10,366 - root - INFO - Frontend: 2025-03-27 22:03:10,366 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 22:03:10,366 - root - INFO - Frontend: 2025-03-27 22:03:10,366 - app.core.orchestrator - INFO - Shutting down scheduler
2025-03-27 22:03:10,366 - root - INFO - Frontend: 2025-03-27 22:03:10,366 - app.core.orchestrator - INFO - Scheduler shut down
2025-03-27 22:03:10,366 - root - INFO - Frontend: 2025-03-27 22:03:10,366 - app.core.orchestrator - INFO - Trading bot stopped successfully
2025-03-27 22:03:10,367 - root - INFO - Frontend: 2025-03-27 22:03:10,367 - app.utils.notification_system - INFO - [NOTICE] SYSTEM - Trading Bot Stopped: Trading bot has been stopped after running for 0.1 hours
2025-03-27 22:03:10,367 - root - INFO - Frontend: 2025-03-27 22:03:10,367 - app.utils.notification_system - INFO - Additional data: {
2025-03-27 22:03:10,367 - root - INFO - Frontend: "run_duration_hours": "0.1",
2025-03-27 22:03:10,367 - root - INFO - Frontend: "trades_executed": 0,
2025-03-27 22:03:10,367 - root - INFO - Frontend: "profit_loss": "$0.00"
2025-03-27 22:03:10,367 - root - INFO - Frontend: }
2025-03-27 22:03:10,367 - root - INFO - Frontend: 2025-03-27 22:03:10,367 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-03-27 22:03:10,367 - root - INFO - Frontend: INFO:     Application shutdown complete.
2025-03-27 22:03:10,367 - root - INFO - Frontend: INFO:     Finished server process [81881]
2025-03-27 22:03:10,472 - root - INFO - Frontend: Exception ignored in: <module 'threading' from '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py'>
2025-03-27 22:03:10,472 - root - INFO - Frontend: Traceback (most recent call last):
2025-03-27 22:03:10,472 - root - INFO - Frontend: File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py", line 1448, in _shutdown
2025-03-27 22:03:10,472 - root - INFO - Frontend: lock.acquire()
2025-03-27 22:03:10,473 - root - INFO - Frontend: KeyboardInterrupt:
2025-03-27 22:03:10,701 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 22:03:10,702 - root - INFO - Attempting to restart frontend...
2025-03-27 22:03:10,703 - root - INFO - Starting frontend server...
2025-03-27 22:03:10,707 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:03:39 WET)" was missed by 0:00:01.183758
2025-03-27 22:03:10,712 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 22:03:10,715 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 22:03:10,807 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 22:03:10,807 - root - INFO - Frontend: Dependencies already installed
2025-03-27 22:03:10,807 - root - INFO - Frontend: Building React app...
2025-03-27 22:03:10,826 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:04:09 WET)" was missed by 0:00:01.303304
2025-03-27 22:03:10,827 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:04:09 WET)" was missed by 0:00:01.303407
2025-03-27 22:03:10,827 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:04:09 WET)" was missed by 0:00:01.303423
2025-03-27 22:03:10,827 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator._ensure_position_monitoring (trigger: interval[0:05:00], next run at: 2025-03-27 22:08:09 WET)" was missed by 0:00:01.303432
2025-03-27 22:03:29,850 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 22:03:29,850 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 22:03:29,850 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 22:03:29,850 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 22:03:29,850 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 22:03:29,850 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 22:03:29,850 - root - INFO - Starting trading bot in simulation mode with components: ['bot', 'api', 'frontend']
2025-03-27 22:03:29,850 - root - INFO - Local IP: 192.168.1.134
2025-03-27 22:03:29,850 - root - INFO - API will be available at: http://192.168.1.134:8080
2025-03-27 22:03:29,850 - root - INFO - Dashboard will be available at: http://192.168.1.134:3001
2025-03-27 22:03:29,851 - root - INFO - Starting trading bot with components: ['bot', 'api', 'frontend'] in mode: simulation
2025-03-27 22:03:29,851 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 22:03:29,851 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: simulation)
2025-03-27 22:03:29,856 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 22:03:29,856 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 22:03:29,856 - root - INFO - Exchange manager initialized in simulation mode
2025-03-27 22:03:29,856 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 22:03:29,856 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 22:03:29,856 - root - INFO - Created shared orchestrator instance
2025-03-27 22:03:29,856 - root - INFO - Starting trading bot in simulation mode
2025-03-27 22:03:29,856 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 22:03:29,856 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 22:03:29,856 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 22:03:29,871 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 22:03:29,924 - app.database.manager - INFO - Database connection successful
2025-03-27 22:03:29,924 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 22:03:29,924 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 22:03:29,924 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 22:03:29,924 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 22:03:29,924 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 22:03:29,924 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 22:03:29,924 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 22:03:29,924 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 22:03:29,925 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 22:03:29,925 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 22:03:29,925 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 22:03:29,925 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 22:03:29,925 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 22:03:29,925 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 22:03:29,925 - app.core.orchestrator - INFO - ML module initialized
2025-03-27 22:03:29,925 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 22:03:29,925 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 22:03:29,926 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 22:03:29,926 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 22:03:29,926 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 22:03:29,926 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 22:03:29,928 - app.database.manager - INFO - Database tables initialized
2025-03-27 22:03:29,928 - app.database.manager - INFO - Database connection established
2025-03-27 22:03:29,928 - app.core.orchestrator - INFO - Loaded 46 balance history records
2025-03-27 22:03:29,929 - app.core.orchestrator - INFO - Loaded 30 PnL history records
2025-03-27 22:03:29,929 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 22:03:29,929 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 22:03:29,929 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 22:03:29,929 - app.core.orchestrator - INFO - Scheduling periodic jobs...
2025-03-27 22:03:29,929 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:03:29,929 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:03:29,929 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:03:29,929 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:03:29,929 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:03:29,929 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:03:29,929 - app.core.orchestrator - INFO - All periodic jobs scheduled.
2025-03-27 22:03:29,929 - app.core.orchestrator - INFO - Jobs added to scheduler configuration.
2025-03-27 22:03:29,930 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_heartbeat" to job store "default"
2025-03-27 22:03:29,930 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.collect_market_data" to job store "default"
2025-03-27 22:03:29,930 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.generate_signals" to job store "default"
2025-03-27 22:03:29,930 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_position_prices" to job store "default"
2025-03-27 22:03:29,930 - apscheduler.scheduler - INFO - Added job "BotOrchestrator._ensure_position_monitoring" to job store "default"
2025-03-27 22:03:29,930 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_historical_data" to job store "default"
2025-03-27 22:03:29,930 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 22:03:29,930 - app.core.orchestrator - INFO - AsyncIOScheduler started.
2025-03-27 22:03:29,981 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 22:03:29,981 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 22:03:29,981 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 22:03:29,981 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 22:03:29,981 - root - INFO - Bot initialized and started via orchestrator
2025-03-27 22:03:29,981 - root - INFO - Starting API server
2025-03-27 22:03:29,984 - app.api.server - INFO - API server initialized
2025-03-27 22:03:29,986 - app.api.server - INFO - Starting API server on http://192.168.1.134:8080 ...
2025-03-27 22:03:29,986 - app.api.server - INFO - API server available at: http://192.168.1.134:8080
2025-03-27 22:03:29,986 - app.api.server - INFO - API can be accessed from any device on the network using the above URL
2025-03-27 22:03:29,987 - root - INFO - Starting frontend server
2025-03-27 22:03:29,987 - root - INFO - Starting frontend server...
2025-03-27 22:03:30,034 - root - INFO - Database connection: Success
2025-03-27 22:03:30,034 - root - INFO - Redis connection: Success
2025-03-27 22:03:30,034 - root - INFO - Logging is configured and working
2025-03-27 22:03:30,035 - root - INFO - Trading bot is running with components: Trading Bot, API Server, Frontend Dashboard
2025-03-27 22:03:30,056 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 22:03:30,057 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 22:03:30,092 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 22:03:30,092 - root - INFO - Frontend: Dependencies already installed
2025-03-27 22:03:30,092 - root - INFO - Frontend: Building React app...
2025-03-27 22:03:30,158 - root - INFO - Frontend: 
2025-03-27 22:03:30,158 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 22:03:30,158 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 22:03:30,158 - root - INFO - Frontend: 
2025-03-27 22:03:31,075 - root - INFO - Frontend: Creating an optimized production build...
2025-03-27 22:04:00,075 - root - INFO - Frontend: Compiled with warnings.
2025-03-27 22:04:00,077 - root - INFO - Frontend: 
2025-03-27 22:04:00,077 - root - INFO - Frontend: TS7006: Parameter 'pair' implicitly has an 'any' type.
2025-03-27 22:04:00,077 - root - INFO - Frontend: 229 |               {active_pairs.length > 0 ? (
2025-03-27 22:04:00,077 - root - INFO - Frontend: 230 |                 <Stack direction="row" spacing={1} flexWrap="wrap">
2025-03-27 22:04:00,077 - root - INFO - Frontend: > 231 |                   {active_pairs.map((pair) => (
2025-03-27 22:04:00,077 - root - INFO - Frontend: |                                      ^^^^
2025-03-27 22:04:00,077 - root - INFO - Frontend: 232 |                     <Chip key={pair} label={pair} variant="outlined" size="small" sx={{ mb: 1 }} />
2025-03-27 22:04:00,077 - root - INFO - Frontend: 233 |                   ))}
2025-03-27 22:04:00,077 - root - INFO - Frontend: 234 |                 </Stack>
2025-03-27 22:04:00,077 - root - INFO - Frontend: 
2025-03-27 22:04:00,077 - root - INFO - Frontend: Search for the keywords to learn more about each warning.
2025-03-27 22:04:00,078 - root - INFO - Frontend: To ignore, add // eslint-disable-next-line to the line before.
2025-03-27 22:04:00,078 - root - INFO - Frontend: 
2025-03-27 22:04:00,078 - root - INFO - Frontend: File sizes after gzip:
2025-03-27 22:04:00,078 - root - INFO - Frontend: 
2025-03-27 22:04:00,179 - root - INFO - Frontend: 1.44 MB  build/static/js/main.2abb7c74.js
2025-03-27 22:04:00,179 - root - INFO - Frontend: 
2025-03-27 22:04:00,179 - root - INFO - Frontend: The bundle size is significantly larger than recommended.
2025-03-27 22:04:00,179 - root - INFO - Frontend: Consider reducing it with code splitting: https://goo.gl/9VhYWB
2025-03-27 22:04:00,179 - root - INFO - Frontend: You can also analyze the project dependencies: https://goo.gl/LeUzfb
2025-03-27 22:04:00,179 - root - INFO - Frontend: 
2025-03-27 22:04:00,180 - root - INFO - Frontend: The project was built assuming it is hosted at /.
2025-03-27 22:04:00,180 - root - INFO - Frontend: You can control this with the homepage field in your package.json.
2025-03-27 22:04:00,180 - root - INFO - Frontend: 
2025-03-27 22:04:00,180 - root - INFO - Frontend: The build folder is ready to be deployed.
2025-03-27 22:04:00,180 - root - INFO - Frontend: You may serve it with a static server:
2025-03-27 22:04:00,180 - root - INFO - Frontend: 
2025-03-27 22:04:00,180 - root - INFO - Frontend: npm install -g serve
2025-03-27 22:04:00,180 - root - INFO - Frontend: serve -s build
2025-03-27 22:04:00,180 - root - INFO - Frontend: 
2025-03-27 22:04:00,180 - root - INFO - Frontend: Find out more about deployment here:
2025-03-27 22:04:00,180 - root - INFO - Frontend: 
2025-03-27 22:04:00,180 - root - INFO - Frontend: https://cra.link/deployment
2025-03-27 22:04:00,180 - root - INFO - Frontend: 
2025-03-27 22:04:00,262 - root - INFO - Frontend: React app built successfully
2025-03-27 22:04:00,263 - root - INFO - Frontend: Starting frontend server...
2025-03-27 22:04:00,337 - root - INFO - Frontend: 2025-03-27 22:04:00,337 - __main__ - INFO - Current file: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/server.py
2025-03-27 22:04:00,337 - root - INFO - Frontend: 2025-03-27 22:04:00,337 - __main__ - INFO - Current directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 22:04:00,337 - root - INFO - Frontend: 2025-03-27 22:04:00,337 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML to sys.path
2025-03-27 22:04:00,337 - root - INFO - Frontend: 2025-03-27 22:04:00,337 - __main__ - INFO - Added /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app to sys.path
2025-03-27 22:04:00,337 - root - INFO - Frontend: 2025-03-27 22:04:00,337 - __main__ - INFO - Added /Users/carloslarramba/Documents to sys.path
2025-03-27 22:04:00,337 - root - INFO - Frontend: 2025-03-27 22:04:00,337 - __main__ - INFO - Attempting to import using absolute imports...
2025-03-27 22:04:04,596 - root - INFO - Frontend: 2025-03-27 22:04:04,596 - __main__ - INFO - Successfully imported using absolute imports
2025-03-27 22:04:04,710 - root - INFO - Frontend: 2025-03-27 22:04:04,710 - __main__ - INFO - Mounted static files directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend/react-app/build/static
2025-03-27 22:04:04,712 - root - INFO - Frontend: 2025-03-27 22:04:04,712 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 22:04:04,712 - root - INFO - Frontend: 2025-03-27 22:04:04,712 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 22:04:04,712 - root - INFO - Frontend: 2025-03-27 22:04:04,712 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 22:04:04,712 - root - INFO - Frontend: 2025-03-27 22:04:04,712 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 22:04:04,712 - root - INFO - Frontend: 2025-03-27 22:04:04,712 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 22:04:04,712 - root - INFO - Frontend: 2025-03-27 22:04:04,712 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 22:04:04,823 - root - INFO - Frontend: INFO:     Started server process [82497]
2025-03-27 22:04:04,823 - root - INFO - Frontend: INFO:     Waiting for application startup.
2025-03-27 22:04:04,824 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.config.settings - INFO - Model save path set to: ./models
2025-03-27 22:04:04,824 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.config.settings - INFO - Using default timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 22:04:04,824 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.config.settings - INFO - Binance config initialized from environment variables
2025-03-27 22:04:04,824 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.config.settings - INFO - Crypto.com config initialized from environment variables
2025-03-27 22:04:04,824 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.config.settings - INFO - Loaded Binance credentials: API Key: Found, Secret Key: Found
2025-03-27 22:04:04,824 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.config.settings - INFO - Database URL from environment: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 22:04:04,824 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.utils.notification_system - INFO - Notification system initialized with channels: console
2025-03-27 22:04:04,824 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.core.orchestrator - INFO - Orchestrator initialized in simulation mode
2025-03-27 22:04:04,824 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - __main__ - INFO - Bot initialized
2025-03-27 22:04:04,825 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.core.orchestrator - INFO - Starting trading bot in simulation mode
2025-03-27 22:04:04,825 - root - INFO - Frontend: 2025-03-27 22:04:04,824 - app.core.orchestrator - INFO - Captured main event loop.
2025-03-27 22:04:04,825 - root - INFO - Frontend: 2025-03-27 22:04:04,825 - app.exchange.binance_direct - INFO - Initialized BinanceDirectAPI in sandbox mode
2025-03-27 22:04:04,825 - root - INFO - Frontend: 2025-03-27 22:04:04,825 - app.exchange.manager - INFO - Exchange manager initialized (sandbox: True)
2025-03-27 22:04:04,829 - root - INFO - Frontend: 2025-03-27 22:04:04,829 - app.exchange.manager - INFO - Exchange binance initialized with USDC as quote currency
2025-03-27 22:04:04,829 - root - INFO - Frontend: 2025-03-27 22:04:04,829 - app.exchange.manager - INFO - Initialized Binance exchange in simulation mode with USDC as quote currency
2025-03-27 22:04:04,829 - root - INFO - Frontend: 2025-03-27 22:04:04,829 - app.exchange.manager - INFO - Using simulated exchange binance, skipping market load.
2025-03-27 22:04:04,829 - root - INFO - Frontend: 2025-03-27 22:04:04,829 - app.exchange.manager - INFO - All exchange markets loaded successfully (or simulated).
2025-03-27 22:04:04,829 - root - INFO - Frontend: 2025-03-27 22:04:04,829 - app.core.orchestrator - INFO - Exchange manager initialized
2025-03-27 22:04:04,829 - root - INFO - Frontend: 2025-03-27 22:04:04,829 - app.database.manager - INFO - Database manager initialized with path: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 22:04:04,829 - root - INFO - Frontend: 2025-03-27 22:04:04,829 - app.database.manager - INFO - Initializing database with postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 22:04:04,829 - root - INFO - Frontend: 2025-03-27 22:04:04,829 - app.database.manager - INFO - Using existing PostgreSQL URL with asyncpg driver: postgresql+asyncpg://carloslarramba@localhost:5432/trading_bot
2025-03-27 22:04:04,841 - root - INFO - Frontend: 2025-03-27 22:04:04,841 - app.database.manager - INFO - Using asyncpg driver for PostgreSQL
2025-03-27 22:04:04,868 - root - INFO - Frontend: 2025-03-27 22:04:04,868 - app.database.manager - INFO - Database connection successful
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.database.manager - INFO - Using existing database structure (tables not created)
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.core.orchestrator - INFO - Database manager initialized
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.utils.balance_manager - INFO - Balance manager initialized in simulation mode
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.utils.balance_manager - INFO - Initialized simulated balance: 5000.0 USDC
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.core.orchestrator - INFO - Balance manager initialized and ready
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.ta.indicators - INFO - Technical Analysis module initialized (GPU: False, TA-Lib: True)
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.core.orchestrator - INFO - Technical analysis module initialized
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.strategies.risk_manager - INFO - Advanced Risk Manager initialized
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.strategies.timeframe_selector - INFO - Initialized DynamicTimeframeSelector with timeframes: ['1m', '5m', '15m', '1h']
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.strategies.strategy - INFO - Initialized MA_Crossover_9_21 strategy
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.strategies.strategy - INFO - Initialized RSI_14 strategy
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.strategies.strategy - INFO - Initialized ML_Strategy strategy with confidence threshold 0.7
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.strategies.strategy - INFO - Strategy module initialized with 3 strategies
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.core.orchestrator - INFO - Strategy module initialized
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.core.orchestrator - INFO - ML module initialized
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.utils.reporting - INFO - Reporting manager initialized
2025-03-27 22:04:04,869 - root - INFO - Frontend: 2025-03-27 22:04:04,869 - app.core.orchestrator - INFO - Reporting module initialized
2025-03-27 22:04:04,871 - root - INFO - Frontend: 2025-03-27 22:04:04,871 - app.core.orchestrator - INFO - Scheduler initialized
2025-03-27 22:04:04,871 - root - INFO - Frontend: 2025-03-27 22:04:04,871 - app.core.orchestrator - INFO - Market data store initialized
2025-03-27 22:04:04,871 - root - INFO - Frontend: 2025-03-27 22:04:04,871 - app.core.orchestrator - INFO - Trading pair selector initialized
2025-03-27 22:04:04,871 - root - INFO - Frontend: 2025-03-27 22:04:04,871 - app.core.orchestrator - INFO - All modules successfully initialized
2025-03-27 22:04:04,872 - root - INFO - Frontend: 2025-03-27 22:04:04,872 - app.database.manager - INFO - Database tables initialized
2025-03-27 22:04:04,872 - root - INFO - Frontend: 2025-03-27 22:04:04,872 - app.database.manager - INFO - Database connection established
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - app.core.orchestrator - INFO - Loaded 0 balance history records
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - app.core.orchestrator - INFO - Loaded 0 PnL history records
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - app.core.orchestrator - INFO - Loaded 0 trade history records
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - app.core.orchestrator - INFO - Scheduling periodic jobs...
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - apscheduler.scheduler - INFO - Adding job tentatively -- it will be properly scheduled when the scheduler starts
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - app.core.orchestrator - INFO - All periodic jobs scheduled.
2025-03-27 22:04:04,873 - root - INFO - Frontend: 2025-03-27 22:04:04,873 - app.core.orchestrator - INFO - Jobs added to scheduler configuration.
2025-03-27 22:04:04,874 - root - INFO - Frontend: 2025-03-27 22:04:04,874 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_heartbeat" to job store "default"
2025-03-27 22:04:04,874 - root - INFO - Frontend: 2025-03-27 22:04:04,874 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.collect_market_data" to job store "default"
2025-03-27 22:04:04,874 - root - INFO - Frontend: 2025-03-27 22:04:04,874 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.generate_signals" to job store "default"
2025-03-27 22:04:04,874 - root - INFO - Frontend: 2025-03-27 22:04:04,874 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_position_prices" to job store "default"
2025-03-27 22:04:04,874 - root - INFO - Frontend: 2025-03-27 22:04:04,874 - apscheduler.scheduler - INFO - Added job "BotOrchestrator._ensure_position_monitoring" to job store "default"
2025-03-27 22:04:04,874 - root - INFO - Frontend: 2025-03-27 22:04:04,874 - apscheduler.scheduler - INFO - Added job "BotOrchestrator.update_historical_data" to job store "default"
2025-03-27 22:04:04,874 - root - INFO - Frontend: 2025-03-27 22:04:04,874 - apscheduler.scheduler - INFO - Scheduler started
2025-03-27 22:04:04,874 - root - INFO - Frontend: 2025-03-27 22:04:04,874 - app.core.orchestrator - INFO - AsyncIOScheduler started.
2025-03-27 22:04:04,925 - root - INFO - Frontend: 2025-03-27 22:04:04,925 - app.core.orchestrator - INFO - Selecting trading pairs based on 24h volume...
2025-03-27 22:04:04,925 - root - INFO - Frontend: 2025-03-27 22:04:04,925 - app.core.orchestrator - INFO - Simulation mode: Using fixed set of 5 trading pairs
2025-03-27 22:04:04,925 - root - INFO - Frontend: 2025-03-27 22:04:04,925 - app.core.orchestrator - INFO - Selected 5 trading pairs for active use: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 22:04:04,925 - root - INFO - Frontend: 2025-03-27 22:04:04,925 - app.core.orchestrator - INFO - Initial trading pairs set: ['BTC/USDC', 'ETH/USDC', 'SOL/USDC', 'XRP/USDC', 'LINK/USDC']
2025-03-27 22:04:04,925 - root - INFO - Frontend: 2025-03-27 22:04:04,925 - __main__ - INFO - Bot started in simulation mode
2025-03-27 22:04:04,925 - root - INFO - Frontend: INFO:     Application startup complete.
2025-03-27 22:04:04,925 - root - INFO - Frontend: INFO:     Uvicorn running on http://0.0.0.0:3001 (Press CTRL+C to quit)
2025-03-27 22:04:06,015 - root - INFO - Frontend: Starting FastAPI server on port 3001
2025-03-27 22:04:06,016 - root - INFO - Frontend: INFO:     192.168.1.134:52482 - "GET / HTTP/1.1" 200 OK
2025-03-27 22:04:06,019 - root - INFO - Frontend: INFO:     192.168.1.134:52483 - "GET /manifest.json HTTP/1.1" 200 OK
2025-03-27 22:04:06,022 - root - INFO - Frontend: INFO:     192.168.1.134:52484 - "GET /static/js/main.2abb7c74.js HTTP/1.1" 200 OK
2025-03-27 22:04:06,154 - root - INFO - Frontend: INFO:     ('192.168.1.134', 52485) - "WebSocket /ws" [accepted]
2025-03-27 22:04:06,155 - root - INFO - Frontend: 2025-03-27 22:04:06,154 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 22:04:06,155 - root - INFO - Frontend: 2025-03-27 22:04:06,155 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:04:06,155 - root - INFO - Frontend: 2025-03-27 22:04:06,155 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:04:06,155 - root - INFO - Frontend: INFO:     connection open
2025-03-27 22:04:06,156 - root - INFO - Frontend: 2025-03-27 22:04:06,156 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:04:06,156 - root - INFO - Frontend: 2025-03-27 22:04:06,156 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:04:06.156307", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:04:06,156 - root - INFO - Frontend: 2025-03-27 22:04:06,156 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:04:06,156 - root - INFO - Frontend: 2025-03-27 22:04:06,156 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:04:06,156 - root - INFO - Frontend: 2025-03-27 22:04:06,156 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:04:06.156307", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"], "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 22:04:19,927 - root - INFO - Frontend: 2025-03-27 22:04:19,926 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:04:19,927 - root - INFO - Frontend: 2025-03-27 22:04:19,927 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:04:19,928 - root - INFO - Frontend: 2025-03-27 22:04:19,928 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:04:19,928 - root - INFO - Frontend: 2025-03-27 22:04:19,928 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:04:19.928111", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:04:19,928 - root - INFO - Frontend: 2025-03-27 22:04:19,928 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:04:19,928 - root - INFO - Frontend: 2025-03-27 22:04:19,928 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:04:34,875 - root - INFO - Frontend: 2025-03-27 22:04:34,875 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:05:04 WET)" (scheduled at 2025-03-27 22:04:34.873493+00:00)
2025-03-27 22:04:34,875 - root - INFO - Frontend: 2025-03-27 22:04:34,875 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:05:04 WET)" executed successfully
2025-03-27 22:04:34,930 - root - INFO - Frontend: 2025-03-27 22:04:34,929 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:04:34,930 - root - INFO - Frontend: 2025-03-27 22:04:34,929 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:04:34,931 - root - INFO - Frontend: 2025-03-27 22:04:34,930 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:04:34,931 - root - INFO - Frontend: 2025-03-27 22:04:34,931 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:04:34.931026", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:04:34,931 - root - INFO - Frontend: 2025-03-27 22:04:34,931 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:04:34,931 - root - INFO - Frontend: 2025-03-27 22:04:34,931 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:04:49,933 - root - INFO - Frontend: 2025-03-27 22:04:49,932 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:04:49,933 - root - INFO - Frontend: 2025-03-27 22:04:49,932 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:04:49,935 - root - INFO - Frontend: 2025-03-27 22:04:49,935 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:04:49,935 - root - INFO - Frontend: 2025-03-27 22:04:49,935 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:04:49.935582", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:04:49,936 - root - INFO - Frontend: 2025-03-27 22:04:49,935 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:04:49,936 - root - INFO - Frontend: 2025-03-27 22:04:49,935 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:05:04,876 - root - INFO - Frontend: 2025-03-27 22:05:04,876 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:05:34 WET)" (scheduled at 2025-03-27 22:05:04.873493+00:00)
2025-03-27 22:05:04,877 - root - INFO - Frontend: 2025-03-27 22:05:04,876 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:05:34 WET)" executed successfully
2025-03-27 22:05:04,877 - root - INFO - Frontend: 2025-03-27 22:05:04,877 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:06:04 WET)" (scheduled at 2025-03-27 22:05:04.873563+00:00)
2025-03-27 22:05:04,877 - root - INFO - Frontend: 2025-03-27 22:05:04,877 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:05:04,877 - root - INFO - Frontend: 2025-03-27 22:05:04,877 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:05:04,877 - root - INFO - Frontend: 2025-03-27 22:05:04,877 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:05:04,877 - root - INFO - Frontend: 2025-03-27 22:05:04,877 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:06:04 WET)" (scheduled at 2025-03-27 22:05:04.873595+00:00)
2025-03-27 22:05:04,878 - root - INFO - Frontend: 2025-03-27 22:05:04,878 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 22:05:04,878 - root - INFO - Frontend: 2025-03-27 22:05:04,878 - app.core.orchestrator - INFO - Market data store is empty, collecting fresh data
2025-03-27 22:05:04,878 - root - INFO - Frontend: 2025-03-27 22:05:04,878 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:05:04,878 - root - INFO - Frontend: 2025-03-27 22:05:04,878 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:05:04,878 - root - INFO - Frontend: 2025-03-27 22:05:04,878 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:05:04,878 - root - INFO - Frontend: 2025-03-27 22:05:04,878 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:06:04 WET)" (scheduled at 2025-03-27 22:05:04.873622+00:00)
2025-03-27 22:05:04,878 - root - INFO - Frontend: 2025-03-27 22:05:04,878 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:06:04 WET)" executed successfully
2025-03-27 22:05:04,938 - root - INFO - Frontend: 2025-03-27 22:05:04,937 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:05:04,938 - root - INFO - Frontend: 2025-03-27 22:05:04,938 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:05:04,938 - root - INFO - Frontend: 2025-03-27 22:05:04,938 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:05:04,939 - root - INFO - Frontend: 2025-03-27 22:05:04,938 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:05:04.938952", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:05:04,939 - root - INFO - Frontend: 2025-03-27 22:05:04,939 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:05:04,939 - root - INFO - Frontend: 2025-03-27 22:05:04,939 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:05:07,362 - root - INFO - Frontend: 2025-03-27 22:05:07,362 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:05:07,371 - root - INFO - Frontend: 2025-03-27 22:05:07,371 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:05:07,674 - root - INFO - Frontend: 2025-03-27 22:05:07,674 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:05:07,699 - root - INFO - Frontend: 2025-03-27 22:05:07,699 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:05:08,092 - root - INFO - Frontend: 2025-03-27 22:05:08,092 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:05:08,103 - root - INFO - Frontend: 2025-03-27 22:05:08,103 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:05:08,420 - root - INFO - Frontend: 2025-03-27 22:05:08,420 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:05:08,432 - root - INFO - Frontend: 2025-03-27 22:05:08,432 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:05:08,708 - root - INFO - Frontend: 2025-03-27 22:05:08,708 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:05:08,757 - root - INFO - Frontend: 2025-03-27 22:05:08,757 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:05:09,017 - root - INFO - Frontend: 2025-03-27 22:05:09,017 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:05:09,070 - root - INFO - Frontend: 2025-03-27 22:05:09,070 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:05:09,335 - root - INFO - Frontend: 2025-03-27 22:05:09,335 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:05:09,388 - root - INFO - Frontend: 2025-03-27 22:05:09,388 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:05:09,654 - root - INFO - Frontend: 2025-03-27 22:05:09,654 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:05:09,698 - root - INFO - Frontend: 2025-03-27 22:05:09,698 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:05:10,014 - root - INFO - Frontend: 2025-03-27 22:05:10,013 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:05:10,028 - root - INFO - Frontend: 2025-03-27 22:05:10,028 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:05:10,294 - root - INFO - Frontend: 2025-03-27 22:05:10,294 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:05:10,371 - root - INFO - Frontend: 2025-03-27 22:05:10,370 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:05:10,660 - root - INFO - Frontend: 2025-03-27 22:05:10,660 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:05:10,811 - root - INFO - Frontend: 2025-03-27 22:05:10,811 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:05:11,018 - root - INFO - Frontend: 2025-03-27 22:05:11,018 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:05:11,369 - root - INFO - Frontend: 2025-03-27 22:05:11,369 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:05:11,786 - root - INFO - Frontend: 2025-03-27 22:05:11,786 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:05:11,914 - root - INFO - Frontend: 2025-03-27 22:05:11,914 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:05:12,174 - root - INFO - Frontend: 2025-03-27 22:05:12,173 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:05:12,232 - root - INFO - Frontend: 2025-03-27 22:05:12,232 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:05:12,602 - root - INFO - Frontend: 2025-03-27 22:05:12,602 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:05:12,614 - root - INFO - Frontend: 2025-03-27 22:05:12,614 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:05:13,019 - root - INFO - Frontend: 2025-03-27 22:05:13,019 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:05:13,020 - root - INFO - Frontend: 2025-03-27 22:05:13,020 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:05:13,426 - root - INFO - Frontend: 2025-03-27 22:05:13,426 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:05:13,440 - root - INFO - Frontend: 2025-03-27 22:05:13,440 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:05:13,828 - root - INFO - Frontend: 2025-03-27 22:05:13,828 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:05:13,839 - root - INFO - Frontend: 2025-03-27 22:05:13,839 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:05:14,221 - root - INFO - Frontend: 2025-03-27 22:05:14,221 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:05:14,245 - root - INFO - Frontend: 2025-03-27 22:05:14,244 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:05:14,551 - root - INFO - Frontend: 2025-03-27 22:05:14,551 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:05:14,565 - root - INFO - Frontend: 2025-03-27 22:05:14,565 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:05:14,861 - root - INFO - Frontend: 2025-03-27 22:05:14,861 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:05:14,863 - root - INFO - Frontend: 2025-03-27 22:05:14,863 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:05:15,180 - root - INFO - Frontend: 2025-03-27 22:05:15,179 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:05:15,194 - root - INFO - Frontend: 2025-03-27 22:05:15,194 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:05:15,518 - root - INFO - Frontend: 2025-03-27 22:05:15,518 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:05:15,751 - root - INFO - Frontend: 2025-03-27 22:05:15,750 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:05:15,828 - root - INFO - Frontend: 2025-03-27 22:05:15,828 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:05:16,038 - root - INFO - Frontend: 2025-03-27 22:05:16,038 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:06:04 WET)" executed successfully
2025-03-27 22:05:16,144 - root - INFO - Frontend: 2025-03-27 22:05:16,144 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:05:16,432 - root - INFO - Frontend: 2025-03-27 22:05:16,431 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 22:05:16,441 - root - INFO - Frontend: 2025-03-27 22:05:16,441 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:05:16,441 - root - INFO - Frontend: 2025-03-27 22:05:16,441 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 22:05:16,442 - root - INFO - Frontend: 2025-03-27 22:05:16,441 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 22:05:16,445 - root - INFO - Frontend: 2025-03-27 22:05:16,445 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 22:05:16,445 - root - INFO - Frontend: 2025-03-27 22:05:16,445 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 22:05:16,446 - root - INFO - Frontend: 2025-03-27 22:05:16,446 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 22:05:16,446 - root - INFO - Frontend: 2025-03-27 22:05:16,446 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 22:05:16,448 - root - INFO - Frontend: 2025-03-27 22:05:16,448 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:05:16,448 - root - INFO - Frontend: 2025-03-27 22:05:16,448 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 22:05:16,449 - root - INFO - Frontend: 2025-03-27 22:05:16,449 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:05:16,449 - root - INFO - Frontend: 2025-03-27 22:05:16,449 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 22:05:16,450 - root - INFO - Frontend: 2025-03-27 22:05:16,450 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:05:16,450 - root - INFO - Frontend: 2025-03-27 22:05:16,450 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 22:05:16,451 - root - INFO - Frontend: 2025-03-27 22:05:16,451 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:05:16,451 - root - INFO - Frontend: 2025-03-27 22:05:16,451 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 22:05:16,452 - root - INFO - Frontend: 2025-03-27 22:05:16,452 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:05:16,452 - root - INFO - Frontend: 2025-03-27 22:05:16,452 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 22:05:16,453 - root - INFO - Frontend: 2025-03-27 22:05:16,453 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:05:16,453 - root - INFO - Frontend: 2025-03-27 22:05:16,453 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:05:16,453 - root - INFO - Frontend: 2025-03-27 22:05:16,453 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 22:05:16,453 - root - INFO - Frontend: 2025-03-27 22:05:16,453 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 22:05:16,454 - root - INFO - Frontend: 2025-03-27 22:05:16,454 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:05:16,454 - root - INFO - Frontend: 2025-03-27 22:05:16,454 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 22:05:16,455 - root - INFO - Frontend: 2025-03-27 22:05:16,455 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:05:16,455 - root - INFO - Frontend: 2025-03-27 22:05:16,455 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 22:05:16,456 - root - INFO - Frontend: 2025-03-27 22:05:16,456 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:05:16,456 - root - INFO - Frontend: 2025-03-27 22:05:16,456 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 22:05:16,457 - root - INFO - Frontend: 2025-03-27 22:05:16,457 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:05:16,457 - root - INFO - Frontend: 2025-03-27 22:05:16,457 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 22:05:16,458 - root - INFO - Frontend: 2025-03-27 22:05:16,458 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:05:16,458 - root - INFO - Frontend: 2025-03-27 22:05:16,458 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 22:05:16,459 - root - INFO - Frontend: 2025-03-27 22:05:16,459 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:05:16,459 - root - INFO - Frontend: 2025-03-27 22:05:16,459 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 22:05:16,460 - root - INFO - Frontend: 2025-03-27 22:05:16,460 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:05:16,460 - root - INFO - Frontend: 2025-03-27 22:05:16,460 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 22:05:16,460 - root - INFO - Frontend: 2025-03-27 22:05:16,460 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:05:16,460 - root - INFO - Frontend: 2025-03-27 22:05:16,460 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:05:16,460 - root - INFO - Frontend: 2025-03-27 22:05:16,460 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 22:05:16,461 - root - INFO - Frontend: 2025-03-27 22:05:16,460 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 22:05:16,462 - root - INFO - Frontend: 2025-03-27 22:05:16,462 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 1 signals
2025-03-27 22:05:16,462 - root - INFO - Frontend: 2025-03-27 22:05:16,462 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 22:05:16,463 - root - INFO - Frontend: 2025-03-27 22:05:16,463 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:05:16,463 - root - INFO - Frontend: 2025-03-27 22:05:16,463 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 22:05:16,464 - root - INFO - Frontend: 2025-03-27 22:05:16,463 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:05:16,464 - root - INFO - Frontend: 2025-03-27 22:05:16,464 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 22:05:16,464 - root - INFO - Frontend: 2025-03-27 22:05:16,464 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:05:16,464 - root - INFO - Frontend: 2025-03-27 22:05:16,464 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 22:05:16,465 - root - INFO - Frontend: 2025-03-27 22:05:16,465 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:05:16,465 - root - INFO - Frontend: 2025-03-27 22:05:16,465 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 22:05:16,465 - root - INFO - Frontend: 2025-03-27 22:05:16,465 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:05:16,465 - root - INFO - Frontend: 2025-03-27 22:05:16,465 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 22:05:16,466 - root - INFO - Frontend: 2025-03-27 22:05:16,466 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:05:16,466 - root - INFO - Frontend: 2025-03-27 22:05:16,466 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 22:05:16,467 - root - INFO - Frontend: 2025-03-27 22:05:16,467 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:05:16,467 - root - INFO - Frontend: 2025-03-27 22:05:16,467 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:05:16,467 - root - INFO - Frontend: 2025-03-27 22:05:16,467 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 22:05:16,467 - root - INFO - Frontend: 2025-03-27 22:05:16,467 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 22:05:16,468 - root - INFO - Frontend: 2025-03-27 22:05:16,468 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:05:16,468 - root - INFO - Frontend: 2025-03-27 22:05:16,468 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 22:05:16,468 - root - INFO - Frontend: 2025-03-27 22:05:16,468 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:05:16,468 - root - INFO - Frontend: 2025-03-27 22:05:16,468 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 22:05:16,469 - root - INFO - Frontend: 2025-03-27 22:05:16,469 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:05:16,469 - root - INFO - Frontend: 2025-03-27 22:05:16,469 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 22:05:16,470 - root - INFO - Frontend: 2025-03-27 22:05:16,470 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:05:16,470 - root - INFO - Frontend: 2025-03-27 22:05:16,470 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 22:05:16,470 - root - INFO - Frontend: 2025-03-27 22:05:16,470 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:05:16,470 - root - INFO - Frontend: 2025-03-27 22:05:16,470 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 22:05:16,471 - root - INFO - Frontend: 2025-03-27 22:05:16,471 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:05:16,471 - root - INFO - Frontend: 2025-03-27 22:05:16,471 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 22:05:16,472 - root - INFO - Frontend: 2025-03-27 22:05:16,472 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:05:16,472 - root - INFO - Frontend: 2025-03-27 22:05:16,472 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 22:05:16,472 - root - INFO - Frontend: 2025-03-27 22:05:16,472 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:05:16,472 - root - INFO - Frontend: 2025-03-27 22:05:16,472 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:05:16,472 - root - INFO - Frontend: 2025-03-27 22:05:16,472 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 22:05:16,472 - root - INFO - Frontend: 2025-03-27 22:05:16,472 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 22:05:16,473 - root - INFO - Frontend: 2025-03-27 22:05:16,473 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 22:05:16,473 - root - INFO - Frontend: 2025-03-27 22:05:16,473 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 22:05:16,474 - root - INFO - Frontend: 2025-03-27 22:05:16,474 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 22:05:16,474 - root - INFO - Frontend: 2025-03-27 22:05:16,474 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 22:05:16,474 - root - INFO - Frontend: 2025-03-27 22:05:16,474 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:05:16,474 - root - INFO - Frontend: 2025-03-27 22:05:16,474 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 22:05:16,475 - root - INFO - Frontend: 2025-03-27 22:05:16,475 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:05:16,475 - root - INFO - Frontend: 2025-03-27 22:05:16,475 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 22:05:16,476 - root - INFO - Frontend: 2025-03-27 22:05:16,476 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:05:16,476 - root - INFO - Frontend: 2025-03-27 22:05:16,476 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 22:05:16,476 - root - INFO - Frontend: 2025-03-27 22:05:16,476 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:05:16,476 - root - INFO - Frontend: 2025-03-27 22:05:16,476 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 22:05:16,477 - root - INFO - Frontend: 2025-03-27 22:05:16,477 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:05:16,477 - root - INFO - Frontend: 2025-03-27 22:05:16,477 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Received 3 signals from strategy module
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Processing 3 trading signals
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Simulation mode: Fetching portfolio data for balance check.
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Simulation balance check: Available USDC from portfolio = 10000.0
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Processed signals: 3 passed filtering
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Generated 3 trading signals
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Signal: BTC/USDC - buy at 87554.0
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Signal: SOL/USDC - buy at 139.59
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - app.core.orchestrator - INFO - Signal: LINK/USDC - buy at 15.65
2025-03-27 22:05:16,478 - root - INFO - Frontend: 2025-03-27 22:05:16,478 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:06:04 WET)" executed successfully
2025-03-27 22:05:19,941 - root - INFO - Frontend: 2025-03-27 22:05:19,940 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:05:19,942 - root - INFO - Frontend: 2025-03-27 22:05:19,941 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:05:19,943 - root - INFO - Frontend: 2025-03-27 22:05:19,942 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:05:19,943 - root - INFO - Frontend: 2025-03-27 22:05:19,943 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:05:19.943051", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:05:19,943 - root - INFO - Frontend: 2025-03-27 22:05:19,943 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:05:19,943 - root - INFO - Frontend: 2025-03-27 22:05:19,943 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:05:34,875 - root - INFO - Frontend: 2025-03-27 22:05:34,875 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:06:04 WET)" (scheduled at 2025-03-27 22:05:34.873493+00:00)
2025-03-27 22:05:34,875 - root - INFO - Frontend: 2025-03-27 22:05:34,875 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:06:04 WET)" executed successfully
2025-03-27 22:05:34,945 - root - INFO - Frontend: 2025-03-27 22:05:34,945 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:05:34,945 - root - INFO - Frontend: 2025-03-27 22:05:34,945 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:05:34,946 - root - INFO - Frontend: 2025-03-27 22:05:34,946 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:05:34,946 - root - INFO - Frontend: 2025-03-27 22:05:34,946 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:05:34.946110", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:05:34,946 - root - INFO - Frontend: 2025-03-27 22:05:34,946 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:05:34,946 - root - INFO - Frontend: 2025-03-27 22:05:34,946 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:05:49,949 - root - INFO - Frontend: 2025-03-27 22:05:49,948 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:05:49,949 - root - INFO - Frontend: 2025-03-27 22:05:49,948 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:05:49,951 - root - INFO - Frontend: 2025-03-27 22:05:49,951 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:05:49,952 - root - INFO - Frontend: 2025-03-27 22:05:49,951 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:05:49.951673", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:05:49,952 - root - INFO - Frontend: 2025-03-27 22:05:49,951 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:05:49,952 - root - INFO - Frontend: 2025-03-27 22:05:49,951 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:06:04,878 - root - INFO - Frontend: 2025-03-27 22:06:04,876 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:06:34 WET)" (scheduled at 2025-03-27 22:06:04.873493+00:00)
2025-03-27 22:06:04,880 - root - INFO - Frontend: 2025-03-27 22:06:04,877 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:06:34 WET)" executed successfully
2025-03-27 22:06:04,880 - root - INFO - Frontend: 2025-03-27 22:06:04,877 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:07:04 WET)" (scheduled at 2025-03-27 22:06:04.873563+00:00)
2025-03-27 22:06:04,880 - root - INFO - Frontend: 2025-03-27 22:06:04,877 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:06:04,880 - root - INFO - Frontend: 2025-03-27 22:06:04,877 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:06:04,880 - root - INFO - Frontend: 2025-03-27 22:06:04,877 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:06:04,880 - root - INFO - Frontend: 2025-03-27 22:06:04,878 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:07:04 WET)" (scheduled at 2025-03-27 22:06:04.873595+00:00)
2025-03-27 22:06:04,880 - root - INFO - Frontend: 2025-03-27 22:06:04,878 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 22:06:04,880 - root - INFO - Frontend: 2025-03-27 22:06:04,878 - app.core.orchestrator - INFO - Using existing market data from store
2025-03-27 22:06:04,880 - root - INFO - Frontend: 2025-03-27 22:06:04,878 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 22:06:04,886 - root - INFO - Frontend: 2025-03-27 22:06:04,886 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:06:04,887 - root - INFO - Frontend: 2025-03-27 22:06:04,886 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 22:06:04,887 - root - INFO - Frontend: 2025-03-27 22:06:04,886 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 22:06:04,889 - root - INFO - Frontend: 2025-03-27 22:06:04,889 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 22:06:04,889 - root - INFO - Frontend: 2025-03-27 22:06:04,889 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 22:06:04,890 - root - INFO - Frontend: 2025-03-27 22:06:04,890 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 22:06:04,890 - root - INFO - Frontend: 2025-03-27 22:06:04,890 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 22:06:04,892 - root - INFO - Frontend: 2025-03-27 22:06:04,891 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:06:04,892 - root - INFO - Frontend: 2025-03-27 22:06:04,891 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 22:06:04,893 - root - INFO - Frontend: 2025-03-27 22:06:04,893 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:06:04,893 - root - INFO - Frontend: 2025-03-27 22:06:04,893 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 22:06:04,895 - root - INFO - Frontend: 2025-03-27 22:06:04,894 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:06:04,895 - root - INFO - Frontend: 2025-03-27 22:06:04,895 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 22:06:04,895 - root - INFO - Frontend: 2025-03-27 22:06:04,895 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:06:04,896 - root - INFO - Frontend: 2025-03-27 22:06:04,896 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 22:06:04,897 - root - INFO - Frontend: 2025-03-27 22:06:04,897 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:06:04,897 - root - INFO - Frontend: 2025-03-27 22:06:04,897 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 22:06:04,898 - root - INFO - Frontend: 2025-03-27 22:06:04,898 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:06:04,898 - root - INFO - Frontend: 2025-03-27 22:06:04,898 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:06:04,898 - root - INFO - Frontend: 2025-03-27 22:06:04,898 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 22:06:04,898 - root - INFO - Frontend: 2025-03-27 22:06:04,898 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 22:06:04,899 - root - INFO - Frontend: 2025-03-27 22:06:04,899 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:06:04,899 - root - INFO - Frontend: 2025-03-27 22:06:04,899 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 22:06:04,900 - root - INFO - Frontend: 2025-03-27 22:06:04,900 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:06:04,900 - root - INFO - Frontend: 2025-03-27 22:06:04,900 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 22:06:04,901 - root - INFO - Frontend: 2025-03-27 22:06:04,900 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:06:04,901 - root - INFO - Frontend: 2025-03-27 22:06:04,901 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 22:06:04,901 - root - INFO - Frontend: 2025-03-27 22:06:04,901 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:06:04,901 - root - INFO - Frontend: 2025-03-27 22:06:04,901 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 22:06:04,902 - root - INFO - Frontend: 2025-03-27 22:06:04,902 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:06:04,902 - root - INFO - Frontend: 2025-03-27 22:06:04,902 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 22:06:04,903 - root - INFO - Frontend: 2025-03-27 22:06:04,903 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:06:04,903 - root - INFO - Frontend: 2025-03-27 22:06:04,903 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 22:06:04,904 - root - INFO - Frontend: 2025-03-27 22:06:04,904 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:06:04,904 - root - INFO - Frontend: 2025-03-27 22:06:04,904 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 22:06:04,904 - root - INFO - Frontend: 2025-03-27 22:06:04,904 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:06:04,904 - root - INFO - Frontend: 2025-03-27 22:06:04,904 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:06:04,904 - root - INFO - Frontend: 2025-03-27 22:06:04,904 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 22:06:04,904 - root - INFO - Frontend: 2025-03-27 22:06:04,904 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 22:06:04,905 - root - INFO - Frontend: 2025-03-27 22:06:04,905 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 1 signals
2025-03-27 22:06:04,905 - root - INFO - Frontend: 2025-03-27 22:06:04,905 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 22:06:04,906 - root - INFO - Frontend: 2025-03-27 22:06:04,906 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:06:04,906 - root - INFO - Frontend: 2025-03-27 22:06:04,906 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 22:06:04,907 - root - INFO - Frontend: 2025-03-27 22:06:04,907 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:06:04,907 - root - INFO - Frontend: 2025-03-27 22:06:04,907 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 22:06:04,907 - root - INFO - Frontend: 2025-03-27 22:06:04,907 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:06:04,907 - root - INFO - Frontend: 2025-03-27 22:06:04,907 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 22:06:04,908 - root - INFO - Frontend: 2025-03-27 22:06:04,908 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:06:04,908 - root - INFO - Frontend: 2025-03-27 22:06:04,908 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 22:06:04,909 - root - INFO - Frontend: 2025-03-27 22:06:04,909 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:06:04,909 - root - INFO - Frontend: 2025-03-27 22:06:04,909 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 22:06:04,910 - root - INFO - Frontend: 2025-03-27 22:06:04,910 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:06:04,910 - root - INFO - Frontend: 2025-03-27 22:06:04,910 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 22:06:04,910 - root - INFO - Frontend: 2025-03-27 22:06:04,910 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:06:04,910 - root - INFO - Frontend: 2025-03-27 22:06:04,910 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:06:04,910 - root - INFO - Frontend: 2025-03-27 22:06:04,910 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 22:06:04,910 - root - INFO - Frontend: 2025-03-27 22:06:04,910 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 22:06:04,911 - root - INFO - Frontend: 2025-03-27 22:06:04,911 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:06:04,911 - root - INFO - Frontend: 2025-03-27 22:06:04,911 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 22:06:04,912 - root - INFO - Frontend: 2025-03-27 22:06:04,912 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:06:04,912 - root - INFO - Frontend: 2025-03-27 22:06:04,912 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 22:06:04,912 - root - INFO - Frontend: 2025-03-27 22:06:04,912 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:06:04,913 - root - INFO - Frontend: 2025-03-27 22:06:04,912 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 22:06:04,913 - root - INFO - Frontend: 2025-03-27 22:06:04,913 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:06:04,913 - root - INFO - Frontend: 2025-03-27 22:06:04,913 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 22:06:04,914 - root - INFO - Frontend: 2025-03-27 22:06:04,914 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:06:04,914 - root - INFO - Frontend: 2025-03-27 22:06:04,914 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 22:06:04,915 - root - INFO - Frontend: 2025-03-27 22:06:04,915 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:06:04,915 - root - INFO - Frontend: 2025-03-27 22:06:04,915 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 22:06:04,916 - root - INFO - Frontend: 2025-03-27 22:06:04,916 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:06:04,916 - root - INFO - Frontend: 2025-03-27 22:06:04,916 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 22:06:04,916 - root - INFO - Frontend: 2025-03-27 22:06:04,916 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:06:04,916 - root - INFO - Frontend: 2025-03-27 22:06:04,916 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:06:04,916 - root - INFO - Frontend: 2025-03-27 22:06:04,916 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 22:06:04,916 - root - INFO - Frontend: 2025-03-27 22:06:04,916 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 22:06:04,917 - root - INFO - Frontend: 2025-03-27 22:06:04,917 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 22:06:04,917 - root - INFO - Frontend: 2025-03-27 22:06:04,917 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 22:06:04,917 - root - INFO - Frontend: 2025-03-27 22:06:04,917 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 22:06:04,917 - root - INFO - Frontend: 2025-03-27 22:06:04,917 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 22:06:04,918 - root - INFO - Frontend: 2025-03-27 22:06:04,918 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:06:04,918 - root - INFO - Frontend: 2025-03-27 22:06:04,918 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 22:06:04,919 - root - INFO - Frontend: 2025-03-27 22:06:04,919 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:06:04,919 - root - INFO - Frontend: 2025-03-27 22:06:04,919 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 22:06:04,920 - root - INFO - Frontend: 2025-03-27 22:06:04,920 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:06:04,920 - root - INFO - Frontend: 2025-03-27 22:06:04,920 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 22:06:04,920 - root - INFO - Frontend: 2025-03-27 22:06:04,920 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:06:04,920 - root - INFO - Frontend: 2025-03-27 22:06:04,920 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 22:06:04,921 - root - INFO - Frontend: 2025-03-27 22:06:04,921 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:06:04,921 - root - INFO - Frontend: 2025-03-27 22:06:04,921 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 22:06:04,921 - root - INFO - Frontend: 2025-03-27 22:06:04,921 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:06:04,921 - root - INFO - Frontend: 2025-03-27 22:06:04,921 - app.core.orchestrator - INFO - Received 3 signals from strategy module
2025-03-27 22:06:04,921 - root - INFO - Frontend: 2025-03-27 22:06:04,921 - app.core.orchestrator - INFO - Processing 3 trading signals
2025-03-27 22:06:04,921 - root - INFO - Frontend: 2025-03-27 22:06:04,921 - app.core.orchestrator - INFO - Simulation mode: Fetching portfolio data for balance check.
2025-03-27 22:06:04,921 - root - INFO - Frontend: 2025-03-27 22:06:04,921 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:07:04 WET)" (scheduled at 2025-03-27 22:06:04.873622+00:00)
2025-03-27 22:06:04,921 - root - INFO - Frontend: 2025-03-27 22:06:04,921 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:07:04 WET)" executed successfully
2025-03-27 22:06:04,922 - root - INFO - Frontend: 2025-03-27 22:06:04,922 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:06:04,922 - root - INFO - Frontend: 2025-03-27 22:06:04,922 - app.core.orchestrator - INFO - Simulation balance check: Available USDC from portfolio = 10000.0
2025-03-27 22:06:04,922 - root - INFO - Frontend: 2025-03-27 22:06:04,922 - app.core.orchestrator - INFO - Processed signals: 3 passed filtering
2025-03-27 22:06:04,923 - root - INFO - Frontend: 2025-03-27 22:06:04,922 - app.core.orchestrator - INFO - Generated 3 trading signals
2025-03-27 22:06:04,923 - root - INFO - Frontend: 2025-03-27 22:06:04,922 - app.core.orchestrator - INFO - Signal: BTC/USDC - buy at 87554.0
2025-03-27 22:06:04,923 - root - INFO - Frontend: 2025-03-27 22:06:04,923 - app.core.orchestrator - INFO - Signal: SOL/USDC - buy at 139.59
2025-03-27 22:06:04,923 - root - INFO - Frontend: 2025-03-27 22:06:04,923 - app.core.orchestrator - INFO - Signal: LINK/USDC - buy at 15.65
2025-03-27 22:06:04,923 - root - INFO - Frontend: 2025-03-27 22:06:04,923 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:07:04 WET)" executed successfully
2025-03-27 22:06:04,954 - root - INFO - Frontend: 2025-03-27 22:06:04,954 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:06:04,954 - root - INFO - Frontend: 2025-03-27 22:06:04,954 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:06:04,955 - root - INFO - Frontend: 2025-03-27 22:06:04,955 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:06:04,955 - root - INFO - Frontend: 2025-03-27 22:06:04,955 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:06:04.955489", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:06:04,955 - root - INFO - Frontend: 2025-03-27 22:06:04,955 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:06:04,955 - root - INFO - Frontend: 2025-03-27 22:06:04,955 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:06:05,340 - root - INFO - Frontend: 2025-03-27 22:06:05,340 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:06:05,752 - root - INFO - Frontend: 2025-03-27 22:06:05,751 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:06:06,058 - root - INFO - Frontend: 2025-03-27 22:06:06,058 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:06:06,359 - root - INFO - Frontend: 2025-03-27 22:06:06,359 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:06:06,650 - root - INFO - Frontend: 2025-03-27 22:06:06,650 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:06:06,967 - root - INFO - Frontend: 2025-03-27 22:06:06,967 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:06:07,266 - root - INFO - Frontend: 2025-03-27 22:06:07,266 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:06:07,644 - root - INFO - Frontend: 2025-03-27 22:06:07,641 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:06:07,943 - root - INFO - Frontend: 2025-03-27 22:06:07,943 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:06:08,226 - root - INFO - Frontend: 2025-03-27 22:06:08,226 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:06:08,604 - root - INFO - Frontend: 2025-03-27 22:06:08,604 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:06:09,016 - root - INFO - Frontend: 2025-03-27 22:06:09,016 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:06:09,321 - root - INFO - Frontend: 2025-03-27 22:06:09,321 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:06:09,730 - root - INFO - Frontend: 2025-03-27 22:06:09,730 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:06:10,028 - root - INFO - Frontend: 2025-03-27 22:06:10,028 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:06:10,346 - root - INFO - Frontend: 2025-03-27 22:06:10,346 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:06:10,753 - root - INFO - Frontend: 2025-03-27 22:06:10,753 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:06:11,060 - root - INFO - Frontend: 2025-03-27 22:06:11,060 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:06:11,370 - root - INFO - Frontend: 2025-03-27 22:06:11,370 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:06:11,661 - root - INFO - Frontend: 2025-03-27 22:06:11,660 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:06:11,970 - root - INFO - Frontend: 2025-03-27 22:06:11,970 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:06:12,280 - root - INFO - Frontend: 2025-03-27 22:06:12,280 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:06:12,588 - root - INFO - Frontend: 2025-03-27 22:06:12,588 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:06:12,885 - root - INFO - Frontend: 2025-03-27 22:06:12,885 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:06:13,203 - root - INFO - Frontend: 2025-03-27 22:06:13,203 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:07:04 WET)" executed successfully
2025-03-27 22:06:19,957 - root - INFO - Frontend: 2025-03-27 22:06:19,957 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:06:19,958 - root - INFO - Frontend: 2025-03-27 22:06:19,957 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:06:19,960 - root - INFO - Frontend: 2025-03-27 22:06:19,959 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:06:19,960 - root - INFO - Frontend: 2025-03-27 22:06:19,960 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:06:19.960031", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:06:19,960 - root - INFO - Frontend: 2025-03-27 22:06:19,960 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:06:19,960 - root - INFO - Frontend: 2025-03-27 22:06:19,960 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:06:34,875 - root - INFO - Frontend: 2025-03-27 22:06:34,875 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:07:04 WET)" (scheduled at 2025-03-27 22:06:34.873493+00:00)
2025-03-27 22:06:34,876 - root - INFO - Frontend: 2025-03-27 22:06:34,875 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:07:04 WET)" executed successfully
2025-03-27 22:06:34,961 - root - INFO - Frontend: 2025-03-27 22:06:34,961 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:06:34,961 - root - INFO - Frontend: 2025-03-27 22:06:34,961 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:06:34,962 - root - INFO - Frontend: 2025-03-27 22:06:34,962 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:06:34,963 - root - INFO - Frontend: 2025-03-27 22:06:34,963 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:06:34.962968", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:06:34,963 - root - INFO - Frontend: 2025-03-27 22:06:34,963 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:06:34,963 - root - INFO - Frontend: 2025-03-27 22:06:34,963 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:06:49,965 - root - INFO - Frontend: 2025-03-27 22:06:49,965 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:06:49,965 - root - INFO - Frontend: 2025-03-27 22:06:49,965 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:06:49,967 - root - INFO - Frontend: 2025-03-27 22:06:49,967 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:06:49,968 - root - INFO - Frontend: 2025-03-27 22:06:49,967 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:06:49.967817", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:06:49,968 - root - INFO - Frontend: 2025-03-27 22:06:49,967 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:06:49,968 - root - INFO - Frontend: 2025-03-27 22:06:49,968 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:06:55,102 - root - INFO - Frontend: INFO:     192.168.1.134:52568 - "GET / HTTP/1.1" 200 OK
2025-03-27 22:06:55,107 - root - INFO - Frontend: 2025-03-27 22:06:55,107 - __main__ - INFO - WebSocket client disconnected
2025-03-27 22:06:55,108 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 22:06:55,114 - root - INFO - Frontend: INFO:     192.168.1.134:52568 - "GET /manifest.json HTTP/1.1" 200 OK
2025-03-27 22:06:55,124 - root - INFO - Frontend: INFO:     192.168.1.134:52568 - "GET /static/js/main.2abb7c74.js HTTP/1.1" 304 Not Modified
2025-03-27 22:06:55,253 - root - INFO - Frontend: INFO:     ('192.168.1.134', 52569) - "WebSocket /ws" [accepted]
2025-03-27 22:06:55,253 - root - INFO - Frontend: 2025-03-27 22:06:55,253 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 22:06:55,253 - root - INFO - Frontend: 2025-03-27 22:06:55,253 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:06:55,253 - root - INFO - Frontend: 2025-03-27 22:06:55,253 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:06:55,253 - root - INFO - Frontend: INFO:     connection open
2025-03-27 22:06:55,256 - root - INFO - Frontend: 2025-03-27 22:06:55,256 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:06:55,257 - root - INFO - Frontend: 2025-03-27 22:06:55,256 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:06:55.256905", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:06:55,257 - root - INFO - Frontend: 2025-03-27 22:06:55,257 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:06:55,257 - root - INFO - Frontend: 2025-03-27 22:06:55,257 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:06:55,257 - root - INFO - Frontend: 2025-03-27 22:06:55,257 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:06:55.256905", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"], "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 22:06:56,292 - root - INFO - Frontend: INFO:     192.168.1.134:52568 - "GET / HTTP/1.1" 200 OK
2025-03-27 22:06:56,302 - root - INFO - Frontend: 2025-03-27 22:06:56,298 - __main__ - INFO - WebSocket client disconnected
2025-03-27 22:06:56,303 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 22:06:56,305 - root - INFO - Frontend: INFO:     192.168.1.134:52568 - "GET /manifest.json HTTP/1.1" 200 OK
2025-03-27 22:06:56,351 - root - INFO - Frontend: INFO:     ('192.168.1.134', 52570) - "WebSocket /ws" [accepted]
2025-03-27 22:06:56,352 - root - INFO - Frontend: 2025-03-27 22:06:56,351 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 22:06:56,352 - root - INFO - Frontend: 2025-03-27 22:06:56,351 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:06:56,352 - root - INFO - Frontend: 2025-03-27 22:06:56,351 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:06:56,352 - root - INFO - Frontend: INFO:     connection open
2025-03-27 22:06:56,353 - root - INFO - Frontend: 2025-03-27 22:06:56,353 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:06:56,353 - root - INFO - Frontend: 2025-03-27 22:06:56,353 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:06:56.353494", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:06:56,353 - root - INFO - Frontend: 2025-03-27 22:06:56,353 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:06:56,353 - root - INFO - Frontend: 2025-03-27 22:06:56,353 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:06:56,353 - root - INFO - Frontend: 2025-03-27 22:06:56,353 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:06:56.353494", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"], "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 22:07:03,420 - root - INFO - Frontend: 2025-03-27 22:07:03,420 - __main__ - INFO - WebSocket client disconnected
2025-03-27 22:07:03,421 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 22:07:04,875 - root - INFO - Frontend: 2025-03-27 22:07:04,875 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:07:34 WET)" (scheduled at 2025-03-27 22:07:04.873493+00:00)
2025-03-27 22:07:04,876 - root - INFO - Frontend: 2025-03-27 22:07:04,876 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:07:34 WET)" executed successfully
2025-03-27 22:07:04,876 - root - INFO - Frontend: 2025-03-27 22:07:04,876 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:08:04 WET)" (scheduled at 2025-03-27 22:07:04.873563+00:00)
2025-03-27 22:07:04,876 - root - INFO - Frontend: 2025-03-27 22:07:04,876 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:07:04,876 - root - INFO - Frontend: 2025-03-27 22:07:04,876 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:07:04,877 - root - INFO - Frontend: 2025-03-27 22:07:04,876 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:07:04,877 - root - INFO - Frontend: 2025-03-27 22:07:04,877 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:08:04 WET)" (scheduled at 2025-03-27 22:07:04.873595+00:00)
2025-03-27 22:07:04,877 - root - INFO - Frontend: 2025-03-27 22:07:04,877 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 22:07:04,877 - root - INFO - Frontend: 2025-03-27 22:07:04,877 - app.core.orchestrator - INFO - Using existing market data from store
2025-03-27 22:07:04,878 - root - INFO - Frontend: 2025-03-27 22:07:04,877 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 22:07:04,890 - root - INFO - Frontend: 2025-03-27 22:07:04,890 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:07:04,891 - root - INFO - Frontend: 2025-03-27 22:07:04,890 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 22:07:04,891 - root - INFO - Frontend: 2025-03-27 22:07:04,890 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 22:07:04,894 - root - INFO - Frontend: 2025-03-27 22:07:04,894 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 22:07:04,895 - root - INFO - Frontend: 2025-03-27 22:07:04,894 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 22:07:04,896 - root - INFO - Frontend: 2025-03-27 22:07:04,896 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 22:07:04,896 - root - INFO - Frontend: 2025-03-27 22:07:04,896 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 22:07:04,898 - root - INFO - Frontend: 2025-03-27 22:07:04,898 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:07:04,898 - root - INFO - Frontend: 2025-03-27 22:07:04,898 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 22:07:04,898 - root - INFO - Frontend: 2025-03-27 22:07:04,898 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:07:04,898 - root - INFO - Frontend: 2025-03-27 22:07:04,898 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 22:07:04,900 - root - INFO - Frontend: 2025-03-27 22:07:04,900 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:07:04,900 - root - INFO - Frontend: 2025-03-27 22:07:04,900 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 22:07:04,901 - root - INFO - Frontend: 2025-03-27 22:07:04,901 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:07:04,901 - root - INFO - Frontend: 2025-03-27 22:07:04,901 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 22:07:04,902 - root - INFO - Frontend: 2025-03-27 22:07:04,902 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:07:04,902 - root - INFO - Frontend: 2025-03-27 22:07:04,902 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 22:07:04,903 - root - INFO - Frontend: 2025-03-27 22:07:04,903 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:07:04,903 - root - INFO - Frontend: 2025-03-27 22:07:04,903 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:07:04,903 - root - INFO - Frontend: 2025-03-27 22:07:04,903 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 22:07:04,903 - root - INFO - Frontend: 2025-03-27 22:07:04,903 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 22:07:04,906 - root - INFO - Frontend: 2025-03-27 22:07:04,906 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:07:04,906 - root - INFO - Frontend: 2025-03-27 22:07:04,906 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 22:07:04,907 - root - INFO - Frontend: 2025-03-27 22:07:04,907 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:07:04,907 - root - INFO - Frontend: 2025-03-27 22:07:04,907 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 22:07:04,908 - root - INFO - Frontend: 2025-03-27 22:07:04,908 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 1 signals
2025-03-27 22:07:04,908 - root - INFO - Frontend: 2025-03-27 22:07:04,908 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 22:07:04,909 - root - INFO - Frontend: 2025-03-27 22:07:04,909 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:07:04,909 - root - INFO - Frontend: 2025-03-27 22:07:04,909 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 22:07:04,910 - root - INFO - Frontend: 2025-03-27 22:07:04,910 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:07:04,910 - root - INFO - Frontend: 2025-03-27 22:07:04,910 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 22:07:04,911 - root - INFO - Frontend: 2025-03-27 22:07:04,911 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:07:04,911 - root - INFO - Frontend: 2025-03-27 22:07:04,911 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 22:07:04,912 - root - INFO - Frontend: 2025-03-27 22:07:04,912 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:07:04,912 - root - INFO - Frontend: 2025-03-27 22:07:04,912 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 22:07:04,913 - root - INFO - Frontend: 2025-03-27 22:07:04,913 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:07:04,913 - root - INFO - Frontend: 2025-03-27 22:07:04,913 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:07:04,913 - root - INFO - Frontend: 2025-03-27 22:07:04,913 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 22:07:04,913 - root - INFO - Frontend: 2025-03-27 22:07:04,913 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 22:07:04,914 - root - INFO - Frontend: 2025-03-27 22:07:04,914 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 1 signals
2025-03-27 22:07:04,914 - root - INFO - Frontend: 2025-03-27 22:07:04,914 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 22:07:04,914 - root - INFO - Frontend: 2025-03-27 22:07:04,914 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:07:04,914 - root - INFO - Frontend: 2025-03-27 22:07:04,914 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 22:07:04,915 - root - INFO - Frontend: 2025-03-27 22:07:04,915 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 1 signals
2025-03-27 22:07:04,915 - root - INFO - Frontend: 2025-03-27 22:07:04,915 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 22:07:04,916 - root - INFO - Frontend: 2025-03-27 22:07:04,916 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:07:04,916 - root - INFO - Frontend: 2025-03-27 22:07:04,916 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 22:07:04,917 - root - INFO - Frontend: 2025-03-27 22:07:04,917 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:07:04,917 - root - INFO - Frontend: 2025-03-27 22:07:04,917 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 22:07:04,917 - root - INFO - Frontend: 2025-03-27 22:07:04,917 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:07:04,918 - root - INFO - Frontend: 2025-03-27 22:07:04,917 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 22:07:04,918 - root - INFO - Frontend: 2025-03-27 22:07:04,918 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:07:04,918 - root - INFO - Frontend: 2025-03-27 22:07:04,918 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 22:07:04,919 - root - INFO - Frontend: 2025-03-27 22:07:04,919 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:07:04,919 - root - INFO - Frontend: 2025-03-27 22:07:04,919 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:07:04,919 - root - INFO - Frontend: 2025-03-27 22:07:04,919 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 22:07:04,919 - root - INFO - Frontend: 2025-03-27 22:07:04,919 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 22:07:04,920 - root - INFO - Frontend: 2025-03-27 22:07:04,920 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:07:04,920 - root - INFO - Frontend: 2025-03-27 22:07:04,920 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 22:07:04,920 - root - INFO - Frontend: 2025-03-27 22:07:04,920 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:07:04,920 - root - INFO - Frontend: 2025-03-27 22:07:04,920 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 22:07:04,921 - root - INFO - Frontend: 2025-03-27 22:07:04,921 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:07:04,921 - root - INFO - Frontend: 2025-03-27 22:07:04,921 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 22:07:04,922 - root - INFO - Frontend: 2025-03-27 22:07:04,922 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:07:04,922 - root - INFO - Frontend: 2025-03-27 22:07:04,922 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 22:07:04,923 - root - INFO - Frontend: 2025-03-27 22:07:04,923 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:07:04,923 - root - INFO - Frontend: 2025-03-27 22:07:04,923 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 22:07:04,923 - root - INFO - Frontend: 2025-03-27 22:07:04,923 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:07:04,923 - root - INFO - Frontend: 2025-03-27 22:07:04,923 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 22:07:04,924 - root - INFO - Frontend: 2025-03-27 22:07:04,924 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:07:04,924 - root - INFO - Frontend: 2025-03-27 22:07:04,924 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 22:07:04,925 - root - INFO - Frontend: 2025-03-27 22:07:04,925 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:07:04,925 - root - INFO - Frontend: 2025-03-27 22:07:04,925 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:07:04,925 - root - INFO - Frontend: 2025-03-27 22:07:04,925 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 22:07:04,925 - root - INFO - Frontend: 2025-03-27 22:07:04,925 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 22:07:04,926 - root - INFO - Frontend: 2025-03-27 22:07:04,925 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 22:07:04,926 - root - INFO - Frontend: 2025-03-27 22:07:04,926 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 22:07:04,926 - root - INFO - Frontend: 2025-03-27 22:07:04,926 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 22:07:04,926 - root - INFO - Frontend: 2025-03-27 22:07:04,926 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 22:07:04,927 - root - INFO - Frontend: 2025-03-27 22:07:04,927 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:07:04,927 - root - INFO - Frontend: 2025-03-27 22:07:04,927 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 22:07:04,928 - root - INFO - Frontend: 2025-03-27 22:07:04,927 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:07:04,928 - root - INFO - Frontend: 2025-03-27 22:07:04,928 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 22:07:04,929 - root - INFO - Frontend: 2025-03-27 22:07:04,929 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:07:04,929 - root - INFO - Frontend: 2025-03-27 22:07:04,929 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 22:07:04,929 - root - INFO - Frontend: 2025-03-27 22:07:04,929 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:07:04,929 - root - INFO - Frontend: 2025-03-27 22:07:04,929 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 22:07:04,931 - root - INFO - Frontend: 2025-03-27 22:07:04,931 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:07:04,931 - root - INFO - Frontend: 2025-03-27 22:07:04,931 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 22:07:04,931 - root - INFO - Frontend: 2025-03-27 22:07:04,931 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:07:04,931 - root - INFO - Frontend: 2025-03-27 22:07:04,931 - app.core.orchestrator - INFO - Received 5 signals from strategy module
2025-03-27 22:07:04,931 - root - INFO - Frontend: 2025-03-27 22:07:04,931 - app.core.orchestrator - INFO - Processing 5 trading signals
2025-03-27 22:07:04,931 - root - INFO - Frontend: 2025-03-27 22:07:04,931 - app.core.orchestrator - INFO - Simulation mode: Fetching portfolio data for balance check.
2025-03-27 22:07:04,931 - root - INFO - Frontend: 2025-03-27 22:07:04,931 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:08:04 WET)" (scheduled at 2025-03-27 22:07:04.873622+00:00)
2025-03-27 22:07:04,931 - root - INFO - Frontend: 2025-03-27 22:07:04,931 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:08:04 WET)" executed successfully
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - app.core.orchestrator - INFO - Simulation balance check: Available USDC from portfolio = 10000.0
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - app.core.orchestrator - INFO - Processed signals: 5 passed filtering
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - app.core.orchestrator - INFO - Generated 5 trading signals
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - app.core.orchestrator - INFO - Signal: BTC/USDC - buy at 87554.0
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - app.core.orchestrator - INFO - Signal: ETH/USDC - sell at 2014.71
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - app.core.orchestrator - INFO - Signal: SOL/USDC - buy at 139.5
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - app.core.orchestrator - INFO - Signal: SOL/USDC - sell at 139.49
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - app.core.orchestrator - INFO - Signal: LINK/USDC - buy at 15.65
2025-03-27 22:07:04,932 - root - INFO - Frontend: 2025-03-27 22:07:04,932 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:08:04 WET)" executed successfully
2025-03-27 22:07:04,935 - root - INFO - Frontend: INFO:     ('192.168.1.134', 52571) - "WebSocket /ws" [accepted]
2025-03-27 22:07:04,935 - root - INFO - Frontend: 2025-03-27 22:07:04,935 - __main__ - INFO - WebSocket client connected. Total clients: 1
2025-03-27 22:07:04,935 - root - INFO - Frontend: 2025-03-27 22:07:04,935 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:07:04,935 - root - INFO - Frontend: 2025-03-27 22:07:04,935 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:07:04,935 - root - INFO - Frontend: INFO:     connection open
2025-03-27 22:07:04,936 - root - INFO - Frontend: 2025-03-27 22:07:04,936 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:07:04,936 - root - INFO - Frontend: 2025-03-27 22:07:04,936 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:07:04.936374", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:07:04,936 - root - INFO - Frontend: 2025-03-27 22:07:04,936 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:07:04,936 - root - INFO - Frontend: 2025-03-27 22:07:04,936 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:07:04,936 - root - INFO - Frontend: 2025-03-27 22:07:04,936 - __main__ - INFO - DEBUG - Portfolio data being sent to client: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:07:04.936374", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"], "total_balance": 10000.0, "available_balance": 10000.0, "positions": {}}
2025-03-27 22:07:04,969 - root - INFO - Frontend: 2025-03-27 22:07:04,969 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:07:04,969 - root - INFO - Frontend: 2025-03-27 22:07:04,969 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:07:04,970 - root - INFO - Frontend: 2025-03-27 22:07:04,970 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:07:04,970 - root - INFO - Frontend: 2025-03-27 22:07:04,970 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:07:04.970400", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:07:04,970 - root - INFO - Frontend: 2025-03-27 22:07:04,970 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:07:04,970 - root - INFO - Frontend: 2025-03-27 22:07:04,970 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:07:05,352 - root - INFO - Frontend: 2025-03-27 22:07:05,352 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:07:05,688 - root - INFO - Frontend: 2025-03-27 22:07:05,687 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:07:06,058 - root - INFO - Frontend: 2025-03-27 22:07:06,058 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:07:06,468 - root - INFO - Frontend: 2025-03-27 22:07:06,468 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:07:06,863 - root - INFO - Frontend: 2025-03-27 22:07:06,863 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:07:07,296 - root - INFO - Frontend: 2025-03-27 22:07:07,296 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:07:07,703 - root - INFO - Frontend: 2025-03-27 22:07:07,703 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:07:08,114 - root - INFO - Frontend: 2025-03-27 22:07:08,113 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:07:08,517 - root - INFO - Frontend: 2025-03-27 22:07:08,517 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:07:08,909 - root - INFO - Frontend: 2025-03-27 22:07:08,909 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:07:09,234 - root - INFO - Frontend: 2025-03-27 22:07:09,234 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:07:09,548 - root - INFO - Frontend: 2025-03-27 22:07:09,548 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:07:09,892 - root - INFO - Frontend: 2025-03-27 22:07:09,892 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:07:10,265 - root - INFO - Frontend: 2025-03-27 22:07:10,265 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:07:10,651 - root - INFO - Frontend: 2025-03-27 22:07:10,651 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:07:10,978 - root - INFO - Frontend: 2025-03-27 22:07:10,978 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:07:11,382 - root - INFO - Frontend: 2025-03-27 22:07:11,382 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:07:11,803 - root - INFO - Frontend: 2025-03-27 22:07:11,802 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:07:12,210 - root - INFO - Frontend: 2025-03-27 22:07:12,210 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:07:12,597 - root - INFO - Frontend: 2025-03-27 22:07:12,597 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:07:12,925 - root - INFO - Frontend: 2025-03-27 22:07:12,925 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:07:13,334 - root - INFO - Frontend: 2025-03-27 22:07:13,334 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:07:13,746 - root - INFO - Frontend: 2025-03-27 22:07:13,746 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:07:14,065 - root - INFO - Frontend: 2025-03-27 22:07:14,065 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:07:14,446 - root - INFO - Frontend: 2025-03-27 22:07:14,446 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:08:04 WET)" executed successfully
2025-03-27 22:07:19,972 - root - INFO - Frontend: 2025-03-27 22:07:19,972 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:07:19,972 - root - INFO - Frontend: 2025-03-27 22:07:19,972 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:07:19,974 - root - INFO - Frontend: 2025-03-27 22:07:19,974 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:07:19,974 - root - INFO - Frontend: 2025-03-27 22:07:19,974 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:07:19.974650", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:07:19,974 - root - INFO - Frontend: 2025-03-27 22:07:19,974 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:07:19,975 - root - INFO - Frontend: 2025-03-27 22:07:19,974 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:07:34,875 - root - INFO - Frontend: 2025-03-27 22:07:34,875 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:08:04 WET)" (scheduled at 2025-03-27 22:07:34.873493+00:00)
2025-03-27 22:07:34,876 - root - INFO - Frontend: 2025-03-27 22:07:34,875 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:08:04 WET)" executed successfully
2025-03-27 22:07:34,976 - root - INFO - Frontend: 2025-03-27 22:07:34,976 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:07:34,976 - root - INFO - Frontend: 2025-03-27 22:07:34,976 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:07:34,978 - root - INFO - Frontend: 2025-03-27 22:07:34,978 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:07:34,978 - root - INFO - Frontend: 2025-03-27 22:07:34,978 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:07:34.978384", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:07:34,978 - root - INFO - Frontend: 2025-03-27 22:07:34,978 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:07:34,978 - root - INFO - Frontend: 2025-03-27 22:07:34,978 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:07:49,980 - root - INFO - Frontend: 2025-03-27 22:07:49,980 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:07:49,981 - root - INFO - Frontend: 2025-03-27 22:07:49,980 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:07:49,981 - root - INFO - Frontend: 2025-03-27 22:07:49,981 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:07:49,982 - root - INFO - Frontend: 2025-03-27 22:07:49,982 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:07:49.981968", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:07:49,982 - root - INFO - Frontend: 2025-03-27 22:07:49,982 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:07:49,982 - root - INFO - Frontend: 2025-03-27 22:07:49,982 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:08:04,876 - root - INFO - Frontend: 2025-03-27 22:08:04,876 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:08:34 WET)" (scheduled at 2025-03-27 22:08:04.873493+00:00)
2025-03-27 22:08:04,877 - root - INFO - Frontend: 2025-03-27 22:08:04,876 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:08:34 WET)" executed successfully
2025-03-27 22:08:04,877 - root - INFO - Frontend: 2025-03-27 22:08:04,876 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:09:04 WET)" (scheduled at 2025-03-27 22:08:04.873563+00:00)
2025-03-27 22:08:04,877 - root - INFO - Frontend: 2025-03-27 22:08:04,876 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:08:04,877 - root - INFO - Frontend: 2025-03-27 22:08:04,876 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:08:04,877 - root - INFO - Frontend: 2025-03-27 22:08:04,877 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:08:04,878 - root - INFO - Frontend: 2025-03-27 22:08:04,878 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:09:04 WET)" (scheduled at 2025-03-27 22:08:04.873595+00:00)
2025-03-27 22:08:04,878 - root - INFO - Frontend: 2025-03-27 22:08:04,878 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 22:08:04,878 - root - INFO - Frontend: 2025-03-27 22:08:04,878 - app.core.orchestrator - INFO - Using existing market data from store
2025-03-27 22:08:04,878 - root - INFO - Frontend: 2025-03-27 22:08:04,878 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 22:08:04,890 - root - INFO - Frontend: 2025-03-27 22:08:04,890 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:08:04,890 - root - INFO - Frontend: 2025-03-27 22:08:04,890 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 22:08:04,890 - root - INFO - Frontend: 2025-03-27 22:08:04,890 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 22:08:04,893 - root - INFO - Frontend: 2025-03-27 22:08:04,892 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 22:08:04,893 - root - INFO - Frontend: 2025-03-27 22:08:04,892 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 22:08:04,893 - root - INFO - Frontend: 2025-03-27 22:08:04,893 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 22:08:04,893 - root - INFO - Frontend: 2025-03-27 22:08:04,893 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 22:08:04,894 - root - INFO - Frontend: 2025-03-27 22:08:04,894 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:08:04,894 - root - INFO - Frontend: 2025-03-27 22:08:04,894 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 22:08:04,894 - root - INFO - Frontend: 2025-03-27 22:08:04,894 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:08:04,895 - root - INFO - Frontend: 2025-03-27 22:08:04,894 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 22:08:04,896 - root - INFO - Frontend: 2025-03-27 22:08:04,895 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:08:04,896 - root - INFO - Frontend: 2025-03-27 22:08:04,896 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 22:08:04,896 - root - INFO - Frontend: 2025-03-27 22:08:04,896 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:08:04,896 - root - INFO - Frontend: 2025-03-27 22:08:04,896 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 22:08:04,898 - root - INFO - Frontend: 2025-03-27 22:08:04,898 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:08:04,898 - root - INFO - Frontend: 2025-03-27 22:08:04,898 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 22:08:04,899 - root - INFO - Frontend: 2025-03-27 22:08:04,898 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:08:04,899 - root - INFO - Frontend: 2025-03-27 22:08:04,899 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:08:04,899 - root - INFO - Frontend: 2025-03-27 22:08:04,899 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 22:08:04,899 - root - INFO - Frontend: 2025-03-27 22:08:04,899 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 22:08:04,900 - root - INFO - Frontend: 2025-03-27 22:08:04,900 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:08:04,900 - root - INFO - Frontend: 2025-03-27 22:08:04,900 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 22:08:04,900 - root - INFO - Frontend: 2025-03-27 22:08:04,900 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:08:04,900 - root - INFO - Frontend: 2025-03-27 22:08:04,900 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 22:08:04,903 - root - INFO - Frontend: 2025-03-27 22:08:04,903 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 1 signals
2025-03-27 22:08:04,903 - root - INFO - Frontend: 2025-03-27 22:08:04,903 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 22:08:04,904 - root - INFO - Frontend: 2025-03-27 22:08:04,904 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:08:04,904 - root - INFO - Frontend: 2025-03-27 22:08:04,904 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 22:08:04,905 - root - INFO - Frontend: 2025-03-27 22:08:04,905 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:08:04,905 - root - INFO - Frontend: 2025-03-27 22:08:04,905 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 22:08:04,905 - root - INFO - Frontend: 2025-03-27 22:08:04,905 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:08:04,905 - root - INFO - Frontend: 2025-03-27 22:08:04,905 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 22:08:04,908 - root - INFO - Frontend: 2025-03-27 22:08:04,908 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:08:04,908 - root - INFO - Frontend: 2025-03-27 22:08:04,908 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 22:08:04,909 - root - INFO - Frontend: 2025-03-27 22:08:04,909 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:08:04,910 - root - INFO - Frontend: 2025-03-27 22:08:04,909 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:08:04,910 - root - INFO - Frontend: 2025-03-27 22:08:04,909 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 22:08:04,910 - root - INFO - Frontend: 2025-03-27 22:08:04,909 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 22:08:04,911 - root - INFO - Frontend: 2025-03-27 22:08:04,910 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 1 signals
2025-03-27 22:08:04,911 - root - INFO - Frontend: 2025-03-27 22:08:04,910 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 22:08:04,912 - root - INFO - Frontend: 2025-03-27 22:08:04,912 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:08:04,912 - root - INFO - Frontend: 2025-03-27 22:08:04,912 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 22:08:04,915 - root - INFO - Frontend: 2025-03-27 22:08:04,915 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 1 signals
2025-03-27 22:08:04,915 - root - INFO - Frontend: 2025-03-27 22:08:04,915 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 22:08:04,916 - root - INFO - Frontend: 2025-03-27 22:08:04,916 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:08:04,916 - root - INFO - Frontend: 2025-03-27 22:08:04,916 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 22:08:04,918 - root - INFO - Frontend: 2025-03-27 22:08:04,917 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:08:04,918 - root - INFO - Frontend: 2025-03-27 22:08:04,917 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 22:08:04,919 - root - INFO - Frontend: 2025-03-27 22:08:04,918 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:08:04,919 - root - INFO - Frontend: 2025-03-27 22:08:04,919 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 22:08:04,921 - root - INFO - Frontend: 2025-03-27 22:08:04,921 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:08:04,921 - root - INFO - Frontend: 2025-03-27 22:08:04,921 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 22:08:04,922 - root - INFO - Frontend: 2025-03-27 22:08:04,922 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:08:04,922 - root - INFO - Frontend: 2025-03-27 22:08:04,922 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:08:04,922 - root - INFO - Frontend: 2025-03-27 22:08:04,922 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 22:08:04,923 - root - INFO - Frontend: 2025-03-27 22:08:04,922 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 22:08:04,926 - root - INFO - Frontend: 2025-03-27 22:08:04,925 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:08:04,926 - root - INFO - Frontend: 2025-03-27 22:08:04,925 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 22:08:04,927 - root - INFO - Frontend: 2025-03-27 22:08:04,927 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:08:04,927 - root - INFO - Frontend: 2025-03-27 22:08:04,927 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 22:08:04,929 - root - INFO - Frontend: 2025-03-27 22:08:04,929 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 1 signals
2025-03-27 22:08:04,929 - root - INFO - Frontend: 2025-03-27 22:08:04,929 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 22:08:04,930 - root - INFO - Frontend: 2025-03-27 22:08:04,930 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:08:04,930 - root - INFO - Frontend: 2025-03-27 22:08:04,930 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 22:08:04,931 - root - INFO - Frontend: 2025-03-27 22:08:04,931 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:08:04,932 - root - INFO - Frontend: 2025-03-27 22:08:04,931 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 22:08:04,932 - root - INFO - Frontend: 2025-03-27 22:08:04,932 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:08:04,932 - root - INFO - Frontend: 2025-03-27 22:08:04,932 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 22:08:04,934 - root - INFO - Frontend: 2025-03-27 22:08:04,934 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:08:04,934 - root - INFO - Frontend: 2025-03-27 22:08:04,934 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 22:08:04,935 - root - INFO - Frontend: 2025-03-27 22:08:04,935 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:08:04,935 - root - INFO - Frontend: 2025-03-27 22:08:04,935 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:08:04,935 - root - INFO - Frontend: 2025-03-27 22:08:04,935 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 22:08:04,935 - root - INFO - Frontend: 2025-03-27 22:08:04,935 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 22:08:04,937 - root - INFO - Frontend: 2025-03-27 22:08:04,936 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 22:08:04,937 - root - INFO - Frontend: 2025-03-27 22:08:04,936 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 22:08:04,937 - root - INFO - Frontend: 2025-03-27 22:08:04,937 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 22:08:04,937 - root - INFO - Frontend: 2025-03-27 22:08:04,937 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 22:08:04,939 - root - INFO - Frontend: 2025-03-27 22:08:04,938 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:08:04,939 - root - INFO - Frontend: 2025-03-27 22:08:04,938 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 22:08:04,940 - root - INFO - Frontend: 2025-03-27 22:08:04,940 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:08:04,940 - root - INFO - Frontend: 2025-03-27 22:08:04,940 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 22:08:04,941 - root - INFO - Frontend: 2025-03-27 22:08:04,941 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:08:04,942 - root - INFO - Frontend: 2025-03-27 22:08:04,941 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 22:08:04,943 - root - INFO - Frontend: 2025-03-27 22:08:04,943 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:08:04,943 - root - INFO - Frontend: 2025-03-27 22:08:04,943 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 22:08:04,945 - root - INFO - Frontend: 2025-03-27 22:08:04,945 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:08:04,945 - root - INFO - Frontend: 2025-03-27 22:08:04,945 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 22:08:04,945 - root - INFO - Frontend: 2025-03-27 22:08:04,945 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:08:04,945 - root - INFO - Frontend: 2025-03-27 22:08:04,945 - app.core.orchestrator - INFO - Received 6 signals from strategy module
2025-03-27 22:08:04,946 - root - INFO - Frontend: 2025-03-27 22:08:04,945 - app.core.orchestrator - INFO - Processing 6 trading signals
2025-03-27 22:08:04,946 - root - INFO - Frontend: 2025-03-27 22:08:04,945 - app.core.orchestrator - INFO - Simulation mode: Fetching portfolio data for balance check.
2025-03-27 22:08:04,946 - root - INFO - Frontend: 2025-03-27 22:08:04,946 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:09:04 WET)" (scheduled at 2025-03-27 22:08:04.873622+00:00)
2025-03-27 22:08:04,946 - root - INFO - Frontend: 2025-03-27 22:08:04,946 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:09:04 WET)" executed successfully
2025-03-27 22:08:04,948 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:08:04,948 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Simulation balance check: Available USDC from portfolio = 10000.0
2025-03-27 22:08:04,949 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Processed signals: 6 passed filtering
2025-03-27 22:08:04,949 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Generated 6 trading signals
2025-03-27 22:08:04,949 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Signal: BTC/USDC - buy at 87554.0
2025-03-27 22:08:04,949 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Signal: ETH/USDC - sell at 2014.6
2025-03-27 22:08:04,949 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Signal: SOL/USDC - buy at 139.44
2025-03-27 22:08:04,949 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Signal: SOL/USDC - sell at 139.43
2025-03-27 22:08:04,949 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Signal: XRP/USDC - sell at 2.3496
2025-03-27 22:08:04,949 - root - INFO - Frontend: 2025-03-27 22:08:04,948 - app.core.orchestrator - INFO - Signal: LINK/USDC - buy at 15.65
2025-03-27 22:08:04,949 - root - INFO - Frontend: 2025-03-27 22:08:04,949 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:09:04 WET)" executed successfully
2025-03-27 22:08:04,988 - root - INFO - Frontend: 2025-03-27 22:08:04,988 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:08:04,989 - root - INFO - Frontend: 2025-03-27 22:08:04,988 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:08:04,997 - root - INFO - Frontend: 2025-03-27 22:08:04,997 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:08:04,998 - root - INFO - Frontend: 2025-03-27 22:08:04,998 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:08:04.997924", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:08:04,998 - root - INFO - Frontend: 2025-03-27 22:08:04,998 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:08:04,998 - root - INFO - Frontend: 2025-03-27 22:08:04,998 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:08:05,351 - root - INFO - Frontend: 2025-03-27 22:08:05,351 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:08:05,759 - root - INFO - Frontend: 2025-03-27 22:08:05,759 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:08:06,165 - root - INFO - Frontend: 2025-03-27 22:08:06,165 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:08:06,477 - root - INFO - Frontend: 2025-03-27 22:08:06,477 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:08:06,767 - root - INFO - Frontend: 2025-03-27 22:08:06,767 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:08:07,086 - root - INFO - Frontend: 2025-03-27 22:08:07,085 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:08:07,493 - root - INFO - Frontend: 2025-03-27 22:08:07,492 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:08:07,902 - root - INFO - Frontend: 2025-03-27 22:08:07,902 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:08:08,209 - root - INFO - Frontend: 2025-03-27 22:08:08,209 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:08:08,507 - root - INFO - Frontend: 2025-03-27 22:08:08,507 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:08:08,824 - root - INFO - Frontend: 2025-03-27 22:08:08,824 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:08:09,234 - root - INFO - Frontend: 2025-03-27 22:08:09,234 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:08:09,594 - root - INFO - Frontend: 2025-03-27 22:08:09,594 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:08:09,912 - root - INFO - Frontend: 2025-03-27 22:08:09,912 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:08:10,196 - root - INFO - Frontend: 2025-03-27 22:08:10,196 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:08:10,493 - root - INFO - Frontend: 2025-03-27 22:08:10,493 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:08:10,871 - root - INFO - Frontend: 2025-03-27 22:08:10,871 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:08:11,280 - root - INFO - Frontend: 2025-03-27 22:08:11,280 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:08:11,690 - root - INFO - Frontend: 2025-03-27 22:08:11,690 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:08:11,990 - root - INFO - Frontend: 2025-03-27 22:08:11,989 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:08:12,301 - root - INFO - Frontend: 2025-03-27 22:08:12,301 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:08:12,644 - root - INFO - Frontend: 2025-03-27 22:08:12,644 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:08:12,956 - root - INFO - Frontend: 2025-03-27 22:08:12,956 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:08:13,259 - root - INFO - Frontend: 2025-03-27 22:08:13,259 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:08:13,555 - root - INFO - Frontend: 2025-03-27 22:08:13,554 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:09:04 WET)" executed successfully
2025-03-27 22:08:20,000 - root - INFO - Frontend: 2025-03-27 22:08:20,000 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:08:20,001 - root - INFO - Frontend: 2025-03-27 22:08:20,000 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:08:20,002 - root - INFO - Frontend: 2025-03-27 22:08:20,002 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:08:20,003 - root - INFO - Frontend: 2025-03-27 22:08:20,002 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:08:20.002855", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:08:20,003 - root - INFO - Frontend: 2025-03-27 22:08:20,002 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:08:20,003 - root - INFO - Frontend: 2025-03-27 22:08:20,003 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:08:34,876 - root - INFO - Frontend: 2025-03-27 22:08:34,876 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:09:04 WET)" (scheduled at 2025-03-27 22:08:34.873493+00:00)
2025-03-27 22:08:34,878 - root - INFO - Frontend: 2025-03-27 22:08:34,876 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:09:04 WET)" executed successfully
2025-03-27 22:08:35,004 - root - INFO - Frontend: 2025-03-27 22:08:35,004 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:08:35,005 - root - INFO - Frontend: 2025-03-27 22:08:35,004 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:08:35,006 - root - INFO - Frontend: 2025-03-27 22:08:35,006 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:08:35,006 - root - INFO - Frontend: 2025-03-27 22:08:35,006 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:08:35.006092", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:08:35,006 - root - INFO - Frontend: 2025-03-27 22:08:35,006 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:08:35,006 - root - INFO - Frontend: 2025-03-27 22:08:35,006 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:08:50,007 - root - INFO - Frontend: 2025-03-27 22:08:50,007 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:08:50,008 - root - INFO - Frontend: 2025-03-27 22:08:50,007 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:08:50,009 - root - INFO - Frontend: 2025-03-27 22:08:50,009 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:08:50,010 - root - INFO - Frontend: 2025-03-27 22:08:50,009 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:08:50.009873", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:08:50,010 - root - INFO - Frontend: 2025-03-27 22:08:50,010 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:08:50,010 - root - INFO - Frontend: 2025-03-27 22:08:50,010 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:09:04,875 - root - INFO - Frontend: 2025-03-27 22:09:04,875 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:09:34 WET)" (scheduled at 2025-03-27 22:09:04.873493+00:00)
2025-03-27 22:09:04,875 - root - INFO - Frontend: 2025-03-27 22:09:04,875 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:09:34 WET)" executed successfully
2025-03-27 22:09:04,876 - root - INFO - Frontend: 2025-03-27 22:09:04,875 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:10:04 WET)" (scheduled at 2025-03-27 22:09:04.873563+00:00)
2025-03-27 22:09:04,876 - root - INFO - Frontend: 2025-03-27 22:09:04,875 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:09:04,876 - root - INFO - Frontend: 2025-03-27 22:09:04,875 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:09:04,876 - root - INFO - Frontend: 2025-03-27 22:09:04,875 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:09:04,876 - root - INFO - Frontend: 2025-03-27 22:09:04,876 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:10:04 WET)" (scheduled at 2025-03-27 22:09:04.873595+00:00)
2025-03-27 22:09:04,876 - root - INFO - Frontend: 2025-03-27 22:09:04,876 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 22:09:04,876 - root - INFO - Frontend: 2025-03-27 22:09:04,876 - app.core.orchestrator - INFO - Using existing market data from store
2025-03-27 22:09:04,877 - root - INFO - Frontend: 2025-03-27 22:09:04,876 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 22:09:04,884 - root - INFO - Frontend: 2025-03-27 22:09:04,884 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:09:04,884 - root - INFO - Frontend: 2025-03-27 22:09:04,884 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 22:09:04,884 - root - INFO - Frontend: 2025-03-27 22:09:04,884 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 22:09:04,885 - root - INFO - Frontend: 2025-03-27 22:09:04,885 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 22:09:04,885 - root - INFO - Frontend: 2025-03-27 22:09:04,885 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 22:09:04,886 - root - INFO - Frontend: 2025-03-27 22:09:04,886 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 22:09:04,886 - root - INFO - Frontend: 2025-03-27 22:09:04,886 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 22:09:04,887 - root - INFO - Frontend: 2025-03-27 22:09:04,887 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:09:04,888 - root - INFO - Frontend: 2025-03-27 22:09:04,887 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 22:09:04,888 - root - INFO - Frontend: 2025-03-27 22:09:04,888 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:09:04,888 - root - INFO - Frontend: 2025-03-27 22:09:04,888 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 22:09:04,890 - root - INFO - Frontend: 2025-03-27 22:09:04,890 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:09:04,890 - root - INFO - Frontend: 2025-03-27 22:09:04,890 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 22:09:04,891 - root - INFO - Frontend: 2025-03-27 22:09:04,891 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:09:04,891 - root - INFO - Frontend: 2025-03-27 22:09:04,891 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 22:09:04,892 - root - INFO - Frontend: 2025-03-27 22:09:04,892 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:09:04,892 - root - INFO - Frontend: 2025-03-27 22:09:04,892 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 22:09:04,892 - root - INFO - Frontend: 2025-03-27 22:09:04,892 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:09:04,892 - root - INFO - Frontend: 2025-03-27 22:09:04,892 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:09:04,892 - root - INFO - Frontend: 2025-03-27 22:09:04,892 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 22:09:04,892 - root - INFO - Frontend: 2025-03-27 22:09:04,892 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 22:09:04,893 - root - INFO - Frontend: 2025-03-27 22:09:04,893 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:09:04,893 - root - INFO - Frontend: 2025-03-27 22:09:04,893 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 22:09:04,893 - root - INFO - Frontend: 2025-03-27 22:09:04,893 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:09:04,893 - root - INFO - Frontend: 2025-03-27 22:09:04,893 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 22:09:04,894 - root - INFO - Frontend: 2025-03-27 22:09:04,894 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:09:04,894 - root - INFO - Frontend: 2025-03-27 22:09:04,894 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 22:09:04,894 - root - INFO - Frontend: 2025-03-27 22:09:04,894 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:09:04,894 - root - INFO - Frontend: 2025-03-27 22:09:04,894 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 22:09:04,895 - root - INFO - Frontend: 2025-03-27 22:09:04,895 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:09:04,895 - root - INFO - Frontend: 2025-03-27 22:09:04,895 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 22:09:04,895 - root - INFO - Frontend: 2025-03-27 22:09:04,895 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:09:04,895 - root - INFO - Frontend: 2025-03-27 22:09:04,895 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 22:09:04,896 - root - INFO - Frontend: 2025-03-27 22:09:04,896 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:09:04,896 - root - INFO - Frontend: 2025-03-27 22:09:04,896 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 22:09:04,896 - root - INFO - Frontend: 2025-03-27 22:09:04,896 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:09:04,896 - root - INFO - Frontend: 2025-03-27 22:09:04,896 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:09:04,896 - root - INFO - Frontend: 2025-03-27 22:09:04,896 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 22:09:04,896 - root - INFO - Frontend: 2025-03-27 22:09:04,896 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 22:09:04,897 - root - INFO - Frontend: 2025-03-27 22:09:04,897 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 1 signals
2025-03-27 22:09:04,897 - root - INFO - Frontend: 2025-03-27 22:09:04,897 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 22:09:04,897 - root - INFO - Frontend: 2025-03-27 22:09:04,897 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:09:04,897 - root - INFO - Frontend: 2025-03-27 22:09:04,897 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 22:09:04,898 - root - INFO - Frontend: 2025-03-27 22:09:04,898 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:09:04,898 - root - INFO - Frontend: 2025-03-27 22:09:04,898 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 22:09:04,898 - root - INFO - Frontend: 2025-03-27 22:09:04,898 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:09:04,898 - root - INFO - Frontend: 2025-03-27 22:09:04,898 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 22:09:04,901 - root - INFO - Frontend: 2025-03-27 22:09:04,901 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:09:04,901 - root - INFO - Frontend: 2025-03-27 22:09:04,901 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 22:09:04,901 - root - INFO - Frontend: 2025-03-27 22:09:04,901 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:09:04,901 - root - INFO - Frontend: 2025-03-27 22:09:04,901 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 22:09:04,902 - root - INFO - Frontend: 2025-03-27 22:09:04,902 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:09:04,902 - root - INFO - Frontend: 2025-03-27 22:09:04,902 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 22:09:04,903 - root - INFO - Frontend: 2025-03-27 22:09:04,903 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:09:04,903 - root - INFO - Frontend: 2025-03-27 22:09:04,903 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:09:04,903 - root - INFO - Frontend: 2025-03-27 22:09:04,903 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 22:09:04,903 - root - INFO - Frontend: 2025-03-27 22:09:04,903 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 22:09:04,904 - root - INFO - Frontend: 2025-03-27 22:09:04,904 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:09:04,904 - root - INFO - Frontend: 2025-03-27 22:09:04,904 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 22:09:04,904 - root - INFO - Frontend: 2025-03-27 22:09:04,904 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:09:04,904 - root - INFO - Frontend: 2025-03-27 22:09:04,904 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 22:09:04,905 - root - INFO - Frontend: 2025-03-27 22:09:04,905 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 1 signals
2025-03-27 22:09:04,905 - root - INFO - Frontend: 2025-03-27 22:09:04,905 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 22:09:04,905 - root - INFO - Frontend: 2025-03-27 22:09:04,905 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:09:04,906 - root - INFO - Frontend: 2025-03-27 22:09:04,905 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 22:09:04,906 - root - INFO - Frontend: 2025-03-27 22:09:04,906 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:09:04,906 - root - INFO - Frontend: 2025-03-27 22:09:04,906 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 22:09:04,906 - root - INFO - Frontend: 2025-03-27 22:09:04,906 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:09:04,907 - root - INFO - Frontend: 2025-03-27 22:09:04,906 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 22:09:04,907 - root - INFO - Frontend: 2025-03-27 22:09:04,907 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:09:04,907 - root - INFO - Frontend: 2025-03-27 22:09:04,907 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 22:09:04,908 - root - INFO - Frontend: 2025-03-27 22:09:04,908 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:09:04,908 - root - INFO - Frontend: 2025-03-27 22:09:04,908 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:09:04,908 - root - INFO - Frontend: 2025-03-27 22:09:04,908 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 22:09:04,908 - root - INFO - Frontend: 2025-03-27 22:09:04,908 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 22:09:04,908 - root - INFO - Frontend: 2025-03-27 22:09:04,908 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 22:09:04,908 - root - INFO - Frontend: 2025-03-27 22:09:04,908 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 22:09:04,909 - root - INFO - Frontend: 2025-03-27 22:09:04,909 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 22:09:04,909 - root - INFO - Frontend: 2025-03-27 22:09:04,909 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 22:09:04,909 - root - INFO - Frontend: 2025-03-27 22:09:04,909 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:09:04,909 - root - INFO - Frontend: 2025-03-27 22:09:04,909 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 22:09:04,909 - root - INFO - Frontend: 2025-03-27 22:09:04,909 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:09:04,910 - root - INFO - Frontend: 2025-03-27 22:09:04,909 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 22:09:04,910 - root - INFO - Frontend: 2025-03-27 22:09:04,910 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:09:04,910 - root - INFO - Frontend: 2025-03-27 22:09:04,910 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 22:09:04,910 - root - INFO - Frontend: 2025-03-27 22:09:04,910 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:09:04,910 - root - INFO - Frontend: 2025-03-27 22:09:04,910 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 22:09:04,911 - root - INFO - Frontend: 2025-03-27 22:09:04,911 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:09:04,911 - root - INFO - Frontend: 2025-03-27 22:09:04,911 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 22:09:04,912 - root - INFO - Frontend: 2025-03-27 22:09:04,912 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:09:04,912 - root - INFO - Frontend: 2025-03-27 22:09:04,912 - app.core.orchestrator - INFO - Received 4 signals from strategy module
2025-03-27 22:09:04,912 - root - INFO - Frontend: 2025-03-27 22:09:04,912 - app.core.orchestrator - INFO - Processing 4 trading signals
2025-03-27 22:09:04,912 - root - INFO - Frontend: 2025-03-27 22:09:04,912 - app.core.orchestrator - INFO - Simulation mode: Fetching portfolio data for balance check.
2025-03-27 22:09:04,912 - root - INFO - Frontend: 2025-03-27 22:09:04,912 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:10:04 WET)" (scheduled at 2025-03-27 22:09:04.873622+00:00)
2025-03-27 22:09:04,912 - root - INFO - Frontend: 2025-03-27 22:09:04,912 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:10:04 WET)" executed successfully
2025-03-27 22:09:04,913 - root - INFO - Frontend: 2025-03-27 22:09:04,912 - apscheduler.executors.default - INFO - Running job "BotOrchestrator._ensure_position_monitoring (trigger: interval[0:05:00], next run at: 2025-03-27 22:14:04 WET)" (scheduled at 2025-03-27 22:09:04.873648+00:00)
2025-03-27 22:09:04,913 - root - INFO - Frontend: 2025-03-27 22:09:04,912 - apscheduler.executors.default - INFO - Job "BotOrchestrator._ensure_position_monitoring (trigger: interval[0:05:00], next run at: 2025-03-27 22:14:04 WET)" executed successfully
2025-03-27 22:09:04,914 - root - INFO - Frontend: 2025-03-27 22:09:04,914 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:09:04,914 - root - INFO - Frontend: 2025-03-27 22:09:04,914 - app.core.orchestrator - INFO - Simulation balance check: Available USDC from portfolio = 10000.0
2025-03-27 22:09:04,914 - root - INFO - Frontend: 2025-03-27 22:09:04,914 - app.core.orchestrator - INFO - Processed signals: 4 passed filtering
2025-03-27 22:09:04,914 - root - INFO - Frontend: 2025-03-27 22:09:04,914 - app.core.orchestrator - INFO - Generated 4 trading signals
2025-03-27 22:09:04,914 - root - INFO - Frontend: 2025-03-27 22:09:04,914 - app.core.orchestrator - INFO - Signal: BTC/USDC - buy at 87554.0
2025-03-27 22:09:04,914 - root - INFO - Frontend: 2025-03-27 22:09:04,914 - app.core.orchestrator - INFO - Signal: SOL/USDC - buy at 139.44
2025-03-27 22:09:04,914 - root - INFO - Frontend: 2025-03-27 22:09:04,914 - app.core.orchestrator - INFO - Signal: XRP/USDC - sell at 2.3506
2025-03-27 22:09:04,914 - root - INFO - Frontend: 2025-03-27 22:09:04,914 - app.core.orchestrator - INFO - Signal: LINK/USDC - buy at 15.65
2025-03-27 22:09:04,914 - root - INFO - Frontend: 2025-03-27 22:09:04,914 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:10:04 WET)" executed successfully
2025-03-27 22:09:05,012 - root - INFO - Frontend: 2025-03-27 22:09:05,012 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:09:05,012 - root - INFO - Frontend: 2025-03-27 22:09:05,012 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:09:05,013 - root - INFO - Frontend: 2025-03-27 22:09:05,013 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:09:05,013 - root - INFO - Frontend: 2025-03-27 22:09:05,013 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:09:05.013063", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:09:05,013 - root - INFO - Frontend: 2025-03-27 22:09:05,013 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:09:05,013 - root - INFO - Frontend: 2025-03-27 22:09:05,013 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:09:05,349 - root - INFO - Frontend: 2025-03-27 22:09:05,349 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:09:05,757 - root - INFO - Frontend: 2025-03-27 22:09:05,757 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:09:06,079 - root - INFO - Frontend: 2025-03-27 22:09:06,079 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:09:06,478 - root - INFO - Frontend: 2025-03-27 22:09:06,478 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:09:06,785 - root - INFO - Frontend: 2025-03-27 22:09:06,785 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:09:07,095 - root - INFO - Frontend: 2025-03-27 22:09:07,094 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:09:07,415 - root - INFO - Frontend: 2025-03-27 22:09:07,415 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:09:07,811 - root - INFO - Frontend: 2025-03-27 22:09:07,811 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:09:08,375 - root - INFO - Frontend: 2025-03-27 22:09:08,374 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:09:08,719 - root - INFO - Frontend: 2025-03-27 22:09:08,719 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:09:09,029 - root - INFO - Frontend: 2025-03-27 22:09:09,029 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:09:09,342 - root - INFO - Frontend: 2025-03-27 22:09:09,342 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:09:09,640 - root - INFO - Frontend: 2025-03-27 22:09:09,640 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:09:09,958 - root - INFO - Frontend: 2025-03-27 22:09:09,958 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:09:10,254 - root - INFO - Frontend: 2025-03-27 22:09:10,254 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:09:10,575 - root - INFO - Frontend: 2025-03-27 22:09:10,575 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:09:10,981 - root - INFO - Frontend: 2025-03-27 22:09:10,980 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:09:11,391 - root - INFO - Frontend: 2025-03-27 22:09:11,391 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:09:11,800 - root - INFO - Frontend: 2025-03-27 22:09:11,800 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:09:12,099 - root - INFO - Frontend: 2025-03-27 22:09:12,099 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:09:12,415 - root - INFO - Frontend: 2025-03-27 22:09:12,415 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:09:12,824 - root - INFO - Frontend: 2025-03-27 22:09:12,824 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:09:13,234 - root - INFO - Frontend: 2025-03-27 22:09:13,234 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:09:13,568 - root - INFO - Frontend: 2025-03-27 22:09:13,568 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:09:13,866 - root - INFO - Frontend: 2025-03-27 22:09:13,866 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:10:04 WET)" executed successfully
2025-03-27 22:09:20,015 - root - INFO - Frontend: 2025-03-27 22:09:20,015 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:09:20,016 - root - INFO - Frontend: 2025-03-27 22:09:20,015 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:09:20,017 - root - INFO - Frontend: 2025-03-27 22:09:20,017 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:09:20,017 - root - INFO - Frontend: 2025-03-27 22:09:20,017 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:09:20.017644", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:09:20,018 - root - INFO - Frontend: 2025-03-27 22:09:20,017 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:09:20,018 - root - INFO - Frontend: 2025-03-27 22:09:20,017 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:09:34,877 - root - INFO - Frontend: 2025-03-27 22:09:34,876 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:10:04 WET)" (scheduled at 2025-03-27 22:09:34.873493+00:00)
2025-03-27 22:09:34,878 - root - INFO - Frontend: 2025-03-27 22:09:34,877 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:10:04 WET)" executed successfully
2025-03-27 22:09:35,020 - root - INFO - Frontend: 2025-03-27 22:09:35,020 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:09:35,020 - root - INFO - Frontend: 2025-03-27 22:09:35,020 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:09:35,021 - root - INFO - Frontend: 2025-03-27 22:09:35,021 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:09:35,022 - root - INFO - Frontend: 2025-03-27 22:09:35,022 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:09:35.021953", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:09:35,022 - root - INFO - Frontend: 2025-03-27 22:09:35,022 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:09:35,022 - root - INFO - Frontend: 2025-03-27 22:09:35,022 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:09:50,027 - root - INFO - Frontend: 2025-03-27 22:09:50,025 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:09:50,028 - root - INFO - Frontend: 2025-03-27 22:09:50,026 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:09:50,029 - root - INFO - Frontend: 2025-03-27 22:09:50,029 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:09:50,029 - root - INFO - Frontend: 2025-03-27 22:09:50,029 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:09:50.029574", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:09:50,030 - root - INFO - Frontend: 2025-03-27 22:09:50,029 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:09:50,030 - root - INFO - Frontend: 2025-03-27 22:09:50,030 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:10:04,878 - root - INFO - Frontend: 2025-03-27 22:10:04,877 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:10:34 WET)" (scheduled at 2025-03-27 22:10:04.873493+00:00)
2025-03-27 22:10:04,879 - root - INFO - Frontend: 2025-03-27 22:10:04,878 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:10:34 WET)" executed successfully
2025-03-27 22:10:04,879 - root - INFO - Frontend: 2025-03-27 22:10:04,878 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:11:04 WET)" (scheduled at 2025-03-27 22:10:04.873563+00:00)
2025-03-27 22:10:04,879 - root - INFO - Frontend: 2025-03-27 22:10:04,879 - app.core.orchestrator - INFO - Collecting market data...
2025-03-27 22:10:04,879 - root - INFO - Frontend: 2025-03-27 22:10:04,879 - app.core.orchestrator - INFO - Collecting market data for 5 trading pairs: BTC/USDC, ETH/USDC, SOL/USDC, XRP/USDC, LINK/USDC
2025-03-27 22:10:04,879 - root - INFO - Frontend: 2025-03-27 22:10:04,879 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1m)
2025-03-27 22:10:04,880 - root - INFO - Frontend: 2025-03-27 22:10:04,880 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:11:04 WET)" (scheduled at 2025-03-27 22:10:04.873595+00:00)
2025-03-27 22:10:04,881 - root - INFO - Frontend: 2025-03-27 22:10:04,880 - app.core.orchestrator - INFO - Generating trading signals...
2025-03-27 22:10:04,881 - root - INFO - Frontend: 2025-03-27 22:10:04,880 - app.core.orchestrator - INFO - Using existing market data from store
2025-03-27 22:10:04,881 - root - INFO - Frontend: 2025-03-27 22:10:04,880 - app.core.orchestrator - INFO - Calling strategy_module.generate_signals
2025-03-27 22:10:04,897 - root - INFO - Frontend: 2025-03-27 22:10:04,896 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:10:04,897 - root - INFO - Frontend: 2025-03-27 22:10:04,896 - app.strategies.strategy - INFO - Selected optimal timeframe for BTC/USDC: 1h
2025-03-27 22:10:04,897 - root - INFO - Frontend: 2025-03-27 22:10:04,897 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1h
2025-03-27 22:10:04,900 - root - INFO - Frontend: 2025-03-27 22:10:04,900 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1h, received 1 signals
2025-03-27 22:10:04,900 - root - INFO - Frontend: 2025-03-27 22:10:04,900 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1h
2025-03-27 22:10:04,901 - root - INFO - Frontend: 2025-03-27 22:10:04,901 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1h, received 0 signals
2025-03-27 22:10:04,901 - root - INFO - Frontend: 2025-03-27 22:10:04,901 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 1m
2025-03-27 22:10:04,902 - root - INFO - Frontend: 2025-03-27 22:10:04,902 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:10:04,902 - root - INFO - Frontend: 2025-03-27 22:10:04,902 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 1m
2025-03-27 22:10:04,903 - root - INFO - Frontend: 2025-03-27 22:10:04,903 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 1m, received 0 signals
2025-03-27 22:10:04,904 - root - INFO - Frontend: 2025-03-27 22:10:04,903 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 5m
2025-03-27 22:10:04,905 - root - INFO - Frontend: 2025-03-27 22:10:04,905 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:10:04,905 - root - INFO - Frontend: 2025-03-27 22:10:04,905 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 5m
2025-03-27 22:10:04,905 - root - INFO - Frontend: 2025-03-27 22:10:04,905 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 5m, received 0 signals
2025-03-27 22:10:04,905 - root - INFO - Frontend: 2025-03-27 22:10:04,905 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for BTC/USDC on 15m
2025-03-27 22:10:04,907 - root - INFO - Frontend: 2025-03-27 22:10:04,906 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:10:04,907 - root - INFO - Frontend: 2025-03-27 22:10:04,907 - app.strategies.strategy - INFO - Calling rsi.generate_signals for BTC/USDC on 15m
2025-03-27 22:10:04,907 - root - INFO - Frontend: 2025-03-27 22:10:04,907 - app.strategies.strategy - INFO - Finished rsi.generate_signals for BTC/USDC on 15m, received 0 signals
2025-03-27 22:10:04,907 - root - INFO - Frontend: 2025-03-27 22:10:04,907 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:10:04,907 - root - INFO - Frontend: 2025-03-27 22:10:04,907 - app.strategies.strategy - INFO - Selected optimal timeframe for ETH/USDC: 1h
2025-03-27 22:10:04,907 - root - INFO - Frontend: 2025-03-27 22:10:04,907 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1h
2025-03-27 22:10:04,909 - root - INFO - Frontend: 2025-03-27 22:10:04,909 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:10:04,909 - root - INFO - Frontend: 2025-03-27 22:10:04,909 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1h
2025-03-27 22:10:04,910 - root - INFO - Frontend: 2025-03-27 22:10:04,910 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1h, received 0 signals
2025-03-27 22:10:04,910 - root - INFO - Frontend: 2025-03-27 22:10:04,910 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 1m
2025-03-27 22:10:04,911 - root - INFO - Frontend: 2025-03-27 22:10:04,911 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:10:04,911 - root - INFO - Frontend: 2025-03-27 22:10:04,911 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 1m
2025-03-27 22:10:04,911 - root - INFO - Frontend: 2025-03-27 22:10:04,911 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 1m, received 0 signals
2025-03-27 22:10:04,911 - root - INFO - Frontend: 2025-03-27 22:10:04,911 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 5m
2025-03-27 22:10:04,912 - root - INFO - Frontend: 2025-03-27 22:10:04,912 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:10:04,913 - root - INFO - Frontend: 2025-03-27 22:10:04,912 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 5m
2025-03-27 22:10:04,913 - root - INFO - Frontend: 2025-03-27 22:10:04,913 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 5m, received 0 signals
2025-03-27 22:10:04,913 - root - INFO - Frontend: 2025-03-27 22:10:04,913 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for ETH/USDC on 15m
2025-03-27 22:10:04,915 - root - INFO - Frontend: 2025-03-27 22:10:04,915 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:10:04,915 - root - INFO - Frontend: 2025-03-27 22:10:04,915 - app.strategies.strategy - INFO - Calling rsi.generate_signals for ETH/USDC on 15m
2025-03-27 22:10:04,915 - root - INFO - Frontend: 2025-03-27 22:10:04,915 - app.strategies.strategy - INFO - Finished rsi.generate_signals for ETH/USDC on 15m, received 0 signals
2025-03-27 22:10:04,915 - root - INFO - Frontend: 2025-03-27 22:10:04,915 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:10:04,915 - root - INFO - Frontend: 2025-03-27 22:10:04,915 - app.strategies.strategy - INFO - Selected optimal timeframe for SOL/USDC: 1h
2025-03-27 22:10:04,915 - root - INFO - Frontend: 2025-03-27 22:10:04,915 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1h
2025-03-27 22:10:04,916 - root - INFO - Frontend: 2025-03-27 22:10:04,916 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1h, received 1 signals
2025-03-27 22:10:04,916 - root - INFO - Frontend: 2025-03-27 22:10:04,916 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1h
2025-03-27 22:10:04,917 - root - INFO - Frontend: 2025-03-27 22:10:04,917 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1h, received 0 signals
2025-03-27 22:10:04,917 - root - INFO - Frontend: 2025-03-27 22:10:04,917 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 1m
2025-03-27 22:10:04,918 - root - INFO - Frontend: 2025-03-27 22:10:04,918 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:10:04,918 - root - INFO - Frontend: 2025-03-27 22:10:04,918 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 1m
2025-03-27 22:10:04,918 - root - INFO - Frontend: 2025-03-27 22:10:04,918 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 1m, received 0 signals
2025-03-27 22:10:04,918 - root - INFO - Frontend: 2025-03-27 22:10:04,918 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 5m
2025-03-27 22:10:04,919 - root - INFO - Frontend: 2025-03-27 22:10:04,919 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:10:04,919 - root - INFO - Frontend: 2025-03-27 22:10:04,919 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 5m
2025-03-27 22:10:04,920 - root - INFO - Frontend: 2025-03-27 22:10:04,920 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 5m, received 0 signals
2025-03-27 22:10:04,920 - root - INFO - Frontend: 2025-03-27 22:10:04,920 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for SOL/USDC on 15m
2025-03-27 22:10:04,921 - root - INFO - Frontend: 2025-03-27 22:10:04,921 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:10:04,921 - root - INFO - Frontend: 2025-03-27 22:10:04,921 - app.strategies.strategy - INFO - Calling rsi.generate_signals for SOL/USDC on 15m
2025-03-27 22:10:04,922 - root - INFO - Frontend: 2025-03-27 22:10:04,922 - app.strategies.strategy - INFO - Finished rsi.generate_signals for SOL/USDC on 15m, received 0 signals
2025-03-27 22:10:04,922 - root - INFO - Frontend: 2025-03-27 22:10:04,922 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:10:04,922 - root - INFO - Frontend: 2025-03-27 22:10:04,922 - app.strategies.strategy - INFO - Selected optimal timeframe for XRP/USDC: 1h
2025-03-27 22:10:04,922 - root - INFO - Frontend: 2025-03-27 22:10:04,922 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1h
2025-03-27 22:10:04,922 - root - INFO - Frontend: 2025-03-27 22:10:04,922 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:10:04,922 - root - INFO - Frontend: 2025-03-27 22:10:04,922 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1h
2025-03-27 22:10:04,923 - root - INFO - Frontend: 2025-03-27 22:10:04,923 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1h, received 0 signals
2025-03-27 22:10:04,923 - root - INFO - Frontend: 2025-03-27 22:10:04,923 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 1m
2025-03-27 22:10:04,924 - root - INFO - Frontend: 2025-03-27 22:10:04,924 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:10:04,924 - root - INFO - Frontend: 2025-03-27 22:10:04,924 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 1m
2025-03-27 22:10:04,924 - root - INFO - Frontend: 2025-03-27 22:10:04,924 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 1m, received 0 signals
2025-03-27 22:10:04,924 - root - INFO - Frontend: 2025-03-27 22:10:04,924 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 5m
2025-03-27 22:10:04,926 - root - INFO - Frontend: 2025-03-27 22:10:04,926 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:10:04,929 - root - INFO - Frontend: 2025-03-27 22:10:04,926 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 5m
2025-03-27 22:10:04,929 - root - INFO - Frontend: 2025-03-27 22:10:04,929 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 5m, received 0 signals
2025-03-27 22:10:04,929 - root - INFO - Frontend: 2025-03-27 22:10:04,929 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for XRP/USDC on 15m
2025-03-27 22:10:04,931 - root - INFO - Frontend: 2025-03-27 22:10:04,931 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:10:04,931 - root - INFO - Frontend: 2025-03-27 22:10:04,931 - app.strategies.strategy - INFO - Calling rsi.generate_signals for XRP/USDC on 15m
2025-03-27 22:10:04,931 - root - INFO - Frontend: 2025-03-27 22:10:04,931 - app.strategies.strategy - INFO - Finished rsi.generate_signals for XRP/USDC on 15m, received 0 signals
2025-03-27 22:10:04,931 - root - INFO - Frontend: 2025-03-27 22:10:04,931 - app.strategies.timeframe_selector - INFO - Model not trained, using default timeframe: 1h
2025-03-27 22:10:04,931 - root - INFO - Frontend: 2025-03-27 22:10:04,931 - app.strategies.strategy - INFO - Selected optimal timeframe for LINK/USDC: 1h
2025-03-27 22:10:04,931 - root - INFO - Frontend: 2025-03-27 22:10:04,931 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1h
2025-03-27 22:10:04,932 - root - INFO - Frontend: 2025-03-27 22:10:04,932 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1h, received 1 signals
2025-03-27 22:10:04,932 - root - INFO - Frontend: 2025-03-27 22:10:04,932 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1h
2025-03-27 22:10:04,933 - root - INFO - Frontend: 2025-03-27 22:10:04,933 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1h, received 0 signals
2025-03-27 22:10:04,933 - root - INFO - Frontend: 2025-03-27 22:10:04,933 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 1m
2025-03-27 22:10:04,934 - root - INFO - Frontend: 2025-03-27 22:10:04,933 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:10:04,934 - root - INFO - Frontend: 2025-03-27 22:10:04,934 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 1m
2025-03-27 22:10:04,934 - root - INFO - Frontend: 2025-03-27 22:10:04,934 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 1m, received 0 signals
2025-03-27 22:10:04,934 - root - INFO - Frontend: 2025-03-27 22:10:04,934 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 5m
2025-03-27 22:10:04,935 - root - INFO - Frontend: 2025-03-27 22:10:04,935 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:10:04,935 - root - INFO - Frontend: 2025-03-27 22:10:04,935 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 5m
2025-03-27 22:10:04,935 - root - INFO - Frontend: 2025-03-27 22:10:04,935 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 5m, received 0 signals
2025-03-27 22:10:04,935 - root - INFO - Frontend: 2025-03-27 22:10:04,935 - app.strategies.strategy - INFO - Calling ma_crossover.generate_signals for LINK/USDC on 15m
2025-03-27 22:10:04,936 - root - INFO - Frontend: 2025-03-27 22:10:04,936 - app.strategies.strategy - INFO - Finished ma_crossover.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:10:04,936 - root - INFO - Frontend: 2025-03-27 22:10:04,936 - app.strategies.strategy - INFO - Calling rsi.generate_signals for LINK/USDC on 15m
2025-03-27 22:10:04,936 - root - INFO - Frontend: 2025-03-27 22:10:04,936 - app.strategies.strategy - INFO - Finished rsi.generate_signals for LINK/USDC on 15m, received 0 signals
2025-03-27 22:10:04,936 - root - INFO - Frontend: 2025-03-27 22:10:04,936 - app.core.orchestrator - INFO - Received 3 signals from strategy module
2025-03-27 22:10:04,936 - root - INFO - Frontend: 2025-03-27 22:10:04,936 - app.core.orchestrator - INFO - Processing 3 trading signals
2025-03-27 22:10:04,936 - root - INFO - Frontend: 2025-03-27 22:10:04,936 - app.core.orchestrator - INFO - Simulation mode: Fetching portfolio data for balance check.
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,936 - apscheduler.executors.default - INFO - Running job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:11:04 WET)" (scheduled at 2025-03-27 22:10:04.873622+00:00)
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,937 - apscheduler.executors.default - INFO - Job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:11:04 WET)" executed successfully
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,937 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,937 - app.core.orchestrator - INFO - Simulation balance check: Available USDC from portfolio = 10000.0
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,937 - app.core.orchestrator - INFO - Processed signals: 3 passed filtering
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,937 - app.core.orchestrator - INFO - Generated 3 trading signals
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,937 - app.core.orchestrator - INFO - Signal: BTC/USDC - buy at 87554.0
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,937 - app.core.orchestrator - INFO - Signal: SOL/USDC - buy at 139.47
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,937 - app.core.orchestrator - INFO - Signal: LINK/USDC - buy at 15.65
2025-03-27 22:10:04,937 - root - INFO - Frontend: 2025-03-27 22:10:04,937 - apscheduler.executors.default - INFO - Job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:11:04 WET)" executed successfully
2025-03-27 22:10:05,032 - root - INFO - Frontend: 2025-03-27 22:10:05,032 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:10:05,032 - root - INFO - Frontend: 2025-03-27 22:10:05,032 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:10:05,033 - root - INFO - Frontend: 2025-03-27 22:10:05,033 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:10:05,033 - root - INFO - Frontend: 2025-03-27 22:10:05,033 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:10:05.033228", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:10:05,033 - root - INFO - Frontend: 2025-03-27 22:10:05,033 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:10:05,033 - root - INFO - Frontend: 2025-03-27 22:10:05,033 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:10:05,467 - root - INFO - Frontend: 2025-03-27 22:10:05,467 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (5m)
2025-03-27 22:10:05,888 - root - INFO - Frontend: 2025-03-27 22:10:05,888 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (15m)
2025-03-27 22:10:06,270 - root - INFO - Frontend: 2025-03-27 22:10:06,269 - app.exchange.manager - INFO - Fetching OHLCV data for BTCUSDC (1h)
2025-03-27 22:10:06,913 - root - INFO - Frontend: 2025-03-27 22:10:06,913 - app.exchange.manager - INFO - Fetching ticker for BTCUSDC
2025-03-27 22:10:07,293 - root - INFO - Frontend: 2025-03-27 22:10:07,293 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1m)
2025-03-27 22:10:07,636 - root - INFO - Frontend: 2025-03-27 22:10:07,636 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (5m)
2025-03-27 22:10:08,038 - root - INFO - Frontend: 2025-03-27 22:10:08,038 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (15m)
2025-03-27 22:10:08,444 - root - INFO - Frontend: 2025-03-27 22:10:08,444 - app.exchange.manager - INFO - Fetching OHLCV data for ETHUSDC (1h)
2025-03-27 22:10:08,854 - root - INFO - Frontend: 2025-03-27 22:10:08,853 - app.exchange.manager - INFO - Fetching ticker for ETHUSDC
2025-03-27 22:10:09,343 - root - INFO - Frontend: 2025-03-27 22:10:09,343 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1m)
2025-03-27 22:10:09,693 - root - INFO - Frontend: 2025-03-27 22:10:09,693 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (5m)
2025-03-27 22:10:10,037 - root - INFO - Frontend: 2025-03-27 22:10:10,036 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (15m)
2025-03-27 22:10:10,370 - root - INFO - Frontend: 2025-03-27 22:10:10,369 - app.exchange.manager - INFO - Fetching OHLCV data for SOLUSDC (1h)
2025-03-27 22:10:11,105 - root - INFO - Frontend: 2025-03-27 22:10:11,105 - app.exchange.manager - INFO - Fetching ticker for SOLUSDC
2025-03-27 22:10:11,493 - root - INFO - Frontend: 2025-03-27 22:10:11,493 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1m)
2025-03-27 22:10:11,924 - root - INFO - Frontend: 2025-03-27 22:10:11,924 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (5m)
2025-03-27 22:10:12,336 - root - INFO - Frontend: 2025-03-27 22:10:12,335 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (15m)
2025-03-27 22:10:12,739 - root - INFO - Frontend: 2025-03-27 22:10:12,739 - app.exchange.manager - INFO - Fetching OHLCV data for XRPUSDC (1h)
2025-03-27 22:10:13,253 - root - INFO - Frontend: 2025-03-27 22:10:13,253 - app.exchange.manager - INFO - Fetching ticker for XRPUSDC
2025-03-27 22:10:13,643 - root - INFO - Frontend: 2025-03-27 22:10:13,643 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1m)
2025-03-27 22:10:14,070 - root - INFO - Frontend: 2025-03-27 22:10:14,070 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (5m)
2025-03-27 22:10:14,485 - root - INFO - Frontend: 2025-03-27 22:10:14,485 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (15m)
2025-03-27 22:10:14,895 - root - INFO - Frontend: 2025-03-27 22:10:14,895 - app.exchange.manager - INFO - Fetching OHLCV data for LINKUSDC (1h)
2025-03-27 22:10:15,407 - root - INFO - Frontend: 2025-03-27 22:10:15,407 - app.exchange.manager - INFO - Fetching ticker for LINKUSDC
2025-03-27 22:10:15,798 - root - INFO - Frontend: 2025-03-27 22:10:15,797 - apscheduler.executors.default - INFO - Job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:11:04 WET)" executed successfully
2025-03-27 22:10:20,035 - root - INFO - Frontend: 2025-03-27 22:10:20,035 - app.ml.model - INFO - Returning ML metrics: Status 'unavailable', Models: 3
2025-03-27 22:10:20,035 - root - INFO - Frontend: 2025-03-27 22:10:20,035 - __main__ - INFO - Successfully retrieved real ML metrics.
2025-03-27 22:10:20,036 - root - INFO - Frontend: 2025-03-27 22:10:20,036 - app.core.orchestrator - INFO - Portfolio data retrieved directly from database
2025-03-27 22:10:20,036 - root - INFO - Frontend: 2025-03-27 22:10:20,036 - __main__ - INFO - Portfolio data structure: {"status": "available", "total_balance_usdc": 10000.0, "available_usdc": 10000.0, "allocated_balance": 0.0, "total_positions_value": 0.0, "open_positions": {}, "open_positions_count": 0, "win_rate": 0.0, "total_trades": 0, "total_profit": 0.0, "total_loss": 0.0, "net_profit": 0.0, "pnl_24h": 0.0, "timestamp": "2025-03-27T22:10:20.036658", "active_pairs": ["BTC/USDC", "ETH/USDC", "SOL/USDC", "XRP/USDC", "LINK/USDC"]}
2025-03-27 22:10:20,037 - root - INFO - Frontend: 2025-03-27 22:10:20,036 - __main__ - INFO - Portfolio data keys after transformation: ['active_pairs', 'allocated_balance', 'available_balance', 'available_usdc', 'net_profit', 'open_positions', 'open_positions_count', 'pnl_24h', 'positions', 'status', 'timestamp', 'total_balance', 'total_balance_usdc', 'total_loss', 'total_positions_value', 'total_profit', 'total_trades', 'win_rate']
2025-03-27 22:10:20,037 - root - INFO - Frontend: 2025-03-27 22:10:20,036 - __main__ - INFO - Final portfolio data structure for frontend: {"status": "str", "total_balance_usdc": "float", "available_usdc": "float", "allocated_balance": "float", "total_positions_value": "float", "open_positions": "dict", "open_positions_count": "int", "win_rate": "float", "total_trades": "int", "total_profit": "float", "total_loss": "float", "net_profit": "float", "pnl_24h": "float", "timestamp": "str", "active_pairs": "list", "total_balance": "float", "available_balance": "float", "positions": "dict"}
2025-03-27 22:10:28,749 - root - INFO - Frontend: INFO:     Shutting down
2025-03-27 22:10:28,750 - root - INFO - Frontend: 2025-03-27 22:10:28,750 - __main__ - INFO - WebSocket client disconnected
2025-03-27 22:10:28,751 - root - INFO - Frontend: INFO:     connection closed
2025-03-27 22:10:28,851 - root - INFO - Frontend: INFO:     Waiting for application shutdown.
2025-03-27 22:10:28,851 - root - INFO - Frontend: 2025-03-27 22:10:28,851 - app.core.orchestrator - INFO - Stopping trading bot
2025-03-27 22:10:28,852 - root - INFO - Frontend: 2025-03-27 22:10:28,851 - app.core.orchestrator - INFO - Shutting down scheduler
2025-03-27 22:10:28,852 - root - INFO - Frontend: 2025-03-27 22:10:28,851 - app.core.orchestrator - INFO - Scheduler shut down
2025-03-27 22:10:28,852 - root - INFO - Frontend: 2025-03-27 22:10:28,851 - app.core.orchestrator - INFO - Trading bot stopped successfully
2025-03-27 22:10:28,852 - root - INFO - Frontend: 2025-03-27 22:10:28,852 - app.utils.notification_system - INFO - [NOTICE] SYSTEM - Trading Bot Stopped: Trading bot has been stopped after running for 0.1 hours
2025-03-27 22:10:28,852 - root - INFO - Frontend: 2025-03-27 22:10:28,852 - app.utils.notification_system - INFO - Additional data: {
2025-03-27 22:10:28,852 - root - INFO - Frontend: "run_duration_hours": "0.1",
2025-03-27 22:10:28,852 - root - INFO - Frontend: "trades_executed": 0,
2025-03-27 22:10:28,852 - root - INFO - Frontend: "profit_loss": "$0.00"
2025-03-27 22:10:28,852 - root - INFO - Frontend: }
2025-03-27 22:10:28,853 - root - INFO - Frontend: 2025-03-27 22:10:28,852 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-03-27 22:10:28,853 - root - INFO - Frontend: INFO:     Application shutdown complete.
2025-03-27 22:10:28,853 - root - INFO - Frontend: INFO:     Finished server process [82497]
2025-03-27 22:10:28,864 - root - INFO - Frontend: Exception ignored in: <module 'threading' from '/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py'>
2025-03-27 22:10:28,865 - root - INFO - Frontend: Traceback (most recent call last):
2025-03-27 22:10:28,865 - root - INFO - Frontend: File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/threading.py", line 1448, in _shutdown
2025-03-27 22:10:28,867 - root - INFO - Frontend: lock.acquire()
2025-03-27 22:10:28,867 - root - INFO - Frontend: KeyboardInterrupt:
2025-03-27 22:10:29,359 - root - ERROR - Frontend process exited unexpectedly
2025-03-27 22:10:29,360 - root - INFO - Attempting to restart frontend...
2025-03-27 22:10:29,360 - root - INFO - Starting frontend server...
2025-03-27 22:10:29,363 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator.update_heartbeat (trigger: interval[0:00:30], next run at: 2025-03-27 22:10:29 WET)" was missed by 0:00:29.434313
2025-03-27 22:10:29,370 - root - INFO - Frontend: ==== Starting Trading Bot Frontend ====
2025-03-27 22:10:29,373 - root - INFO - Frontend: Frontend directory: /Users/carloslarramba/Documents/Projects2025/Refactored_ML/app/frontend
2025-03-27 22:10:29,465 - root - INFO - Frontend: Using Node.js v23.10.0 and npm 10.9.2
2025-03-27 22:10:29,465 - root - INFO - Frontend: Dependencies already installed
2025-03-27 22:10:29,465 - root - INFO - Frontend: Building React app...
2025-03-27 22:10:29,529 - root - INFO - Frontend: 
2025-03-27 22:10:29,529 - root - INFO - Frontend: > trading-bot-dashboard@0.1.0 build
2025-03-27 22:10:29,529 - root - INFO - Frontend: > DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true react-scripts build
2025-03-27 22:10:29,529 - root - INFO - Frontend: 
2025-03-27 22:10:29,596 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator.collect_market_data (trigger: interval[0:01:00], next run at: 2025-03-27 22:10:29 WET)" was missed by 0:00:59.667348
2025-03-27 22:10:29,597 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator.generate_signals (trigger: interval[0:01:00], next run at: 2025-03-27 22:10:29 WET)" was missed by 0:00:59.667432
2025-03-27 22:10:29,597 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator.update_position_prices (trigger: interval[0:01:00], next run at: 2025-03-27 22:10:29 WET)" was missed by 0:00:59.667436
2025-03-27 22:10:29,597 - apscheduler.executors.default - WARNING - Run time of job "BotOrchestrator._ensure_position_monitoring (trigger: interval[0:05:00], next run at: 2025-03-27 22:13:29 WET)" was missed by 0:01:59.667437
